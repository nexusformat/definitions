<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2014-2024 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXcg_polygon_set" extends="NXcg_primitive_set" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <!--Users can take advantage of NXcg_polygon_set to describe such complexes
when using the defines_plc and related topological and boundary constraint
descriptors.-->
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="d">
            <doc>
                 The dimensionality, which has to be either 2 or 3.
            </doc>
        </symbol>
        <symbol name="c">
            <doc>
                 The cardinality of the set, i.e. the number of polygons.
            </doc>
        </symbol>
        <!--n_unique: Number of unique points supporting the polygons.-->
        <symbol name="n_total">
            <doc>
                 The total number of vertices when visiting every polygon.
            </doc>
        </symbol>
    </symbols>
    <!--
somewhat redundant as there is NXoff_geometry but easier to understand
-->
    <doc>
         Computational geometry description of a set of polygons in Euclidean space.
         
         Polygons are specialized polylines:
         
         * A polygon is a geometric primitive that is bounded by a closed polyline
         * All vertices of this polyline lay in the d-1 dimensional plane.
           whereas vertices of a polyline do not necessarily lay on a plane.
         * A polygon has at least three vertices.
         
         Each polygon is built from a sequence of vertices (points with identifiers).
         The members of a set of polygons may have a different number of vertices.
         Sometimes a collection/set of polygons is referred to as a soup of polygons.
         
         As three-dimensional objects, a set of polygons can be used to define the
         hull of what is effectively a polyhedron; however users are advised to use
         the specific :ref:`NXcg_polyhedron_set` base class if they wish to describe closed
         polyhedra. Even more general complexes can be thought of. An example are the
         so-called piecewise-linear complexes used in the TetGen library.
         
         As these complexes can have holes though, polyhedra without holes are one
         subclass of such complexes, users should rather design an own
         base class e.g. NXcg_polytope_set to describe such even more
         complex primitives instead of abusing this base class for such purposes.
    </doc>
    <field name="number_of_total_vertices" type="NX_INT" units="NX_UNITLESS">
        <doc>
             The total number of vertices in the set.
        </doc>
    </field>
    <!--detailed mesh-based representation-->
    <group name="polygons" type="NXcg_face_list_data_structure">
        <doc>
             Combined storage of all primitives of all polygons.
        </doc>
    </group>
    <group name="polygonID" type="NXcg_face_list_data_structure">
        <doc>
             Individual storage of the mesh of each polygon.
        </doc>
    </group>
    <group name="polygon_half_edgeID" type="NXcg_half_edge_data_structure">
        <doc>
             Individual storage of each polygon as a graph.
        </doc>
    </group>
    <!--properties of the polygon primitives-->
    <field name="edge_length" type="NX_NUMBER" units="NX_LENGTH">
        <doc>
             For each polygon its accumulated length along its edges.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="interior_angle" type="NX_NUMBER" units="NX_ANGLE">
        <doc>
             Interior angles for each polygon. There are as many values per polygon
             as the are number_of_vertices.
             The angle is the angle at the specific vertex, i.e. between the adjoining
             edges of the vertex according to the sequence in the polygons array.
             Usually, the winding_order field is required to interpret the value.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_total"/>
        </dimensions>
    </field>
    <field name="shape" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Curvature type:
             
             * 0 - unspecified,
             * 1 - convex,
             * 2 - concave
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
</definition>
