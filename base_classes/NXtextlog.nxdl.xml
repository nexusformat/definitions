<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl" ?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2008-2025 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition
    name="NXtextlog"
    type="group"
    extends="NXobject"
    category="base"
    xmlns="http://definition.nexusformat.org/nxdl/3.1"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd"
    >
    
    <symbols>
        <doc>
          Symbols used below to illustrate the rank and sizes of datasets
        </doc>    
        <symbol name="n"><doc>Number of logged values</doc></symbol>
    </symbols>

    <doc>
        Textual Information recorded as a function of time.

        This is very similar to an :ref:`NXlog` but aimed at character
        rather than numeric data. It is to cover use cases when character
        data is to be recorded but using a large number of e.g. :ref:`NXnote`
        classes is undesirable.
        
        It would be used for cases like:

        - Status or error messages from hardware or software
        - Character based metadata e.g. labels that may vary during data collection

        Data is stored with times at which they were measured as elapsed time
        since a starting time recorded in ISO8601 format. The time units are
        specified in the units attribute. An optional scaling attribute
        can be used to accomodate non standard clocks.

        In order to make random access to timestamped data faster there is an optional array pair of
        ``cue_timestamp_zero`` and ``cue_index``. The ``cue_timestamp_zero`` will
        contain coarser timestamps than in the time array, say
        every five minutes. The ``cue_index`` will then contain the
        index into the time,value pair of arrays for that
        coarser ``cue_timestamp_zero``.

    </doc>

    <field name="time" type="NX_NUMBER" units="NX_TIME">
        <doc>
            Time of logged entry. The times are relative to the "start" attribute
            and in the units specified in the "units"
            attribute. Please note that absolute
            timestamps under unix are relative to ``1970-01-01T00:00:00.0Z``.

            The "scaling_factor" attribute, when present, has to be applied to the time values in order
            to arrive at the units specified in the units attribute. The "scaling_factor" allows
            for arbitrary time units such as ticks of some hardware clock.
        </doc>
        <dimensions rank="1">
           <dim index="1" value="n" />
        </dimensions>
        <attribute name="start" type="NX_DATE_TIME" />
        <attribute name="scaling_factor" type="NX_NUMBER" />
    </field>
    <field name="value" type="NX_CHAR" >
        <doc>
            String array of logged values, same length and dimensionality
            as ``time`` array field. If you have stored multiple items here and
            wish each to be interpreted separately by the reader then you can specify 
            a "separator" attribute to indicate how to split them up. However you should
            consider whether it is clearer to write multiple ``value`` elements with the
            same ``time``, or separate NXtextlog instances, instead.           
        </doc>
        <dimensions rank="1">
           <dim index="1" value="n" />
        </dimensions>
        <attribute name="separator" type="NX_CHAR">
          <doc>
            Optional character string that can be used to specify how to split a
            text ``value`` into multiple items.
          </doc>
        </attribute>
    </field>
    <field name="description">
        <doc>Description of logged value</doc>
    </field>
    <field name="duration" type="NX_FLOAT" units="NX_ANY">
        <doc>Total time log was taken</doc>
    </field>
    <field name="cue_timestamp_zero" type="NX_NUMBER" units="NX_TIME">
        <doc>
            Timestamps matching the corresponding cue_index into the
            time, value pair.
        </doc>
        <attribute name="start" type="NX_DATE_TIME">
            <doc>If missing start is assumed to be the same as for "time".</doc>
        </attribute>
        <attribute name="scaling_factor" type="NX_NUMBER">
            <doc>If missing start is assumed to be the same as for "time".</doc>
        </attribute>
    </field>
    <field name="cue_index" type="NX_INT">
      <doc>
          Index into the time, value pair matching the corresponding
          cue_timestamp_zero.
      </doc>
    </field>
</definition>
