<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2022-2025 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<!--
The so-called spectrum or sets of (weighted) alpha shapes includes the convex hull of a point set.-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXcg_alpha_complex" extends="NXcg_primitive" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <doc>
         Computational geometry of alpha complexes (alpha shapes or alpha wrappings) about primitives.
         
         For details see:
         
         * https://dx.doi.org/10.1109/TIT.1983.1056714 for 2D,
         * https://dx.doi.org/10.1145/174462.156635 for 3D,
         * https://dl.acm.org/doi/10.5555/871114 for weighted, and
         * https://doc.cgal.org/latest/Alpha_shapes_3 for 3D implementation of alpha shapes, and
         * https://doc.cgal.org/latest/Manual/packages.html#PkgAlphaWrap3 for 3D alpha wrappings
         
         in CGAL, the Computational Geometry Algorithms Library respectively.
         As a starting point, we follow the conventions of the CGAL library.
         
         In general, an alpha complex is a not necessarily connected or not necessarily pure complex,
         i.e. singular faces may exist. The number of cells, faces, and edges depends on how a specific
         alpha complex is filtered for lower-dimensional simplices. The fields is_regularized and
         regularization can be used to provide details about regularization procedures.
    </doc>
    <field name="type">
        <doc>
             Type of alpha complex following the terminology used by CGAL for now.
             
             Alpha_shape means meshes created using one of the alpha_shape algorithm.
             Alpha_wrapping means meshes created using the alpha_wrapping algorithm.
        </doc>
        <enumeration>
            <item value="convex_hull"/>
            <item value="alpha_shape"/>
            <item value="alpha_wrapping"/>
        </enumeration>
    </field>
    <field name="regularization">
        <doc>
             Human-readable description about regularization procedures.
        </doc>
    </field>
    <field name="is_regularized" type="NX_BOOLEAN">
        <doc>
             Was the alpha complex regularized, i.e. have singular faces been removed, or not.
        </doc>
    </field>
    <field name="alpha" type="NX_NUMBER" units="NX_ANY">
        <doc>
             The alpha parameter, i.e. the squared radius of the alpha-sphere
             that is used when computing the alpha complex.
        </doc>
    </field>
    <field name="offset" type="NX_NUMBER" units="NX_LENGTH">
        <doc>
             The offset distance parameter used when computing alpha_wrappings.
        </doc>
    </field>
    <!--check again carefully the CGAL documentation talks about, for 3D, the square of the radius!-->
    <group type="NXcg_point">
        <doc>
             Point cloud serving as input for the computation of the alpha complex.
        </doc>
    </group>
    <group name="TRIANGLE_SOUP" type="NXcg_triangle" nameType="any">
        <doc>
             Triangle soup serving as input for the computation of the alpha complex.
        </doc>
    </group>
    <group name="ALPHA_COMPLEX" type="NXcg_triangle" nameType="any">
        <doc>
             Triangle mesh representing the output of the computation, i.e. the alpha complex.
        </doc>
    </group>
    <group name="TETRAHEDRALIZATION" type="NXcg_tetrahedron" nameType="any">
        <doc>
             Tetrahedra representing an interior volume of the alpha complex (if such exists).
        </doc>
    </group>
</definition>
