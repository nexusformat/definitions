<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl" ?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2008-2020 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition name="NXdata" 
	type="group" 
	extends="NXobject"
	category="base"
	ignoreExtraFields="true"
	ignoreExtraAttributes="true" 
	xmlns="http://definition.nexusformat.org/nxdl/3.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd"
	>
	
	<!-- 
		The ignoreExtra* attributes are used in the definition to
		avoid warning messages that would be generated from unexpected fields or attributes.
		Since common use of NXdata indicates field names of any value, _many_
		instances of this class would generate a warning message during validation
		without this attribute being set to "true".
	-->

	<symbols>
		<doc>These symbols will be used below to coordinate fields with the same shape.</doc>
		<symbol name="dataRank"><doc>rank of the ``DATA`` field</doc></symbol>
		<symbol name="n"><doc>length of the ``AXIS`` field</doc></symbol>
	</symbols>
	
	<attribute name="auxiliary_signals">
		<doc>
			.. index:: plotting
			
			Array of strings holding the names of additional signals to
			be plotted with the default signal (specified by the
			``signal`` attribute).  Each auxiliary signal needs to be of
			the same shape as the default signal.
			
			..  NIAC2018:
			    https://www.nexusformat.org/NIAC2018Minutes.html
		</doc>
	</attribute>
	<attribute name="signal">
		<doc>
			.. index:: plotting
			
			Declares which field contains the default plottable data. 
			The value is the name of the field to be plotted.
			A field of this name *must* exist (either as field 
			or as a link to a field in another group).
			
			It is recommended (as of NIAC2014) to use this attribute
			rather than adding a signal attribute to the dataset.
			See https://www.nexusformat.org/2014_How_to_find_default_data.html
			for a summary of the discussion.
		</doc>
	</attribute>
	<attribute name="axes">
		<doc>
			.. index:: plotting
			
			String array that defines the names of independent data fields used 
			in the default plot for each of the dimensions of the *signal* field.
			One entry is provided for every dimension in the *signal* field.
			The field(s) named in this attribute *must* exist. 
			
			An axis slice is specified using a field named 
			``AXIS_indices`` as described below (where the text shown here
			as ``AXIS`` is to be replaced by the actual field name).
			
			When no default axis is available for a particular dimension 
			of the plottable data, use a "." in that position.  
			Such as::
			
				@axes=["time", ".", "."]
			
			In this example, since there are three items in the list, the 
			*signal* field must must be a three-dimensional array (rank=3).  The 
			first dimension is described by the values of a one-dimensional 
			array named ``time`` while the other two dimensions have no fields 
			to be used as dimension scales. If the dimension scale does not 
			exist, it is assumed the data will be plotted against the 
			corresponding array index.
			
			See examples provided on the NeXus wiki:
			https://www.nexusformat.org/2014_axes_and_uncertainties.html
			
			If there are no axes at all (such as with a stack of images), 
			the axes attribute can be omitted.
		</doc>
	</attribute>
	<attribute name="AXIS_indices">
		<!-- 
			nxdl.xsd rules do not allow us to show this as a variable name 
			- we'll use ALL CAPS (see #562)
		-->
		<!-- AXIS_indices documentation copied from datarules.rst -->
		<doc>
			Each ``AXIS_indices`` attribute indicates the dependency
			relationship of the ``AXIS`` field (where ``AXIS`` 
			is the name of a field that exists in this ``NXdata`` group) 
			with one or more dimensions of the plottable data.
		
			Integer array that defines the indices of the *signal* field 
			(that field will be a multidimensional array)
			which need to be used in the *AXIS* field in 
			order to reference the corresponding axis value.
			
			The first index of an array is ``0`` (zero).
			
			Here, *AXIS* is to be replaced by the name of each 
			field described in the ``axes`` attribute.  

			An example with 2-D data, :math:`d(t,P)`, will illustrate::
			
			  data_2d:NXdata
				@signal="data"
				@axes=["time", "pressure"]
				@time_indices=0
				@pressure_indices=1
				data: float[1000,20]
				time: float[1000]
				pressure: float[20]
			
			This attribute should be provided in all situations. 
			
			.. note::  Attributes potentially containing multiple values 
			   (axes and _indices) are to be written as string or integer arrays, 
			   to avoid string parsing in reading applications.
		</doc>
	</attribute>
	
	<doc>
		:ref:`NXdata` describes the plottable data and related dimension scales. 
		
		.. index:: plotting
		
		It is recommended that there is at least one :ref:`NXdata` group 
		in each :ref:`NXentry` group.  
		The ``signal`` and ``axes`` attributes of the ``data`` group define 
		which fields are plottable data and which are the independent variables,
		or *dimension scales*, respectively.
		
		:ref:`NXdata` is used to implement one of the basic motivations in NeXus,
		to identify plottable data in each :ref:`NXentry`.  The actual data
		might be stored in another group and linked to the :ref:`NXdata` group.

		..note :: Note that, in the following, ``DATA`` and ``AXIS`` 
				represent the names of fields containing the plottable data and 
				axes, respectively. The names are not fixed by the standard.  

		* Each :ref:`NXdata` group will define only one field
		  containing plottable data, one for each of the dimension scales, and, 
		  optionally, associated uncertainties. Other fields may be present in 
		  the group.
		* The plottable data may be of arbitrary rank up to a maximum
		  of ``NX_MAXRANK=32``.
		* The name of the plottable data will be defined by the value of 
		  the group ``signal`` attribute, such as::
		  
		    data:NXdata
		      @signal = "counts"
		      @axes = "mr"
		      @mr_indices = 0
		      counts: float[100]  --> the default dependent data
		      mr: float[100]  --> the default independent data
		  
		  The field named in the ``signal`` attribute **must** exist, either
		  directly as a field or defined through a link.
		
		* If available, the standard deviations of the data are to be
		  stored in a field of the same rank and dimensions, either with the 
		  name ``DATA_errors`` or with a name specified in the data's 
		  ``uncertainties`` attribute. 

		* For each data dimension of size ``n``, there should be a 
		  one-dimensional array of size ``n`` or ``n+1``, which contain the 
		  *dimension scales* of the data,  *i.e*., the values of the independent 
		  variables at which the data is measured, such as scattering angle or 
		  energy transfer (size ``n``) or the bin boundaries when the data is
		  histogrammed (size ``n+1 ``).
		
		.. index:: link
		.. index:: axes (attribute)

		* The group ``axes`` attribute will list these *dimension scales*.
		  associated with the plottable data in the order of their respective
		  dimension, *i.e.*, starting with the slowest-changing dimension in 
		  row major order.
		
		The preferred method to associate each data dimension with
		its respective dimension scale is to specify the field name
		of each dimension scale in the group ``axes`` attribute as a string list.
		Here is an example for 2-D data, *data*, plotted 
		against *time*, and *pressure*.  (An additional *temperature* data set 
		is provided and could be selected as an alternate for the *pressure* 
		axis.)::

		  data_2d:NXdata
		    @signal="data"
		    @axes=["time", "pressure"]
		    @pressure_indices=1
		    @temperature_indices=1
		    @time_indices=0
		    data: float[1000,20]
		    pressure: float[20]
		    temperature: float[20]
		    time: float[1000]

		.. rubric:: Old methods to identify the plottable data
		
		There are two older methods of associating 
		each data dimension to its respective dimension scale.
		Neither should be used when writing new data files, but
		client software should expect to see legacy data files
		written with any of these methods.
		
		  * One method adds the ``axes`` attribute to the data, rather than to
		    the group. This is not recommended because the data field could be
		    linked from another group, which does not contain all the 
		    *dimension scales*.
		
		  * The oldest method adds an ``axis`` attribute to each
		    *dimension scale* set to an integer corresponding to the 
		    corresponding dimension.

		.. index: !plot; axis label
		   plot, axis units
		   units
		   dimension scale

		Each axis of the plot may be labeled with information from the 
		dimension scale for that axis.  The optional ``@long_name`` attribute
		is provided as the axis label default.  If ``@long_name`` is not
		defined, then use the name of the dimension scale.  A ``@units`` attribute,
		if available, may be added to the axis label for further description.
		See the section :ref:`Design-Units` for more information.

		.. index: !plot; axis title

		The optional ``title`` field, if available, provides a suggested
		title for the plot.  If no ``title`` field is found in the :ref:`NXdata`
		group, look for a ``title`` field in the parent :ref:`NXentry` group,
		with a fallback to displaying the path to the :ref:`NXdata` group.

		NeXus is about how to find and annotate the data to be plotted 
		but not to describe how the data is to be plotted.
		(https://www.nexusformat.org/NIAC2018Minutes.html#nxdata-plottype--attribute)
	</doc>
	<field name="AXIS" type="NX_NUMBER" nameType="any">
		<doc>
	 		Dimension scale defining an axis of the data. There should be one
	 		of these for each dimension of the ``DATA`` field.
	 		Client is responsible for defining the dimensions of the data.
	 		The name of this field may be changed to fit the circumstances.
	 		Standard NeXus client tools will use the attributes to determine
	 		how to use this field.
	 	</doc>
		<dimensions rank="1">
			<doc>
				A *dimension scale* must have a rank of 1 and has length ``n``
				or ``n+1``.
			</doc>
			<dim index="1" value="n"/>
		</dimensions>
		<attribute name="long_name"><doc>Axis label</doc></attribute>
		<attribute name="distribution" type="NX_BOOLEAN">
			<doc>
				``0|false``: single value, 
				``1|true``: multiple values
			</doc>
		</attribute>
		<attribute name="first_good" type="NX_INT"><doc>Index of first good value</doc></attribute>
		<attribute name="last_good" type="NX_INT"><doc>Index of last good value</doc></attribute>
		<attribute name="axis" type="NX_POSINT"
			deprecated="Use the group ``axes`` attribute   (NIAC2014)">
			<doc>
				Index (positive integer) identifying this specific set of numbers.
				
				N.B. The ``axis`` attribute is now deprecated and should not be 
				used in writing new files.  
			</doc>
		</attribute>
	</field>
	<field name="AXIS_errors" type="NX_NUMBER" nameType="any">
		<doc>
			Errors (uncertainties) associated with axis ``AXIS``.
			Client is responsible for defining the dimensions of the data.
			The name of this field may be changed to fit the circumstances 
			but is matched with the *AXIS*
			field with ``_errors`` appended.
		</doc>
		<dimensions rank="1">
			<doc>
				A dimension scale must have a rank of 1 and has length ``n``, 
				same as ``AXIS``.
			</doc>
			<dim index="1" value="n"/>
		</dimensions>
	</field>
	<field name="DATA" type="NX_NUMBER" nameType="any">
		<doc>
			.. index:: plotting
		
			This field contains the data values to be used as the 
			NeXus *plottable data*.
			Client is responsible for defining the dimensions of the data.
			The name of this field may be changed to fit the circumstances.
			Standard NeXus client tools will use the attributes to determine
			how to use this field.
		</doc>
		<dimensions rank="dataRank">
			<doc>
				The rank (``dataRank``) of the ``data`` must satisfy
				``1 &lt;= dataRank &lt;= NX_MAXRANK=32``.  
				At least one ``dim`` must have length ``n``.
			</doc>
			<dim index="0" value="n"><!-- index="0": cannot know to which dimension this applies a priori --></dim>
		</dimensions>
		<attribute name="signal" type="NX_POSINT"
			deprecated="Use the group ``signal`` attribute   (NIAC2014)">
			<doc>
				.. index:: plotting
	
				Plottable (independent) axis, with a value designating its 
				priority in the :ref:`NXdata` group.
				Only one field in a :ref:`NXdata` group may have the
				``signal=1`` attribute.
				
				N.B. The ``signal`` attribute is now deprecated
				and should not be used in writing new files.  
			</doc>
		</attribute>
		<attribute name="axes"
			deprecated="Use the group ``axes`` attribute   (NIAC2014)">
			<doc>
				Defines the names of the dimension scales
				(independent axes) for this data set
				as a colon-delimited array.

				N.B. The ``axes`` attribute is now deprecated and should not be 
				used in writing new files.  
			</doc>
		</attribute>
		<!--
			NIAC2018 voted to use VARIABLE_errors, not @uncertainties
			https://github.com/nexusformat/definitions/issues/634
		-->
		<attribute name="long_name">
			<doc>data label</doc>
		</attribute>
	</field>
	<field name="DATA_errors" type="NX_NUMBER" nameType="any">
		<doc>
			Errors (uncertainties) associated with data ``DATA``. It is now
			recommended that uncertainties are defined using the 
			``uncertainties`` attribute of the signal field. The name of this 
			field does not therefore have to conform to this pattern, i.e., 
			the name of the signal field with ``_errors`` appended. However,
			it does make the association of the two fields clear.
			Client is responsible for defining the dimensions of the data.
			
		</doc>
		<dimensions rank="dataRank">
			<doc>
				The dimensions should match those of ``DATA``.
			</doc>
			<dim index="0" value="n"><!-- index="0": cannot know to which dimension this applies a priori --></dim>
		</dimensions>
	</field>
	<field name="errors" type="NX_NUMBER">
		<doc>
			Standard deviations of data values - 
			the data array is identified by the group attribute ``signal``. 
			The ``errors`` array must have the same dimensions as ``data``.
			Client is responsible for defining the dimensions of the data.
		</doc>
		<dimensions rank="dataRank">
			<doc>
				The ``errors`` must have 
				the same rank (``dataRank``) 
				as the ``DATA``.  
				At least one ``dim`` must have length ``n``.
			</doc>
			<dim index="0" value="n"><!-- index="0": cannot know to which dimension this applies a priori --></dim>
		</dimensions>
	</field>
	<field name="scaling_factor" type="NX_FLOAT">
		<doc>
			The elements in data are usually float values really. For
			efficiency reasons these are usually stored as integers
			after scaling with a scale factor. This value is the scale
			factor. It is required to get the actual physical value,
			when necessary.
		</doc>
	</field>
	<field name="offset" type="NX_FLOAT">
		<doc>
			An optional offset to apply to the values in data.
		</doc>
	</field>
	<field name="title">
		<doc>
			Title for the plot.
		</doc>
	</field>
</definition>
