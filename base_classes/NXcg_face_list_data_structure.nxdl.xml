<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2014-2024 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<!--
duplicate of an NXoff_geometry ?-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXcg_face_list_data_structure" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="d">
            <doc>
                 The dimensionality, which has to be at least 2.
            </doc>
        </symbol>
        <symbol name="n_v">
            <doc>
                 The number of vertices.
            </doc>
        </symbol>
        <symbol name="n_e">
            <doc>
                 The number of edges.
            </doc>
        </symbol>
        <symbol name="n_f">
            <doc>
                 The number of faces.
            </doc>
        </symbol>
        <symbol name="n_total">
            <doc>
                 The total number of vertices of all faces. Faces are polygons.
            </doc>
        </symbol>
        <symbol name="n_weinberg">
            <doc>
                 The total number of Weinberg vector values of all faces.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Computational geometry of primitives via a face-and-edge-list data structure.
         
         Primitives must neither be degenerated nor self-intersect but can differ in
         their properties. A face-and-edge-list-based description of primitives is
         frequently used for triangles and polyhedra to store them on disk for
         visualization purposes (see OFF, PLY, VTK, or STL file formats).
         
         Although this description is storage efficient it is not well suited for
         topological analyses though. In this case, scientists may need a different
         view on the primitives which is better represented with e.g. a
         half_edge_data_structure.
         
         Having an own base class for the data structure how primitives are stored is
         useful to embrace both users with small or very detailed specification demands.
    </doc>
    <attribute name="depends_on" type="NX_CHAR">
        <doc>
             Hint to help resolve in which Euclidean coordinate system
             field values vertices are defined.
        </doc>
    </attribute>
    <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS">
        <doc>
             Dimensionality of the primitives described.
        </doc>
    </field>
    <!--resulting in a design similar to that of NXoff_geometry and the XDMF mixed primitive topology-->
    <field name="number_of_vertices" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Number of vertices for each face.
             
             Each entry represents the total number of vertices for that face,
             irrespectively whether vertices are shared among faces or not.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_f"/>
        </dimensions>
    </field>
    <field name="number_of_edges" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Number of edges for each face.
             
             Each entry represents the total number of edges for that face,
             irrespectively whether edges are shared across faces or not.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_e"/>
        </dimensions>
    </field>
    <field name="number_of_faces" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Number of faces of the primitives.
        </doc>
    </field>
    <field name="vertex_identifier_offset" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer offset whereby the identifier of the first member
             of the vertices differs from zero.
             
             Identifier can be defined explicitly or implicitly.
             Inspect the definition of NXcg_primitive_set for further details.
        </doc>
    </field>
    <field name="edge_identifier_offset" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer offset whereby the identifier of the first member
             of the edges differs from zero.
             
             Identifier can be defined explicitly or implicitly.
             Inspect the definition of NXcg_primitive_set for further details.
        </doc>
    </field>
    <field name="face_identifier_offset" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer offset whereby the identifier of the first member
             of the faces differs from zero.
             
             Identifier can be defined explicitly or implicitly.
             Inspect the definition of NXcg_primitive_set for further details.
        </doc>
    </field>
    <field name="vertex_identifier" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer identifier to distinguish all vertices explicitly.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_v"/>
        </dimensions>
    </field>
    <field name="edge_identifier" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer used to distinguish all edges explicitly.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_e"/>
        </dimensions>
    </field>
    <field name="face_identifier" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer used to distinguish all faces explicitly.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_f"/>
        </dimensions>
    </field>
    <field name="vertices" type="NX_NUMBER" units="NX_ANY">
        <doc>
             Positions of the vertices.
             
             Users are encouraged to reduce the vertices to a unique set as this may
             result in a more efficient storage of the geometry data.
             It is also possible though to store the vertex positions naively in which
             case vertices_are_unique is likely False. Naively here means that each
             vertex is stored even though many share the same positions.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="n_v"/>
            <dim index="2" value="d"/>
        </dimensions>
    </field>
    <field name="edges" type="NX_INT" units="NX_UNITLESS">
        <doc>
             The edges are stored as pairs of vertex identifier.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="n_e"/>
            <dim index="2" value="2"/>
        </dimensions>
    </field>
    <field name="faces" type="NX_INT" units="NX_UNITLESS">
        <doc>
             The faces are stored as a concatenated array of vertex identifier tuples.
             
             The first entry is the identifier of the start vertex of the first face,
             followed by the second vertex of the first face, until the last vertex
             of the first face. Thereafter, the start vertex of the second face, the
             second vertex of the second face, and so on and so forth.
             
             Therefore, summating over the number_of_vertices, allows to extract
             the vertex identifiers for the i-th face on the following index interval
             of the faces array: :math:`[\sum_{i = 0}^{i = n-1}, \sum_{i=0}^{i = n}]`.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_total"/>
        </dimensions>
    </field>
    <!--properties-->
    <field name="vertices_are_unique" type="NX_BOOLEAN">
        <doc>
             If true, indicates that the vertices are all placed at different positions
             and have different identifiers, i.e. no points overlap or are counted more
             than once.
        </doc>
    </field>
    <field name="edges_are_unique" type="NX_BOOLEAN">
        <doc>
             If true, indicates that no edge is stored more than once.
             
             Users are encouraged to consider using a half_edge_data_structure instead.
        </doc>
    </field>
    <field name="faces_are_unique" type="NX_BOOLEAN">
        <doc>
             If true, indicates that no face is stored more than once.
        </doc>
    </field>
    <field name="winding_order" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Specifies for each face which winding order was used if any:
             
             * 0 - undefined
             * 1 - counter-clockwise (CCW)
             * 2 - clock-wise (CW)
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_f"/>
        </dimensions>
    </field>
</definition>
