<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2014-2022 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="application" name="NXapm_paraprobe_config_spatstat" extends="NXobject" type="group" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="n_ivecmax">
            <doc>
                 Maximum number of atoms per molecular ion. Should be 32 for paraprobe.
            </doc>
        </symbol>
        <symbol name="n_ion_source">
            <doc>
                 Number of different sources iontypes to distinguish.
            </doc>
        </symbol>
        <symbol name="n_ion_target">
            <doc>
                 Number of different target iontypes to distinguish.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Configuration of a paraprobe-spatstat tool run in atom probe microscopy.
    </doc>
    <group type="NXentry">
        <!--by default for appdefs the value of the exists keyword is required
unless it is explicitly specified differently-->
        <attribute name="version">
            <doc>
                 Version specifier of this application definition.
            </doc>
        </attribute>
        <field name="definition">
            <doc>
                 Official NeXus NXDL schema with which this file was written.
            </doc>
            <enumeration>
                <item value="NXapm_paraprobe_config_spatstat"/>
            </enumeration>
        </field>
        <field name="program">
            <doc>
                 Given name of the program/software/tool with which this NeXus
                 (configuration) file was generated.
            </doc>
            <attribute name="version">
                <doc>
                     Ideally program version plus build number, or commit hash or description
                     of ever persistent resources where the source code of the program and
                     build instructions can be found so that the program can be configured
                     ideally in such a manner that the result of this computational process
                     is recreatable in the same deterministic manner.
                </doc>
            </attribute>
        </field>
        <field name="analysis_identifier">
            <doc>
                 Ideally, a (globally persistent) unique identifier for referring
                 to this analysis.
            </doc>
        </field>
        <field name="analysis_description" optional="true">
            <doc>
                 Possibility for leaving a free-text description about this analysis.
            </doc>
        </field>
        <field name="results_path" optional="true">
            <doc>
                 Path to the directory where the tool should store NeXus/HDF5 results
                 of this analysis. If not specified results will be stored in the
                 current working directory.
            </doc>
        </field>
        <field name="time_stamp" type="NX_DATE_TIME">
            <doc>
                 ISO 8601 formatted time code with local time zone offset to UTC
                 information included when this configuration file was created.
            </doc>
        </field>
        <field name="number_of_processes" type="NX_UINT" units="NX_UNITLESS">
            <doc>
                 How many range_with_existent_iontypes processes should
                 the tool execute as part of the analysis.
            </doc>
        </field>
        <group type="NXprocess" minOccurs="1" maxOccurs="1">
            <group name="spatial_statistics" type="NXprocess" minOccurs="0" maxOccurs="1">
                <group name="dataset" type="NXapm_input_reconstruction">
                    <field name="filename">
                        <attribute name="version"/>
                    </field>
                    <field name="dataset_name_reconstruction"/>
                    <field name="dataset_name_mass_to_charge"/>
                </group>
                <group name="iontypes" type="NXapm_input_ranging">
                    <field name="filename">
                        <attribute name="version"/>
                    </field>
                    <field name="group_name_iontypes"/>
                </group>
                <group name="spatial_filter" type="NXspatial_filter" optional="true">
                    <field name="windowing_method"/>
                    <group type="NXcg_ellipsoid_set" optional="true">
                        <field name="dimensionality" type="NX_POSINT"/>
                        <field name="cardinality" type="NX_POSINT"/>
                        <field name="identifier_offset" type="NX_INT"/>
                        <field name="center" type="NX_NUMBER"/>
                        <field name="half_axes_radii" type="NX_NUMBER"/>
                        <field name="orientation" type="NX_NUMBER"/>
                    </group>
                    <group type="NXcg_cylinder_set" optional="true">
                        <field name="dimensionality" type="NX_POSINT"/>
                        <field name="cardinality" type="NX_POSINT"/>
                        <field name="identifier_offset" type="NX_INT"/>
                        <field name="center" type="NX_NUMBER"/>
                        <field name="height" type="NX_NUMBER"/>
                        <field name="radii" type="NX_NUMBER"/>
                    </group>
                    <group type="NXcg_hexahedron_set" optional="true">
                        <field name="dimensionality" type="NX_POSINT"/>
                        <field name="cardinality" type="NX_POSINT"/>
                        <field name="identifier_offset" type="NX_INT"/>
                        <group name="hexahedra" type="NXcg_face_list_data_structure"/>
                    </group>
                    <group type="NXcs_filter_boolean_mask" optional="true">
                        <field name="number_of_objects" type="NX_UINT"/>
                        <field name="bitdepth" type="NX_UINT"/>
                        <field name="mask" type="NX_UINT"/>
                        <field name="identifier" type="NX_UINT"/>
                    </group>
                </group>
                <group name="evaporation_id_filter" type="NXsubsampling_filter" optional="true"/>
                <group name="iontype_filter" type="NXmatch_filter" optional="true"/>
                <group name="hit_multiplicity_filter" type="NXmatch_filter" optional="true"/>
                <group name="ion_to_edge_distances" type="NXprocess" optional="true">
                    <doc>
                         The tool enables to inject precomputed distances of each ion to a
                         representation of the edge of the dataset which can be used to
                         control and substantially reduce edge effects when computing
                         spatial statistics.
                    </doc>
                    <field name="filename">
                        <doc>
                             Name of an HDF5 file which contains ion-to-edge distances.
                        </doc>
                    </field>
                    <field name="dataset_name_distances">
                        <doc>
                             Absolute HDF5 path to the dataset with the
                             ion-to-edge distance values for each ion.
                             The shape of the distance values has to match the length
                             of the ion positions array in dataset/dataset_name_reconstruction
                             and dataset_name_mass_to_charge respectively.
                        </doc>
                    </field>
                    <field name="edge_distance" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                             Threshold to define how large an ion has to lay at least far away
                             from the edge of the dataset so that the ion can act as a source,
                             i.e. that an ROI is placed at the location of the ion and its
                             neighbors are analyzed how they contribute to the computed statistics.
                             
                             The ion_to_edge_distances threshold can be combined with a threshold
                             for the ion_to_feature_distances.
                             Specifically, if ion_to_feature_distances are loaded an ion only
                             acts as a source if both threshold criteria are met.
                             
                             The threshold is useful to process the dataset such that ROIs do
                             not protrude out of the dataset as this would add bias.
                        </doc>
                    </field>
                </group>
                <group name="ion_to_feature_distances" type="NXprocess" optional="true">
                    <doc>
                         In addition to spatial filtering, and considering how far ions lie
                         to the edge of the dataset, it is possible to restrict the analyses
                         to a sub-set of ions within a distance not farther away to a feature than
                         a threshold value.
                    </doc>
                    <field name="filename">
                        <doc>
                             Name of an HDF5 file which contains ion-to-feature distances.
                        </doc>
                    </field>
                    <field name="dataset_name_distances">
                        <doc>
                             Absolute HDF5 path to the dataset with the
                             ion-to-feature distance values for each ion.
                        </doc>
                    </field>
                    <field name="threshold" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                             Threshold to define how close an ion has to lay to a feature so that
                             the ion can at all qualify as a source, i.e. that an ROI is placed
                             at the location of the ion and its neighbors are then analyzed
                             how they contribute to the computed statistics.
                             
                             Recall that the ion_to_feature_distances threshold is combined
                             with the ion_to_edge_distances threshold.
                        </doc>
                    </field>
                </group>
                <!--##MK::think about an inversion ruleset for the filter, i.e.
like discussed in Haley/Stephenson's paper where ions only far enough
from a feature AND deeply embedded enough in the dataset are chosen.-->
                <field name="randomize_ion_types" type="NX_BOOLEAN">
                    <doc>
                         Specifies if the iontypes are randomized for the point cloud or not.
                         Internally paraprobe uses a sequentially executed deterministic MT19987
                         (MersenneTwister) pseudo-random number generator to shuffle the
                         iontype labels randomly across the entire set of ions.
                    </doc>
                </field>
                <group name="random_number_generator" type="NXcs_prng" recommended="true">
                    <field name="type"/>
                    <field name="seed" type="NX_NUMBER"/>
                    <field name="warmup" type="NX_NUMBER"/>
                </group>
                <field name="ion_query_type_source">
                    <doc>
                         How should the iontype be interpreted on the source-side, i.e.
                         all these ion positions where a regions-of-interest (ROI) around
                         so-called source ions will be placed. Different options exist
                         how iontypes are interpreted given an iontype represents
                         in general a (molecular) ion with different isotopes that have
                         individually different multiplicity.
                         
                         The value resolve_all will set an ion active in the analysis regardless
                         of which iontype it is. Each active ion is accounted for once.
                         
                         The value resolve_unknown will set an ion active when the ion is
                         of the UNKNOWNTYPE type. Each active ion is accounted for once.
                         
                         The value resolve_ion will set an ion active if it is of the specific
                         iontype, irregardless of its elemental or isotopic details.
                         Each active ion is counted once.
                         
                         The value resolve_element will set an ion active, and most importantly,
                         account for each as many times as the (molecular) ion contains
                         atoms of elements in the whitelist ion_query_isotope_vector.
                         
                         The value resolve_isotope will set an ion active, and most importantly,
                         account for each as many times as the (molecular) ion contains
                         isotopes in the whitelist ion_query_isotope_vector.
                         
                         In effect, ion_query_isotope_vector acts as a whitelist to filter
                         which ions are considered as source ions of the correlation statistics
                         and how the multiplicity of each ion will be factorized, i.e. how
                         often it is accounted for.
                    </doc>
                    <enumeration>
                        <item value="resolve_all"/>
                        <item value="resolve_unknown"/>
                        <item value="resolve_ion"/>
                        <item value="resolve_element"/>
                        <item value="resolve_isotope"/>
                    </enumeration>
                </field>
                <field name="ion_query_isotope_vector_source" type="NX_UINT" units="NX_UNITLESS">
                    <doc>
                         Matrix of isotope vectors, as many as rows as different candidates
                         for iontypes should be distinguished as possible source iontypes.
                         In the simplest case, the matrix contains only the proton number
                         of the element in the row, all other values set to zero.
                         Combined with ion_query_type_source set to resolve_element this will
                         recover usual spatial correlation statistics like the 1NN C-C
                         spatial statistics.
                    </doc>
                    <dimensions rank="2">
                        <dim index="1" value="n_ion_source"/>
                        <dim index="2" value="n_ivecmax"/>
                    </dimensions>
                </field>
                <field name="ion_query_type_target">
                    <doc>
                         Similarly as ion_query_type_source how should iontypes be interpreted
                         on the target-side, i.e. how many counts will be bookkept for ions
                         which are neighbors of source ions within or on the surface of each
                         inspection/ROI about each source ion.
                         Source ion in the center of the ROI are not accounted for during
                         counting the summary statistics.
                         For details about the resolve values consider the explanations in
                         ion_query_type_source. These account for ion_query_type_target as well.
                    </doc>
                    <enumeration>
                        <item value="resolve_all"/>
                        <item value="resolve_unknown"/>
                        <item value="resolve_ion"/>
                        <item value="resolve_element"/>
                        <item value="resolve_isotope"/>
                    </enumeration>
                </field>
                <!--NEW ISSUE: conditionally required only when resolve_isotope-->
                <field name="ion_query_isotope_vector_target" type="NX_UINT" units="NX_UNITLESS">
                    <doc>
                         Matrix of isotope vectors, as many as rows as different candidates for
                         iontypes to distinguish as possible targets. See additional comments
                         under ion_query_isotope_vector_source.
                    </doc>
                    <dimensions rank="2">
                        <dim index="1" value="n_ion_target"/>
                        <dim index="2" value="n_ivecmax"/>
                    </dimensions>
                </field>
                <group name="statistics" type="NXprocess">
                    <doc>
                         Specifies which spatial statistics to compute.
                    </doc>
                    <group name="knn" type="NXprocess" optional="true">
                        <doc>
                             Compute k-th nearest neighbour statistics.
                        </doc>
                        <field name="nth" type="NX_UINT" units="NX_UNITLESS">
                            <doc>
                                 Order k.
                            </doc>
                        </field>
                        <field name="histogram_min_incr_max" type="NX_FLOAT" units="NX_LENGTH">
                            <doc>
                                 Minimum value, increment, and maximum value of the histogram binning.
                            </doc>
                            <!--\@units: nm-->
                            <dimensions rank="1">
                                <dim index="1" value="3"/>
                            </dimensions>
                        </field>
                    </group>
                    <group name="rdf" type="NXprocess" optional="true">
                        <doc>
                             Compute radial distribution function.
                        </doc>
                        <field name="histogram_min_incr_max" type="NX_FLOAT" units="NX_LENGTH">
                            <doc>
                                 Minimum value, increment, and maximum value of the histogram binning.
                            </doc>
                            <!--\@units: nm-->
                            <dimensions rank="1">
                                <dim index="1" value="3"/>
                            </dimensions>
                        </field>
                    </group>
                </group>
            </group>
        </group>
        <!--NEW ISSUE: ripleyk(NXcollection):
NEW ISSUE: two_point(NXcollection):-->
        <group name="performance" type="NXcs_profiling">
            <field name="current_working_directory"/>
        </group>
    </group>
</definition>
