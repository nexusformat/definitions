<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2023-2025 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="application" type="group" name="NXapm_paraprobe_nanochem_results" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
            The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="n_ions">
            <doc>
                The total number of ions in the reconstruction.
            </doc>
        </symbol>
        <symbol name="n_atomic">
            <doc>
                The total number of atoms in the atomic_decomposition match filter.
            </doc>
        </symbol>
        <symbol name="n_isotopic">
            <doc>
                The total number of isotopes in the isotopic_decomposition match filter.
            </doc>
        </symbol>
        <symbol name="d">
            <doc>
                The dimensionality of the delocalization grid.
            </doc>
        </symbol>
        <symbol name="c">
            <doc>
                The cardinality/total number of cells/grid points in the delocalization grid.
            </doc>
        </symbol>
        <!--c_tri_soup: |
The cardinality/total number of triangles in the triangle soup.-->
        <symbol name="n_f_tri">
            <doc>
                The total number of faces of triangles.
            </doc>
        </symbol>
        <symbol name="n_f_tri_xdmf">
            <doc>
                The total number of XDMF values to represent all faces of triangles via XDMF.
            </doc>
        </symbol>
        <symbol name="n_feature_dict">
            <doc>
                The total number of entries in a feature dictionary.
            </doc>
        </symbol>
        <symbol name="n_v_feat">
            <doc>
                The total number of volumetric features.
            </doc>
        </symbol>
        <symbol name="n_speci">
            <doc>
                The total number of member distinguished when reporting composition.
            </doc>
        </symbol>
        <symbol name="n_rois">
            <doc>
                The total number of ROIs placed in an oned_profile task.
            </doc>
        </symbol>
    </symbols>
    <doc>
        Application definition for results files of the paraprobe-nanochem tool.
        
        This tool is part of the paraprobe-toolbox. Inspect the base class :ref:`NXapm_paraprobe_tool_results`.
    </doc>
    <group type="NXentry" minOccurs="1" maxOccurs="1">
        <field name="definition" type="NX_CHAR">
            <attribute name="version" type="NX_CHAR"/>
            <enumeration>
                <item value="NXapm_paraprobe_nanochem_results"/>
            </enumeration>
        </field>
        <!--tasks-->
        <group name="delocalizationID" type="NXdelocalization" minOccurs="0" maxOccurs="unbounded" nameType="partial">
            <group name="window" type="NXcs_filter_boolean_mask">
                <field name="number_of_ions" type="NX_UINT"/>
                <field name="bitdepth" type="NX_UINT"/>
                <field name="mask" type="NX_UINT"/>
            </group>
            <!--results-->
            <group name="weighting_model" type="NXmatch_filter">
                <field name="weighting_method" type="NX_CHAR"/>
                <field name="method" type="NX_CHAR"/>
                <field name="match" type="NX_UINT"/>
            </group>
            <field name="normalization" type="NX_CHAR">
                <doc>
                    How were results of the kernel-density estimation normalized:
                    * total, the total number (intensity) of ions or elements.
                    * candidates, the total number (intensity) of ions matching weighting_model
                    * composition, the value for candidates divided by the value for total,
                    * concentration, the value for candidates divided by the volume of the cell.
                </doc>
                <enumeration>
                    <item value="total"/>
                    <item value="candidates"/>
                    <item value="composition"/>
                    <item value="concentration"/>
                </enumeration>
            </field>
            <group name="grid" type="NXcg_grid">
                <doc>
                    The discretized domain/grid on which the delocalization is applied.
                </doc>
                <field name="dimensionality" type="NX_POSINT">
                    <enumeration>
                        <item value="1"/>
                        <item value="2"/>
                        <item value="3"/>
                    </enumeration>
                </field>
                <field name="cardinality" type="NX_POSINT">
                    <doc>
                        The total number of cells/voxels of the grid.
                    </doc>
                </field>
                <field name="origin" type="NX_NUMBER">
                    <dimensions rank="1">
                        <dim index="1" value="d"/>
                    </dimensions>
                </field>
                <field name="symmetry" type="NX_CHAR">
                    <doc>
                        The symmetry of the lattice defining the shape of the unit cell.
                    </doc>
                    <enumeration>
                        <item value="cubic"/>
                    </enumeration>
                </field>
                <field name="cell_dimensions" type="NX_NUMBER" units="NX_LENGTH">
                    <doc>
                        The unit cell dimensions according to the coordinate system defined under
                        coordinate_system.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="d"/>
                    </dimensions>
                </field>
                <field name="extent" type="NX_POSINT">
                    <doc>
                        Number of unit cells along each of the d-dimensional base vectors.
                        The total number of cells, or grid points has to be the cardinality.
                        If the grid has an irregular number of grid positions in each direction,
                        as it could be for instance the case of a grid where all grid points
                        outside some masking primitive are removed, this extent field should
                        not be used. Instead use the coordinate field.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="d"/>
                    </dimensions>
                </field>
                <!--coordinate_system implicit-->
                <field name="index_offset" type="NX_INT" units="NX_UNITLESS">
                    <doc>
                        Integer which specifies the first index to be used for distinguishing identifiers for cells.
                        Identifiers are defined either implicitly or explicitly. For implicit indexing the identifiers are
                        defined on the interval :math:`[identifier\_offset, identifier\_offset + c - 1]`.
                        For explicit indexing the identifier array has to be defined.
                    </doc>
                </field>
                <field name="kernel_size" type="NX_POSINT" units="NX_DIMENSIONLESS">
                    <doc>
                        Halfwidth of the kernel about the central voxel.
                        The shape of the kernel is that of a cuboid
                        of extent 2*kernel_extent[i] + 1 in each dimension i.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="3"/>
                    </dimensions>
                </field>
                <field name="kernel_type" type="NX_CHAR">
                    <doc>
                        Functional form of the kernel (Ansatz function).
                    </doc>
                    <enumeration>
                        <item value="gaussian"/>
                    </enumeration>
                </field>
                <field name="kernel_sigma" type="NX_FLOAT" units="NX_LENGTH">
                    <doc>
                        Standard deviation :math:`\sigma_i` of the kernel in each dimension
                        in the paraprobe coordinate_system with i = 0 is x, i = 1 is y, i = 2 is z.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="3"/>
                    </dimensions>
                </field>
                <field name="kernel_mu" type="NX_FLOAT" units="NX_LENGTH">
                    <doc>
                        Expectation value :math:`\mu_i` of the kernel in each dimension
                        in the paraprobe coordinate_system with i = 0 is x, i = 1 is y, i = 2 is z.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="3"/>
                    </dimensions>
                </field>
                <group name="bounding_box" type="NXcg_hexahedron">
                    <doc>
                        A tight axis-aligned bounding box about the grid.
                    </doc>
                    <field name="is_axis_aligned" type="NX_BOOLEAN">
                        <doc>
                            For atom probe should be set to true.
                        </doc>
                    </field>
                    <field name="index_offset" type="NX_INT" units="NX_UNITLESS">
                        <doc>
                            Integer which specifies the first index to be used for distinguishing
                            hexahedra. Identifiers are defined either implicitly or explicitly.
                            For implicit indexing the identifiers are defined on the interval
                            :math:`[identifier\_offset, identifier\_offset + c - 1]`.
                            For explicit indexing the identifier array has to be defined.
                        </doc>
                    </field>
                    <group name="hexahedron" type="NXcg_face_list_data_structure">
                        <field name="vertex_index_offset" type="NX_INT" units="NX_UNITLESS">
                            <doc>
                                Integer which specifies the first index to be used for distinguishing
                                identifiers for vertices. Identifiers are defined either implicitly or explicitly.
                                For implicit indexing the identifiers are defined on the interval
                                :math:`[identifier\_offset, identifier\_offset + c - 1]`. For explicit indexing the identifier array
                                has to be defined.
                            </doc>
                        </field>
                        <field name="face_index_offset" type="NX_INT" units="NX_UNITLESS">
                            <doc>
                                Integer which specifies the first index to be used for distinguishing
                                identifiers for faces. Identifiers are defined either implicitly or explicitly.
                                For implicit indexing the identifiers are defined on the interval
                                :math:`[identifier\_offset, identifier\_offset + c - 1]`. For explicit indexing the identifier array
                                has to be defined.
                            </doc>
                        </field>
                        <field name="vertices" type="NX_NUMBER" units="NX_LENGTH">
                            <doc>
                                Positions of the vertices.
                                Users are encouraged to reduce the vertices to unique set of positions
                                and vertices as this supports a more efficient storage of the geometry data.
                                It is also possible though to store the vertex positions naively in which
                                case vertices_are_unique is likely False.
                                Naively here means that one for example stores each vertex of a triangle
                                mesh even though many vertices are shared between triangles and thus
                                the positions of these vertices do not have to be duplicated.
                            </doc>
                            <dimensions rank="2">
                                <dim index="1" value="8"/>
                                <dim index="2" value="3"/>
                            </dimensions>
                        </field>
                        <field name="faces" type="NX_NUMBER" units="NX_UNITLESS">
                            <doc>
                                Array of identifiers from vertices which describe each face.
                                
                                The first entry is the identifier of the start vertex of the first face,
                                followed by the second vertex of the first face, until the last vertex
                                of the first face. Thereafter, the start vertex of the second face, the
                                second vertex of the second face, and so on and so forth.
                                
                                Therefore, summating over the number_of_vertices, allows to extract
                                the vertex identifiers for the i-th face on the following index interval
                                of the faces array: :math:`[\sum_{i = 0}^{i = n-1}, \sum_{i=0}^{i = n}]`.
                            </doc>
                            <dimensions rank="2">
                                <dim index="1" value="6"/>
                                <dim index="2" value="4"/>
                            </dimensions>
                        </field>
                        <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                            <doc>
                                Six equally formatted sextets chained together. For each sextett the first entry is an
                                XDMF primitive topology key (here 5 for polygon), the second entry the XDMF
                                primitive count value (here 4 because each face is a quad).
                                The remaining four values are the vertex indices.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="36"/>
                            </dimensions>
                        </field>
                        <field name="number_of_boundaries" type="NX_POSINT" optional="true" units="NX_UNITLESS">
                            <doc>
                                How many distinct boundaries are distinguished?
                                Most grids discretize a cubic or cuboidal region. In this case
                                six sides can be distinguished, each making an own boundary.
                            </doc>
                        </field>
                        <field name="boundaries" type="NX_CHAR" optional="true">
                            <doc>
                                Name of the boundaries. E.g. left, right, front, back, bottom, top,
                                The field must have as many entries as there are number_of_boundaries.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="6"/>
                            </dimensions>
                        </field>
                        <field name="boundary_conditions" type="NX_INT" optional="true" units="NX_UNITLESS">
                            <doc>
                                The boundary conditions for each boundary:
                                
                                0 - undefined
                                1 - open
                                2 - periodic
                                3 - mirror
                                4 - von Neumann
                                5 - Dirichlet
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="6"/>
                            </dimensions>
                        </field>
                    </group>
                </group>
                <!--MK::how to avoid storing it for once in NeXus for H5Web and for XDMF in ParaView ?-->
                <group name="scalar_field_magn_SUFFIX" type="NXdata" nameType="partial" minOccurs="0" maxOccurs="unbounded">
                    <doc>
                        The result of the delocalization :math:`\Phi = f(x, y, z)` based on which subsequent iso-surfaces
                        will be computed. In commercial software so far there is no possibility to export this information.
                        
                        If the intensity for all matches of the weighting_model are summarized name this NXdata instance
                        scalar_field_magn_total.
                        
                        If the intensity is reported for each iontype one can avoid many subsequent
                        computations as individual intensities can be reinterpreted using a different weighting_model in
                        down-stream usage of the here reported values (e.g. with Python scripting).
                        In this case name the individual NXdata instances scalar_field_magn_ionID using the ID of the ion as
                        per the configuration of the ranging definitions used.
                    </doc>
                    <attribute name="signal" type="NX_CHAR"/>
                    <attribute name="axes" type="NX_CHAR"/>
                    <attribute name="xpos_indices" type="NX_UINT"/>
                    <attribute name="ypos_indices" type="NX_UINT"/>
                    <attribute name="zpos_indices" type="NX_UINT"/>
                    <field name="title" type="NX_CHAR"/>
                    <field name="intensity" type="NX_FLOAT" units="NX_ANY">
                        <doc>
                            The actual delocalized intensity values.
                        </doc>
                        <dimensions rank="3">
                            <dim index="1" value="n_z"/>
                            <dim index="2" value="n_y"/>
                            <dim index="3" value="n_x"/>
                        </dimensions>
                    </field>
                    <field name="xpos" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                            Cell center of mass positions along x.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_x"/>
                        </dimensions>
                    </field>
                    <field name="ypos" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                            Cell center of mass positions along y.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_y"/>
                        </dimensions>
                    </field>
                    <field name="zpos" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                            Cell center of mass positions along z.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_z"/>
                        </dimensions>
                    </field>
                    <field name="xdmf_intensity" type="NX_FLOAT" optional="true" units="NX_ANY">
                        <doc>
                            Intensity of the field at given point
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_xyz"/>
                        </dimensions>
                    </field>
                    <field name="xdmf_xyz" type="NX_FLOAT" optional="true" units="NX_UNITLESS">
                        <doc>
                            Center of mass positions of each voxel for rendering the scalar field
                            via XDMF in e.g. Paraview.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="n_xyz"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <field name="xdmf_topology" type="NX_NUMBER" optional="true" units="NX_UNITLESS">
                        <doc>
                            XDMF topology for rendering in combination with xdmf_xyz the scalar field
                            via XDMF in e.g. Paraview.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                </group>
                <group name="scalar_field_grad_SUFFIX" type="NXdata" nameType="partial" minOccurs="0" maxOccurs="unbounded">
                    <doc>
                        The three-dimensional gradient :math:`\nabla \Phi`.
                        Follow the naming convention of scalar_field_magn_SUFFIX to report parallel structures.
                    </doc>
                    <attribute name="signal" type="NX_CHAR"/>
                    <attribute name="axes" type="NX_CHAR"/>
                    <attribute name="xpos_indices" type="NX_CHAR"/>
                    <attribute name="ypos_indices" type="NX_CHAR"/>
                    <attribute name="zpos_indices" type="NX_CHAR"/>
                    <field name="title" type="NX_CHAR"/>
                    <field name="intensity" type="NX_FLOAT" units="NX_ANY">
                        <doc>
                            The actual point-wise component values.
                        </doc>
                        <dimensions rank="4">
                            <dim index="1" value="n_z"/>
                            <dim index="2" value="n_y"/>
                            <dim index="3" value="n_x"/>
                            <dim index="4" value="3"/>
                        </dimensions>
                    </field>
                    <field name="xpos" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                            Cell center of mass positions along x.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_x"/>
                        </dimensions>
                    </field>
                    <field name="ypos" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                            Cell center of mass positions along y.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_y"/>
                        </dimensions>
                    </field>
                    <field name="zpos" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                            Cell center of mass positions along z.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_z"/>
                        </dimensions>
                    </field>
                    <field name="xdmf_gradient" type="NX_FLOAT" optional="true" units="NX_ANY">
                        <doc>
                            The gradient vector formatted for direct visualization via XDMF in e.g.
                            Paraview.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="n_xyz"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <field name="xdmf_xyz" type="NX_FLOAT" optional="true" units="NX_LENGTH">
                        <doc>
                            Center of mass positions of each voxel for rendering the scalar field gradient
                            via XDMF in e.g. Paraview.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="n_xyz"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <field name="xdmf_topology" type="NX_NUMBER" optional="true" units="NX_UNITLESS">
                        <doc>
                            XDMF topology for rendering in combination with xdmf_xyz the scalar field
                            via XDMF in e.g. Paraview.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                </group>
                <!--MK::-->
                <group name="iso_surfaceID" type="NXisocontour" minOccurs="0" maxOccurs="unbounded" nameType="partial">
                    <doc>
                        An iso-surface is the boundary between two regions across which the magnitude of a
                        scalar field falls below/exceeds a threshold magnitude :math:`\varphi`.
                        
                        For applications in atom probe microscopy, the location and shape of such a boundary (set)
                        is typically approximated by discretization - triangulation to be specific.
                        
                        This yields a complex of not necessarily connected geometric primitives.
                        Paraprobe-nanochem approximates this complex with a soup of triangles.
                    </doc>
                    <field name="dimensionality" type="NX_POSINT"/>
                    <field name="isovalue" type="NX_NUMBER" units="NX_ANY">
                        <doc>
                            The threshold or iso-contour value :math:`\varphi`.
                        </doc>
                    </field>
                    <field name="marching_cubes" type="NX_CHAR">
                        <doc>
                            Reference to the specific implementation of marching cubes used.
                            The value placed here should be a DOI. If there are no specific
                            DOI or details write not_further_specified, or give at least a
                            free-text description. The program and version used is the
                            specific paraprobe-nanochem.
                        </doc>
                    </field>
                    <group name="triangle_soup" type="NXcg_triangle" optional="true">
                        <doc>
                            The resulting triangle soup computed via marching cubes.
                        </doc>
                        <field name="dimensionality" type="NX_POSINT"/>
                        <field name="cardinality" type="NX_POSINT"/>
                        <field name="index_offset" type="NX_INT"/>
                        <group name="triangles" type="NXcg_face_list_data_structure">
                            <field name="number_of_vertices" type="NX_POSINT"/>
                            <field name="number_of_faces" type="NX_POSINT"/>
                            <field name="identifier_vertex_offset" type="NX_INT"/>
                            <field name="identifier_face_offset" type="NX_INT"/>
                            <field name="vertices" type="NX_NUMBER" units="NX_LENGTH">
                                <doc>
                                    Positions of the vertices.
                                    
                                    Users are encouraged to reduce the vertices to a unique set as this may
                                    result in a more efficient storage of the geometry data.
                                    It is also possible though to store the vertex positions naively in which
                                    case vertices_are_unique is likely False. Naively here means that each
                                    vertex is stored even though many share the same positions.
                                </doc>
                                <dimensions rank="2">
                                    <dim index="1" value="i"/>
                                    <dim index="2" value="3"/>
                                </dimensions>
                            </field>
                            <field name="faces" type="NX_INT" units="NX_UNITLESS">
                                <doc>
                                    Array of identifiers from vertices which describe each face.
                                    
                                    The first entry is the identifier of the start vertex of the first face,
                                    followed by the second vertex of the first face, until the last vertex
                                    of the first face. Thereafter, the start vertex of the second face, the
                                    second vertex of the second face, and so on and so forth.
                                    
                                    Therefore, summating over the number_of_vertices, allows to extract
                                    the vertex identifiers for the i-th face on the following index interval
                                    of the faces array: :math:`[\sum_{i = 0}^{i = n-1}, \sum_{i=0}^{i = n}]`.
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="j"/>
                                </dimensions>
                            </field>
                            <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                                <doc>
                                    A list of as many tuples of XDMF topology key, XDMF number
                                    of vertices and a triple of vertex indices specifying each
                                    triangle. The total number of entries is n_f_tri * (1+1+3).
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="n_f_tri_xdmf"/>
                                </dimensions>
                            </field>
                            <group name="vertex_normal" type="NXcg_unit_normal" optional="true">
                                <field name="normals" type="NX_FLOAT" units="NX_DIMENSIONLESS">
                                    <doc>
                                        Direction of each normal.
                                    </doc>
                                    <dimensions rank="2">
                                        <dim index="1" value="j"/>
                                        <dim index="2" value="3"/>
                                    </dimensions>
                                </field>
                                <field name="orientation" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                    <doc>
                                        Qualifier how which specifically oriented normal to its
                                        primitive each normal represents.
                                        
                                        * 0 - undefined
                                        * 1 - outer
                                        * 2 - inner
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="j"/>
                                    </dimensions>
                                </field>
                            </group>
                            <!--edge_normal(NXcg_unit_normal):
exists: optional-->
                            <group name="face_normal" type="NXcg_unit_normal" optional="true">
                                <field name="normals" type="NX_FLOAT" units="NX_DIMENSIONLESS">
                                    <doc>
                                        Direction of each normal.
                                    </doc>
                                    <dimensions rank="2">
                                        <dim index="1" value="k"/>
                                        <dim index="2" value="3"/>
                                    </dimensions>
                                </field>
                                <field name="orientation" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                    <doc>
                                        Qualifier how which specifically oriented normal to its
                                        primitive each normal represents.
                                        
                                        * 0 - undefined
                                        * 1 - outer
                                        * 2 - inner
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="k"/>
                                    </dimensions>
                                </field>
                                <field name="gradient_guide_magnitude" type="NX_FLOAT" units="NX_ANY">
                                    <doc>
                                        Triangle normals are oriented in the direction of the
                                        gradient vector of the local delocalized scalar field.
                                        :math:`\sum_{x, y, z} {\nabla{c}_i}^2`.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="k"/>
                                    </dimensions>
                                </field>
                                <!--gradient_guide_quality(NX_FLOAT):
doc: |
Triangle normals are oriented in the direction of the
gradient vector of the local delocalized scalar field.
Sum of squared values of cross product of triangle normal
construction.
unit: NX_ANY
dim: (k,)-->
                                <field name="gradient_guide_projection" type="NX_FLOAT" units="NX_ANY">
                                    <doc>
                                        Triangle normals are oriented in the direction of the
                                        gradient vector of the local delocalized scalar field.
                                        The projection variable here describes the cosine of the
                                        angle between the gradient direction and the normal
                                        direction vector.
                                        This is a descriptor of how parallel the projection is
                                        that is especially useful to document those triangles
                                        for whose the projection is almost perpendicular.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="k"/>
                                    </dimensions>
                                </field>
                            </group>
                            <field name="area" type="NX_NUMBER" optional="true" units="NX_AREA">
                                <dimensions rank="1">
                                    <dim index="1" value="j"/>
                                </dimensions>
                            </field>
                            <field name="edge_length" type="NX_NUMBER" optional="true" units="NX_LENGTH">
                                <doc>
                                    Array of edge length values. For each triangle the edge length
                                    is reported for the edges traversed according to the sequence
                                    in which vertices are indexed in triangles.
                                </doc>
                                <dimensions rank="2">
                                    <dim index="1" value="k"/>
                                    <dim index="2" value="3"/>
                                </dimensions>
                            </field>
                            <field name="interior_angle" type="NX_NUMBER" optional="true" units="NX_ANGLE">
                                <doc>
                                    Array of interior angle values. For each triangle the angle
                                    is reported for the angle opposite to the edges which are
                                    traversed according to the sequence in which vertices
                                    are indexed in triangles.
                                </doc>
                                <dimensions rank="2">
                                    <dim index="1" value="j"/>
                                    <dim index="2" value="4"/>
                                </dimensions>
                            </field>
                            <field name="center" type="NX_NUMBER" optional="true" units="NX_LENGTH">
                                <doc>
                                    The center of mass of each triangle.
                                </doc>
                                <dimensions rank="2">
                                    <dim index="1" value="j"/>
                                    <dim index="2" value="3"/>
                                </dimensions>
                            </field>
                            <group name="volumetric_features" type="NXprocess" minOccurs="0" maxOccurs="1">
                                <doc>
                                    Iso-surfaces of arbitrary scalar three-dimensional fields can show a complicated topology.
                                    Paraprobe-nanochem can run a DBScan-like clustering algorithm which performs a
                                    connectivity analysis on the triangle soup representation of such iso-surface.
                                    This may yield a set of connected features whose individual surfaces are discretized
                                    by a triangulated mesh each.  Such volumetric features can be processed further using
                                    paraprobe-nanochem using a workflow with at most two steps.
                                    
                                    In the first step, the tool distinguishes three types of (v) i.e. volumetric features:
                                    
                                    1. So-called objects, i.e. necessarily watertight features represented by polyhedra.
                                        These objects were already watertight within the triangulated iso-surface.
                                    2. So-called proxies, i.e. features that were not necessarily watertight within the triangulated
                                        iso-surface but were subsequently replaced by a watertight mesh using polyhedral mesh
                                        processing operations (hole filling, refinement, fairing operations).
                                    3. Remaining triangle surface meshes or parts of these of arbitrary shape and cardinality
                                        that are not transformable into proxies or for which no transformation into proxies was
                                        instructed.
                                    
                                    These features can be interpreted as microstructural features. Some of them may be precipitates,
                                    some of them may be poles, some of them may be segments of dislocation lines or other
                                    crystal defects which are decorated (or not) with solutes.
                                    
                                    In the second step, the tool can be used to analyze the proximity of these objects to a
                                    model of the surface (edge) of the dataset.
                                </doc>
                                <field name="identifier_triangle_cluster" type="NX_UINT" units="NX_UNITLESS">
                                    <doc>
                                        The identifier which the triangle_soup connectivity analysis
                                        returned, which constitutes the first step of the
                                        volumetric_feature identification process.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="n_v_feat"/>
                                    </dimensions>
                                </field>
                                <field name="feature_type_dict_keyword" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                    <doc>
                                        The array of keywords of feature_type dictionary.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="n_feature_dict"/>
                                    </dimensions>
                                </field>
                                <field name="feature_type_dict_value" optional="true">
                                    <doc>
                                        The array of values for each keyword of the
                                        feature_type dictionary.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="n_feature_dict"/>
                                    </dimensions>
                                </field>
                                <field name="feature_type" type="NX_UINT" units="NX_UNITLESS">
                                    <doc>
                                        The array of controlled keywords, need to be from
                                        feature_type_dict_keyword, which specify which type
                                        each feature triangle cluster belongs to.
                                        Keep in mind that not each feature is an object or proxy.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="n_v_feat"/>
                                    </dimensions>
                                </field>
                                <field name="indices_feature" type="NX_INT" units="NX_UNITLESS">
                                    <doc>
                                        The explicit identifier of features.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="n_v_feat"/>
                                    </dimensions>
                                </field>
                                <group name="FEATURE" type="NXprocess" minOccurs="0" maxOccurs="6">
                                    <doc>
                                        In all situations instances of the parent NXprocess group are returned with a very similar
                                        information structuring and thus we here replace the template name FEATURE
                                        with one of the following types feature-specific group names:
                                        
                                        * objects, objects, irrespective their distance to the surface
                                        * objects_close_to_edge, sub-set of v_feature_object close surface
                                        * objects_far_from_edge, sub-set of v_feature_object not close to the surface
                                        * proxies, proxies, irrespective their distance to the surface
                                        * proxies_close_to_edge, sub-set of v_feature_proxies, close to surface
                                        * proxies_far_from_edge, sub-set of v_feature_proxies, not close to surface
                                    </doc>
                                    <field name="indices_feature" type="NX_INT" units="NX_UNITLESS">
                                        <doc>
                                            Explicit identifier of the feature a sub-set of the indices_feature in the
                                            parent group.
                                        </doc>
                                        <dimensions rank="1">
                                            <dim index="1" value="i"/>
                                        </dimensions>
                                    </field>
                                    <field name="volume" type="NX_FLOAT" units="NX_VOLUME">
                                        <doc>
                                            Volume of the feature. NaN for non-watertight objects.
                                        </doc>
                                        <dimensions rank="1">
                                            <dim index="1" value="i"/>
                                        </dimensions>
                                    </field>
                                    <group name="obb" type="NXcg_hexahedron" optional="true">
                                        <doc>
                                            An oriented bounding box (OBB) to each object.
                                        </doc>
                                        <field name="size" type="NX_FLOAT" optional="true" units="NX_LENGTH">
                                            <doc>
                                                Edge length of the oriented bounding box from largest to smallest value.
                                            </doc>
                                            <dimensions rank="2">
                                                <dim index="1" value="i"/>
                                                <dim index="2" value="3"/>
                                            </dimensions>
                                        </field>
                                        <field name="aspect" type="NX_FLOAT" optional="true" units="NX_DIMENSIONLESS">
                                            <doc>
                                                Oriented bounding box aspect ratio.
                                                YX versus ZY or second-largest over largest and smallest over second largest.
                                            </doc>
                                            <dimensions rank="2">
                                                <dim index="1" value="i"/>
                                                <dim index="2" value="2"/>
                                            </dimensions>
                                        </field>
                                        <field name="center" type="NX_NUMBER" optional="true" units="NX_LENGTH">
                                            <doc>
                                                Position of the geometric center, which often is but
                                                not necessarily has to be the center_of_mass of the
                                                hexahedrally-shaped sample/sample part.
                                            </doc>
                                            <dimensions rank="2">
                                                <dim index="1" value="i"/>
                                                <dim index="2" value="3"/>
                                            </dimensions>
                                        </field>
                                        <group name="hexahedra" type="NXcg_face_list_data_structure" optional="true">
                                            <doc>
                                                A simple approach to describe the entire set of hexahedra when the main intention
                                                is to store the shape of the hexahedra for visualization.
                                            </doc>
                                            <field name="vertices" type="NX_NUMBER" units="NX_LENGTH">
                                                <dimensions rank="2">
                                                    <dim index="1" value="k"/>
                                                    <dim index="2" value="3"/>
                                                </dimensions>
                                            </field>
                                            <!--MK::again we have no effective way to pinpoint the n_rows
MK::namely k != i each OBB has eight vertices-->
                                            <field name="xdmf_topology" type="NX_INT" units="NX_UNITLESS">
                                                <dimensions rank="1">
                                                    <dim index="1" value="k"/>
                                                </dimensions>
                                            </field>
                                            <field name="indices_feature_xdmf" type="NX_INT" units="NX_UNITLESS">
                                                <dimensions rank="1">
                                                    <dim index="1" value="k"/>
                                                </dimensions>
                                            </field>
                                        </group>
                                    </group>
                                    <group name="objectID" type="NXcg_polyhedron" nameType="partial" minOccurs="0" maxOccurs="unbounded">
                                        <group name="polyhedron" type="NXcg_face_list_data_structure">
                                            <field name="vertices" type="NX_FLOAT" units="NX_LENGTH">
                                                <dimensions rank="2">
                                                    <dim index="1" value="n_v"/>
                                                    <dim index="2" value="3"/>
                                                </dimensions>
                                            </field>
                                            <field name="faces" type="NX_UINT">
                                                <dimensions rank="2">
                                                    <dim index="1" value="n_f"/>
                                                    <dim index="2" value="3"/>
                                                </dimensions>
                                            </field>
                                            <field name="face_normals" type="NX_FLOAT" units="NX_LENGTH">
                                                <dimensions rank="2">
                                                    <dim index="1" value="n_f"/>
                                                    <dim index="2" value="3"/>
                                                </dimensions>
                                            </field>
                                            <field name="xdmf_topology" type="NX_INT" recommended="true" units="NX_UNITLESS">
                                                <dimensions rank="1">
                                                    <dim index="1" value="k"/>
                                                </dimensions>
                                            </field>
                                            <field name="indices_feature_xdmf" type="NX_INT" units="NX_UNITLESS" recommended="true">
                                                <dimensions rank="1">
                                                    <dim index="1" value="k"/>
                                                </dimensions>
                                            </field>
                                            <field name="ion_id" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                                <doc>
                                                    Array of evaporation_id / identifier_ion which details which ions
                                                    lie inside or on the surface of the feature.
                                                </doc>
                                                <dimensions rank="1">
                                                    <dim index="1" value="m"/>
                                                </dimensions>
                                            </field>
                                        </group>
                                    </group>
                                    <group name="composition" type="NXchemical_composition" optional="true">
                                        <field name="total" type="NX_NUMBER" units="NX_UNITLESS">
                                            <doc>
                                                Total (count) of ions inside or on the surface of the feature relevant for normalization.
                                                NaN for non watertight objects.
                                            </doc>
                                            <dimensions rank="1">
                                                <dim index="1" value="i"/>
                                            </dimensions>
                                        </field>
                                        <group type="NXatom" minOccurs="0" maxOccurs="unbounded">
                                            <field name="charge_state" type="NX_INT"/>
                                            <!--check these two ?-->
                                            <field name="nuclide_hash" type="NX_UINT"/>
                                            <field name="nuclide_list" type="NX_UINT"/>
                                            <field name="count" type="NX_NUMBER" units="NX_UNITLESS">
                                                <doc>
                                                    Count or weight which, when divided by total, yields the composition of this element,
                                                    nuclide, or (molecular) ion within the volume of the feature/object.
                                                </doc>
                                                <dimensions rank="1">
                                                    <dim index="1" value="i"/>
                                                </dimensions>
                                            </field>
                                        </group>
                                    </group>
                                </group>
                            </group>
                        </group>
                    </group>
                </group>
            </group>
        </group>
        <group name="interface_meshing" type="NXapm_paraprobe_tool_results" minOccurs="0" maxOccurs="1">
            <group name="window" type="NXcs_filter_boolean_mask">
                <field name="number_of_ions" type="NX_UINT"/>
                <field name="bitdepth" type="NX_UINT"/>
                <field name="mask" type="NX_UINT"/>
            </group>
            <!--results-->
            <field name="ion_multiplicity" type="NX_UINT" optional="true" units="NX_UNITLESS">
                <doc>
                    The multiplicity whereby the ion position is accounted for
                    irrespective whether the ion is considered as a decorator
                    of the interface or not.
                    As an example, with atom probe it is typically not possible
                    to resolve the positions of the atoms which arrive at the detector
                    as molecular ions. Therefore, an exemplar molecular ion of two carbon
                    atoms can be considered to have a multiplicity of two to account that
                    this molecular ion contributes two carbon atoms at the reconstructed
                    location considering that the spatial resolution of atom probe
                    experiments is limited.
                </doc>
                <dimensions rank="1">
                    <dim index="1" value="n_ions"/>
                </dimensions>
            </field>
            <field name="decorator_multiplicity" type="NX_UINT" optional="true" units="NX_UNITLESS">
                <doc>
                    The multiplicity whereby the ion position is accounted for when
                    the ion is considered one which is a decorator of the interface.
                </doc>
                <dimensions rank="1">
                    <dim index="1" value="n_ions"/>
                </dimensions>
            </field>
            <group name="initial_interface" type="NXprocess" optional="true">
                <doc>
                    The equation of the plane that is fitted initially.
                </doc>
                <field name="point_normal_form" type="NX_FLOAT" units="NX_LENGTH">
                    <doc>
                        The four parameter :math:`ax + by + cz + d = 0` which define the plane.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="4"/>
                    </dimensions>
                </field>
            </group>
            <group name="mesh_stateID" type="NXcg_triangle" nameType="partial" minOccurs="0" maxOccurs="unbounded">
                <doc>
                    The triangle surface mesh representing the interface model.
                    Exported at state before or after the next DCOM step.
                </doc>
                <field name="state" type="NX_CHAR">
                    <doc>
                        Was this state exported before or after the next DCOM step.
                    </doc>
                    <enumeration>
                        <item value="before"/>
                        <item value="after"/>
                    </enumeration>
                </field>
                <field name="dimensionality" type="NX_POSINT"/>
                <field name="cardinality" type="NX_POSINT"/>
                <field name="index_offset" type="NX_INT"/>
                <group name="triangles" type="NXcg_face_list_data_structure">
                    <field name="dimensionality" type="NX_POSINT"/>
                    <field name="number_of_vertices" type="NX_UINT"/>
                    <field name="number_of_faces" type="NX_UINT"/>
                    <field name="index_offset_vertex" type="NX_INT"/>
                    <field name="index_offset_edge" type="NX_INT"/>
                    <field name="index_offset_face" type="NX_INT"/>
                    <field name="indices_face" type="NX_INT">
                        <dimensions rank="1">
                            <dim index="1" value="j"/>
                        </dimensions>
                    </field>
                    <field name="vertices" type="NX_NUMBER" units="NX_LENGTH">
                        <dimensions rank="2">
                            <dim index="1" value="i"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <field name="vertex_normal" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                            Direction of each vertex normal.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="i"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <field name="vertex_normal_orientation" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                            Qualifier which details how specifically oriented the
                            face normal is with respect to its primitive (triangle):
                            
                            * 0 - undefined
                            * 1 - outer
                            * 2 - inner
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                    <field name="faces" type="NX_UINT">
                        <dimensions rank="2">
                            <dim index="1" value="j"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <field name="face_normal" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                            Direction of each face normal.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="j"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <field name="face_normal_orientation" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                            Qualifier which details how specifically oriented the
                            face normal is with respect to its primitive (triangle):
                            
                            * 0 - undefined
                            * 1 - outer
                            * 2 - inner
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="j"/>
                        </dimensions>
                    </field>
                    <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                        <dimensions rank="1">
                            <dim index="1" value="k"/>
                        </dimensions>
                    </field>
                </group>
                <field name="area" type="NX_NUMBER" units="NX_AREA">
                    <dimensions rank="1">
                        <dim index="1" value="c"/>
                    </dimensions>
                </field>
                <field name="edge_length" type="NX_NUMBER" units="NX_LENGTH">
                    <doc>
                        Array of edge length values. For each triangle the edge length is
                        reported for the edges traversed according to the sequence
                        in which vertices are indexed in triangles.
                    </doc>
                    <dimensions rank="2">
                        <dim index="1" value="c"/>
                        <dim index="2" value="3"/>
                    </dimensions>
                </field>
                <field name="interior_angle" type="NX_NUMBER" units="NX_ANGLE">
                    <doc>
                        Array of interior angle values. For each triangle the angle is
                        reported for the angle opposite to the edges which are traversed
                        according to the sequence in which vertices are indexed in triangles.
                    </doc>
                    <dimensions rank="2">
                        <dim index="1" value="c"/>
                        <dim index="2" value="4"/>
                    </dimensions>
                </field>
            </group>
        </group>
        <group name="oned_profile" type="NXapm_paraprobe_tool_results" minOccurs="0" maxOccurs="1">
            <group name="window" type="NXcs_filter_boolean_mask" optional="true">
                <field name="number_of_ions" type="NX_UINT"/>
                <field name="bitdepth" type="NX_UINT"/>
                <field name="mask" type="NX_UINT"/>
            </group>
            <!--results-->
            <group name="xdmf_cylinder" type="NXcg_polyhedron">
                <doc>
                    The ROIs are defined as cylinders for the computations. To visualize these we discretize
                    them into regular n-gons. Using for instance 360-gons, i.e. a regular n-gon with 360 edges,
                    resolves the lateral surface of each cylinder such that their renditions are smooth in
                    visualization software like Paraview.
                </doc>
                <field name="dimensionality" type="NX_POSINT"/>
                <field name="cardinality" type="NX_POSINT"/>
                <field name="center" type="NX_NUMBER" units="NX_LENGTH">
                    <doc>
                        Position of the geometric center, which often is but not
                        necessarily has to be the center_of_mass of the polyhedra.
                    </doc>
                    <dimensions rank="2">
                        <dim index="1" value="i"/>
                        <dim index="2" value="3"/>
                    </dimensions>
                </field>
                <field name="orientation" type="NX_FLOAT" units="NX_LENGTH">
                    <doc>
                        The orientation of the ROI defined via a vector which points along
                        the cylinder axis and whose length is the height of the cylinder.
                    </doc>
                    <dimensions rank="2">
                        <dim index="1" value="i"/>
                        <dim index="2" value="3"/>
                    </dimensions>
                </field>
                <!--XDMF support-->
                <field name="roi_id" type="NX_UINT" optional="true" units="NX_UNITLESS">
                    <doc>
                        XDMF support to enable coloring each ROI by its identifier.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="j"/>
                    </dimensions>
                </field>
                <field name="edge_contact" type="NX_UINT" optional="true" units="NX_UNITLESS">
                    <doc>
                        XDMF support to enable coloring each ROI whether it has edge contact or not.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="j"/>
                    </dimensions>
                </field>
                <field name="number_of_atoms" type="NX_UINT" optional="true" units="NX_UNITLESS">
                    <doc>
                        XDMF support to enable coloring each ROI by its number of atoms.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="j"/>
                    </dimensions>
                </field>
                <field name="number_of_ions" type="NX_UINT" optional="true" units="NX_UNITLESS">
                    <doc>
                        XDMF support to enable coloring each ROI by its number of ions.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="j"/>
                    </dimensions>
                </field>
                <group name="rois_far_from_edge" type="NXprocess">
                    <doc>
                        Distance and iontype-specific processed data for each ROI.
                        Arrays signed_distance and nuclide_hash are sorted by increasing
                        distance.
                        Array nuclide_hash reports one hash for each atom of each isotope.
                        Effectively, this can yield to groups of values on signed_distance
                        with the same distance value as molecular ions are reported decomposed
                        into their atoms.
                        Therefore, the XDMF support fields number_of_atoms and number_of_ions
                        are only expected to display pairwise the same values respectively,
                        if all ions are built from a single atom only.
                    </doc>
                    <group name="roiID" type="NXcg_roi" nameType="partial" minOccurs="0" maxOccurs="unbounded">
                        <field name="signed_distance" type="NX_FLOAT" units="NX_LENGTH">
                            <doc>
                                Sorted in increasing order projected along the positive direction
                                of the ROI as defined by orientation in the parent group.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="k"/>
                            </dimensions>
                        </field>
                        <field name="nuclide_hash" type="NX_UINT" units="NX_UNITLESS">
                            <doc>
                                Hashvalue as defined in :ref:`NXatom`.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="k"/>
                            </dimensions>
                        </field>
                    </group>
                </group>
            </group>
        </group>
        <group name="common" type="NXapm_paraprobe_tool_common">
            <field name="status" type="NX_CHAR"/>
            <field name="identifier_analysis" type="NX_UINT"/>
            <group name="config" type="NXnote">
                <field name="type" type="NX_CHAR"/>
                <field name="file_name" type="NX_CHAR"/>
                <field name="checksum" type="NX_CHAR"/>
                <field name="algorithm" type="NX_CHAR"/>
            </group>
            <group type="NXprogram" minOccurs="1" maxOccurs="unbounded">
                <field name="program" type="NX_CHAR">
                    <attribute name="version" type="NX_CHAR"/>
                </field>
            </group>
            <group name="profiling" type="NXcs_profiling" recommended="true">
                <field name="start_time" type="NX_DATE_TIME"/>
                <field name="end_time" type="NX_DATE_TIME"/>
                <field name="total_elapsed_time" type="NX_FLOAT"/>
                <field name="current_working_directory" type="NX_CHAR"/>
                <field name="number_of_processes" type="NX_UINT"/>
                <field name="number_of_threads" type="NX_UINT"/>
                <field name="number_of_gpus" type="NX_UINT"/>
            </group>
            <group type="NXuser" minOccurs="0" maxOccurs="unbounded">
                <doc>
                    If used, metadata of at least the person who performed this analysis.
                </doc>
                <field name="name" type="NX_CHAR"/>
            </group>
            <group name="paraprobe" type="NXcoordinate_system">
                <field name="type" type="NX_CHAR"/>
                <field name="handedness" type="NX_CHAR"/>
                <field name="x" type="NX_NUMBER" units="NX_LENGTH">
                    <dimensions rank="1">
                        <dim index="1" value="3"/>
                    </dimensions>
                </field>
                <field name="y" type="NX_NUMBER" units="NX_LENGTH">
                    <dimensions rank="1">
                        <dim index="1" value="3"/>
                    </dimensions>
                </field>
                <field name="z" type="NX_NUMBER" units="NX_LENGTH">
                    <dimensions rank="1">
                        <dim index="1" value="3"/>
                    </dimensions>
                </field>
            </group>
        </group>
    </group>
</definition>
