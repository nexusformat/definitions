category: application
doc: |
  Configurations of a paraprobe-transcoder tool run in atom probe microscopy.
symbols:
  doc: The symbols used in the schema to specify e.g. dimensions of arrays.
NXapm_paraprobe_config_transcoder:
  (NXentry):
    # by default for appdefs the value of the exists keyword is required
    # unless it is explicitly specified differently
    \@version:
      doc: Version specifier of this application definition.
    definition:
      doc: Official NeXus NXDL schema with which this file was written.
      enumeration: [NXapm_paraprobe_config_transcoder]
    program:
      doc: |
        Given name of the program/software/tool with which this NeXus
        (configuration) file was generated.
      \@version:
        doc: |
          Ideally program version plus build number, or commit hash or description
          of ever persistent resources where the source code of the program and
          build instructions can be found so that the program can be configured
          ideally in such a manner that the result of this computational process
          is recreatable in the same deterministic manner.
    analysis_identifier:
      exists: optional
      doc: |
        Ideally, a (globally persistent) unique identifier for referring
        to this analysis.
    analysis_description:
      exists: optional
      doc: Possibility for leaving a free-text description about this analysis.
    time_stamp(NX_DATE_TIME):
      doc: |
        ISO 8601 formatted time code with local time zone offset to UTC
        information included when this configuration file was created.
    (NXprocess):
      dataset(NXapm_input_reconstruction):
        filename:
          doc: |
            The absolute path and name of the vendor or community file from which
            to read the reconstructed ion positions. Currently POS, ePOS, and APT
            files from APSuite are supported.
          \@version:
            doc: |
              Version identifier of the file such as a secure hash which
              documents the binary state of the file to add an additional
              layer of reproducibility from which file specifically
              contains these data.
      iontypes(NXapm_input_ranging):
        filename:
          doc: |
            The absolute path and name of the vendor or community file from which
            to read the ranging definitions, i.e. how to map mass-to-charge-state
            ratios on iontypes. Currently RRNG and RNG files are supported.
          \@version:
            doc: |
              Version identifier of the file such as a secure hash which
              documents the binary state of the file to add an additional
              layer of reproducibility from which file specifically
              contains these data.
