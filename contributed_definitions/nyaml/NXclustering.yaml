category: base
doc: |
  Metadata to the results of a clustering analysis.
  
  Clustering algorithms are routine tools to segment a set of objects/primitives
  into groups, objects of different type. A plethora of algorithms have been
  proposed for geometric primitives as objects, such as points, triangles,
  or (abstract) objects.
  
  This base class considers metadata and results of one clustering
  applied to a set in which objects are either categorized as noise
  or belonging to a cluster, specifically here only one cluster.
symbols:
  doc: The symbols used in the schema to specify e.g. dimensions of arrays.
  n_lbl_num: Number of numeral labels per object.
  n_lbl_cat: Number of categorical labels per object.
  n_cluster: Total number of clusters detected.
NXclustering:
  number_of_numeric_labels(NX_UINT):
    doc: How many numeric labels does each object have.
    unit: NX_UNITLESS
  number_of_categorical_labels(NX_UINT):
    doc: How many categorical labels does each object have.
    unit: NX_UNITLESS
  objects(NX_CHAR):
    doc: |
      Reference to a set of objects investigated in a cluster analysis.
      Objects must have clear integer identifier.
  numeric_label(NX_NUMBER):
    doc: |
      Reference to numeric attribute data for each object.
  categorical_label(NX_CHAR):
    doc: |
      Reference to categorical attribute data for each object.
  # list instances of base classes of an applied cluster algorithm
  # e.g. (NXclustering_hdbscan):
  identifier_offset(NX_UINT):
    doc: |
      Which identifier is the first to be used to label a cluster.
      
      The value should be chosen in such a way that special values can be resolved:
      * identifier_offset-1 indicates an object belongs to no cluster.
      * identifier_offset-2 indicates an object belongs to the noise category.
      Setting for instance identifier_offset to 1 recovers the commonly used
      case that objects of the noise category get values to -1 and unassigned points to 0.
    unit: NX_UNITLESS
  unassigned(NX_UINT):
    doc: Total number of objects categorized as unassigned.
    unit: NX_UNITLESS
  noise(NX_UINT):
    doc: Total number of objects categorized as noise.
    unit: NX_UNITLESS
  number_of_cluster(NX_UINT):
    doc: Total number of clusters (excluding noise and unassigned).
    unit: NX_UNITLESS
  size(NX_NUMBER):
    doc: |
      Number of objects associated to each cluster. The labels are implicit,
      meaning the zeroth/first entry in the array belongs to the first cluster,
      the second entry to the second cluster and so on and so forth.
      The first cluster has the value of identifier_offset as its identifier.
      The second cluster has identifier_offset + 1, and so on and so forth.
    unit: NX_UNITLESS
    dimensions:
      rank: 1
      dim: [[1, n_cluster]]
  # should we handle, and if so how fuzzy assignments or similarly probability
