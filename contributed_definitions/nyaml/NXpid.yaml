doc: | 
  Contains the settings of a PID controller.
category: base
NXpid:
  description:
    doc: | 
      Description of how the Process Value for the PID controller is produced by sensor(s) in the setup.
      
      For example, a set of sensors could be averaged over before feeding it back into the loop.
  pv_sensor(NXsensor):
    doc: | 
      The sensor representing the Process Value used in the feedback loop for the PID.
      
      In case multiple sensors were used, this NXsensor should contain the proper calculated/aggregated value.
    value_log(NXlog):
      value(NX_NUMBER):
        doc: | 
          The actual timeseries data fed back to the PID loop.
  setpoint(NX_FLOAT):
    unit: NX_ANY
    doc: | 
      The Setpoint(s) used as an input for the PID controller.
      
      It can also be a link to an NXsensor.value field.
  K_p_value(NX_NUMBER):
    doc: | 
      Proportional term. The proportional term produces an output value
      that is proportional to the current error value.
      The proportional response can be adjusted by multiplying the error
      by a constant Kp, called the proportional gain constant.
  K_i_value(NX_NUMBER):
    doc: | 
      The contribution from the integral term is proportional to both
      the magnitude of the error and the duration of the error.
      The integral in a PID controller is the sum of the instantaneous
      error over time and gives the accumulated offset that should have
      been corrected previously. The accumulated error is then
      multiplied by the integral gain (Ki) and added to the
      controller output.
  K_d_value(NX_NUMBER):
    doc: | 
      The derivative of the process error is calculated by determining
      the slope of the error over time and multiplying this rate of
      change by the derivative gain K_d. The magnitude of the
      contribution of the derivative term to the overall control
      action is termed the derivative gain, K_d
