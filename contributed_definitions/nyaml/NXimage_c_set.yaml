category: base
doc: |
  Specialized base class container for reporting a set of images in reciprocal space.
  
  In practice, complex numbers are encoded via some formatted pair of real values.
  Typically, fast Algorithms for computing Fourier Transformations (FFT) are
  used to encode images in reciprocal (frequency) space. FFT libraries are used
  for implementing the key functionalities of these mathematical operations.
  
  Different libraries use different representations and encoding of the
  image computed. Details can be found in the respective sections of the
  typical FFT libraries:
  
  * `FFTW by M. Frigo and S. G. Johnson <https://www.fftw.org/fftw3_doc/Tutorial.html#Tutorial>`_
  * `Intel MKL by the Intel Co. <https://www.intel.com/content/www/us/en/docs/onemkl/developer-reference-c/2023-0/fourier-transform-functions.html>`_
  * `cuFFT by the NVidia Co. <https://docs.nvidia.com/cuda/cufft/index.html>`_
  
  Users are strongly advised to inspect carefully which specific conventions
  their library uses to be able to store and modify the implementation of their
  code so that the serialized representations as it is detailed
  here for NeXus matches with their intention.
  
  One- and two-dimensional FFTs should use the stack(NXdata) instances.
  Three-dimensional FFTs should use the hyperstack(NXdata) instances.
symbols:
  n_images: |
    Number of images in the (hyper)stack.
  n_k: |
    Number of pixel per image in the slowest direction.
  n_j: |
    Number of pixel per image in the slow direction.
  n_i: |
    Number of pixel per image in the fast direction.
type: group
NXimage_c_set(NXimage_set):
  # details about the FFT library used could for instance be stored in the
  # NXprocess group which the NXimage_c_set base class can borrow from its
  # NXimage_set parent base class
  # process information are composable from the NXimage_set base class
  stack(NXdata):
    doc: |
      Image stack.
    real(NX_NUMBER):
      doc: |
        Image intensity of the real part.
      unit: NX_UNITLESS
      dim: (n_images, n_j, n_i)
    imag(NX_NUMBER):
      doc: |
        Image intensity of the imaginary part.
      unit: NX_UNITLESS
      dim: (n_images, n_j, n_i)
    magnitude(NX_NUMBER):
      doc: |
        Magnitude of the image intensity.
      unit: NX_UNITLESS
      dim: (n_images, n_j, n_i)
    axis_image_identifier(NX_INT):
      doc: |
        Image identifier
      unit: NX_UNITLESS
      dim: (n_images,)
      \@long_name(NX_CHAR):
        doc: |
          Image identifier.
    # axis_k(NX_NUMBER):
    #  doc: |
    #    Pixel coordinate center along k direction.
    #   unit: NX_ANY  # NX_RECIPROCAL_LENGTH
    #   dim: (n_k,)
    #   \@long_name(NX_CHAR):
    #     doc: |
    #       Coordinate along j direction.
    axis_j(NX_NUMBER):
      doc: |
        Pixel coordinate center along j direction.
      unit: NX_ANY  # NX_RECIPROCAL_LENGTH
      dim: (n_j,)
      \@long_name(NX_CHAR):
        doc: |
          Coordinate along j direction.
    axis_i(NX_NUMBER):
      doc: |
        Pixel coordinate center along i direction.
      unit: NX_ANY  # NX_RECIPROCAL_LENGTH
      dim: (n_i,)
      \@long_name(NX_CHAR):
        doc: |
          Coordinate along i direction.

  hyperstack(NXdata):
    doc: |
      Image hyperstack.
    real(NX_NUMBER):
      doc: |
        Image intensity of the real part.
      unit: NX_UNITLESS
      dim: (n_images, n_k, n_j, n_i)
    imag(NX_NUMBER):
      doc: |
        Image intensity of the imaginary part.
      unit: NX_UNITLESS
      dim: (n_images, n_k, n_j, n_i)
    magnitude(NX_NUMBER):
      doc: |
        Magnitude of the image intensity.
      unit: NX_UNITLESS
      dim: (n_images, n_k, n_j, n_i)
    axis_image_identifier(NX_INT):
      doc: |
        Image identifier
      unit: NX_UNITLESS
      dim: (n_images,)
      \@long_name(NX_CHAR):
        doc: |
          Image identifier.
    axis_k(NX_NUMBER):
      doc: |
        Pixel coordinate center along k direction.
      unit: NX_ANY  # NX_RECIPROCAL_LENGTH
      dim: (n_k,)
      \@long_name(NX_CHAR):
        doc: |
          Coordinate along j direction.
    axis_j(NX_NUMBER):
      doc: |
        Pixel coordinate center along j direction.
      unit: NX_ANY  # NX_RECIPROCAL_LENGTH
      dim: (n_j,)
      \@long_name(NX_CHAR):
        doc: |
          Coordinate along j direction.
    axis_i(NX_NUMBER):
      doc: |
        Pixel coordinate center along i direction.
      unit: NX_ANY  # NX_RECIPROCAL_LENGTH
      dim: (n_i,)
      \@long_name(NX_CHAR):
        doc: |
          Coordinate along i direction.
