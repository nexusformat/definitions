#Pincelli, Rettig, Arora at fhi-berlin.mpg.de, Dobener at hu-berlin.de, 06/2022
#Draft version of a NeXus application definition for photoemission,
#It is designed to be extended by other application definitions
#with higher granularity in the data description.

doc: This is the application definition for multidimensional photoelectron spectroscopy on liquids
category: application 
(NXmpes):
  (NXentry):
    title:
    start_time(NX_DATE_TIME):
      doc: "Datetime of the start of the measurement."
    definition:
      \@version:
      enumeration: ["NXmpes_liquid"]
    (NXuser):
      doc: "Contact information of at least the user of the instrument or the
            investigator who performed this experiment.
            Adding multiple users if relevant is recommended."
      name:
        doc: "Name of the user."
      affiliation:
        exists: recommended
        doc: "Name of the affiliation of the user at the point in time when the
              experiment was performed."
      address:
        exists: recommended
        doc: "Full address (street, street number, ZIP, city, country) of the
          user's affiliation."
      email:
        doc: "Email address of the user."
      orcid:
        exists: recommended
        doc: "Author ID defined by https://orcid.org/."
    (NXinstrument):
      energy_resolution(NX_FLOAT):
      (NXsource):
        doc: "The source used to generate the primary photons. Properties refer strictly to parameters of the source, not of the output beam.
        For example, the energy of the source is not the optical power of the beam, but the energy of the electron beam in a synchrotron and so on."
        type:
          enumeration: [
            "Synchrotron X-ray Source",
            "Rotating Anode X-ray", 
            "Fixed Tube X-ray",
            "UV Laser", 
            "Free-Electron Laser", 
            "Optical Laser", 
            "UV Plasma Source", 
            "Metal Jet X-ray", 
            "HHG laser"
          ]
        name:
        probe:
          doc: "Type of probe. In photoemission it's always photons, so the full NIAC list is restricted."
          enumeration: ["x-ray","ultraviolet", "visible light"]
      (NXbeam): 
        distance(NX_NUMBER):
          doc: "Distance of the point of evaluation of the beam from the sample surface."
        incident_energy(NX_FLOAT):
        incident_energy_spread(NX_NUMBER):
          exists: recommended
        incident_polarization(NX_NUMBER):
          exists: recommended
      (NXelectronanalyser):
        description:
        energy_resolution(NX_FLOAT):
          exists: recommended
          doc: "Energy resolution of the analyser with the current setting. May be linked from a NXcalibration."
        fast_axes(NX_CHAR):
          exists: recommended
        slow_axes:
          exists: recommended
        (NXcollectioncolumn):
          scheme:
            doc: "Scheme of the electron collection column."
            enumeration: [
              "Standard", 
              "Angular dispersive", 
              "Selective area",
              "Deflector", 
              "PEEM", 
              "Momentum Microscope"
            ]
          mode:
            exists: recommended
          projection:
            exists: recommended
          field_aperture(NXaperture):
            exists: optional
            doc: "The size and position of the field aperture inserted in the column.
              To add additional or other apertures use the APERTURE group of NXcollectioncolumn."
          contrast_aperture(NXaperture):
            exists: optional
            doc: "The size and position of the contrast aperture inserted in the column.
              To add additional or other apertures use the APERTURE group of NXcollectioncolumn."
        (NXenergydispersion):
          scheme:
            enumeration:
              [
                "tof",
                "hemispherical",
                "double hemispherical",
                "cylindrical mirror",
                "display mirror",
                "retarding grid",
              ]
          pass_energy(NX_FLOAT):
          energy_scan_mode:
          entrance_slit(NXaperture):
            exists: optional
            doc: "Size, position and shape of the entrance slit in dispersive analyzers.
              To add additional or other slits use the APERTURE group of NXenergydispersion."
          exit_slit(NXaperture):
            exists: optional
            doc: "Size, position and shape of the exit slit in dispersive analyzers.
              To add additional or other slits use the APERTURE group of NXenergydispersion."
        (NXdetector):
          amplifier_type:
            exists: recommended
            doc: "Type of electron amplifier in the first amplification step."
            enumeration: ["MCP", "channeltron"]
            # ToDo: Representation of count rate calibration
          detector_type:
            exists: recommended
            doc: "Description of the detector type."
            enumeration: ["DLD","Phosphor+CCD","Phosphor+CMOS","ECMOS", "Anode", "Multi-anode"]
          (NXdata): # Raw signal without calibrated axes.
            exists: recommended
            \@signal:
              enumeration: ['raw']
            raw(NX_NUMBER): # There is a block of numbers named raw.
              doc: "Raw data before calibration."
        (NXmanipulator):
          exists: optional
          doc: "Manipulator for positioning of the sample."
          sample_temperature(NX_FLOAT):
            exists: recommended
          drain_current(NX_FLOAT):
            exists: recommended
          sample_bias(NX_FLOAT):
            exists: recommended
    (NXprocess):
        doc: "Document an event of data processing, reconstruction, or analysis for this data.
          Describe the appropriate axis calibrations for your experiment using 
          one or more of the following NXcalibrations"
        energy_calibration(NXcalibration):
          exists: optional
          applied(NX_BOOLEAN):
            doc: "Has an energy calibration been applied?"
          calibrated_axis(NX_FLOAT):
            exists: recommended
            doc: "This is the calibrated energy axis to be used for data plotting."
        angular_calibration(NXcalibration):
          exists: optional
          applied(NX_BOOLEAN):
            doc: "Has an angular calibration been applied?"
          calibrated_axis(NX_FLOAT):
            exists: recommended
            doc: "This is the calibrated angular axis to be used for data plotting."
        spatial_calibration(NXcalibration):
          exists: optional
          applied(NX_BOOLEAN):
            doc: "Has an spatial calibration been applied?"
          calibrated_axis(NX_FLOAT):
            exists: recommended
            doc: "This is the calibrated spatial axis to be used for data plotting."
        momentum_calibration(NXcalibration):
          exists: optional
          applied(NX_BOOLEAN):
            doc: "Has an momentum calibration been applied?"
          calibrated_axis(NX_FLOAT):
            exists: recommended
            doc: "This is the momentum axis to be used for data plotting."
    sample(NXsample):
      name:
      description:
      chemical_formula:
        exists: recommended
        doc: "The chemical formula of the sample. For mixtures use the NXsample_component group in NXsample instead."
      sample_history(NXnote):
        exists: recommended
        doc: "A descriptor to keep track of the treatment of the sample before entering the photoemission experiment.
        Ideally, a full report of the previous operations, in any format (NXnote allows to add pictures, audio, movies).
        Alternatively, a reference to the location or a unique identifier or other metadata file.
        In the case these are not available, free-text description."
      preparation_date(NX_DATE_TIME):
        exists: recommended
        doc: "Date of preparation of the sample for the XPS experiment (i.e. cleaving, last annealing)."
      preparation_description(NXnote):
        doc: "Description of the surface preparation technique for the XPS experiment, i.e. UHV cleaving, in-situ growth, sputtering/annealing etc.
        Ideally, a full report of the previous operations, in any format(NXnote allows to add pictures, audio, movies).
        Alternatively, a reference to the location or a unique identifier or other metadata file.
        In the case these are not available, free-text description."
      # Problem: if the temperature is logged, the data is an array of temperature/timestamp pairs.
      # the timestamp NX_DATE_TIME structure of the timestamp can not be easily handled by just a field.
      # there is a base class for this, NXlog. The NIAC decided to use the same name (temperature) instead of the previous temperature_log.
      # how do I explain here in an appdef that temperature can be either NXnumber (single value or scanned array) or a NXlog?
      # It seems quite contorted to ask to create a separate timestamp array when we have a base class that handles it more elegantly.
      temperature(NX_FLOAT):
        doc: "In the case of a fixed temperature measurement this is the scalar temperature of the sample.
        In the case of an experiment in which the temperature is changed and recoded, this is an array of length m of temperatures.
        This should be a link to
        /entry/instrument/manipulator/sample_temperature."
        unit: NX_TEMPERATURE
      situation: 
        enumeration: ["vacuum", "inert atmosphere", "oxidising atmosphere", "reducing atmosphere"]
      # Similar situation here, ca be a single number or a log.
      gas_pressure(NX_FLOAT):
      electric_field(NX_FLOAT):
        unit: NX_VOLTAGE / NX_LENGTH
      geometry(NXoff_geometry):
      thickness(NX_FLOAT):
        unit: NX_LENGTH
      type(NX_CHAR):
      flow_rate(NX_FLOAT):
        unit: NX_VOLUME / NX_TIME
      shape(NX_CHAR):
        enumeration: [round, flat]
      leaf_geometry(NXtransformations):
        doc: |
          Transformations describing the transformation chain to the
          liqudjet leaf.
        leaf_normal(NX_NUMBER):
          doc: The normal of the liquidjet leaf.
          \@vector(NX_NUMBER):
            doc: The vector normal to the liquidjet leaf.
          \@depends_on(NX_CHAR):
            doc: |
              Pointer to the previous matrices in the transformation chain
              to relate the normal to the rest of the instrument.
              If this is '.' the vector attribute only specifies the normal vector
              without specifying the position of the liquidjet leaf with respect
              to the instrument.
      SOLVENT(NX_SAMPLE):
        # FD 24.08.22: Should we also add transformations here to 
        # describe the directions of the liquidjets?
        doc: |
          Solvent material of the liquidjet. 
          This also accounts for multiple jets if more
          than one solvent is given.
        description:
        name:
        chemical_formula:
        chem_id_cas(NX_CHAR):
        flow_rate(NX_FLOAT):
          unit: NX_VOLUME / NX_TIME
        nozzle_angle(NX_FLOAT):
          unit: NX_ANGLE
        ph_value(NX_FLOAT):
          unit: NX_UNITLESS
        temperature(NX_FLOAT):
        unit: NX_TEMPERATURE
      SOLUTE(NX_SAMPLE):
        description:
        name:
        chemical_formula:
        chem_id_cas(NX_CHAR):
        mol_fraction(NX_FLOAT):
        solvent(NX_CHAR):
    (NXdata):
      \@signal:
        enumeration: ["data"] # There is an object named data that contains the signal
      data(NX_NUMBER): # There is a block of numbers named data.
        doc: "Represents a measure of one- or more-dimensional photoemission counts, where
          the varied axis may be for example 
          energy, momentum, spatial coordinate, pump-probe delay, spin index, temperature, etc.
          The axes traces should be linked to the actual encoder position in NXinstrument or calibrated axes in NXprocess."
