category: base
doc: |
  Computational geometry description of a set of triangles in Euclidean space.
symbols:
  doc: The symbols used in the schema to specify e.g. dimensions of arrays.
  d: The dimensionality, which has to be at least 2.
  c: The cardinality of the set, i.e. the number of triangles.
  n_unique: The number of unique vertices supporting the triangles.
NXcg_triangle_set:
  dimensionality(NX_POSINT):
    unit: NX_UNITLESS
  cardinality(NX_POSINT):
    unit: NX_UNITLESS
  number_of_unique_vertices(NX_POSINT):
    unit: NX_UNITLESS
  (NXtransformations):
    doc: |
      Reference to or definition of a coordinate system with
      which the qualifiers and primitive data are interpretable.
  identifier_offset(NX_INT):
    doc: |
      Integer which specifies the first index to be used for distinguishing
      triangles. Identifiers are defined either implicitly
      or explicitly. For implicit indexing the identifiers are defined on the
      interval [identifier_offset, identifier_offset+c-1].
      For explicit indexing the identifier array has to be defined.
      
      The identifier_offset field can for example be used to communicate if the
      identifiers are expected to start from 1 (referred to as Fortran-/Matlab-)
      or from 0 (referred to as C-, Python-style index notation) respectively.
    unit: NX_UNITLESS
  identifier(NX_INT):
    doc: Integer used to distinguish triangles for explicit indexing.
    unit: NX_UNITLESS
    dimensions:
      rank: 1
      dim: [[1, c]]
  triangles(NXcg_face_list_data_structure):
    # exists: [min, 0, max, 1]
    doc: |
      A simple approach to describe the entire set of triangles when the
      main intention is to store the shape of the triangles for visualization.
  # detailed additional information eventually mesh-related data
  vertex_normal(NXcg_unit_normal_set):
  edge_normal(NXcg_unit_normal_set):
  face_normal(NXcg_unit_normal_set):
  # triangles_half_edge(NXcg_half_edge_data_structure):
  # properties of triangles
  area(NX_NUMBER):
    unit: NX_AREA
    dimensions:
      rank: 1
      dim: [[1, c]]
  edge_length(NX_NUMBER):
    doc: |
      Array of edge length values. For each triangle the edge length is
      reported for the edges traversed according to the sequence
      in which vertices are indexed in triangles.
    unit: NX_LENGTH
    dimensions:
      rank: 2
      dim: [[1, c], [2, 3]]
  interior_angle(NX_NUMBER):
    doc: |
      Array of interior angle values. For each triangle the angle is
      reported for the angle opposite to the edges which are traversed
      according to the sequence in which vertices are indexed in triangles.
    unit: NX_ANGLE
    dimensions:
      rank: 2
      dim: [[1, c], [2, 3]]
  center(NX_NUMBER):
    doc: The center of mass of each polygon.
    unit: NX_LENGTH
    dimensions:
      rank: 2
      dim: [[1, c], [2, d]]
  bounding_box(NXcg_hexahedron_set):
    doc: Axis-aligned or (approximate) (optimal) bounding boxes to each polygon.