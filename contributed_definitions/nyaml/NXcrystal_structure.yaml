category: base
doc: |
  Base class to describe the atomic crystal structure of a phase.
  
  This base class contains key metadata that are relevant parameter to every
  physics-based model to simulate radiation matter interaction.
  
  Examples where such base class is useful are kinematic or dynamic
  diffraction simulations of e.g. (Kikuchi or other type of) patterns.
# The actual indexing of Kikuchi patterns may use different algorithms.
# Such are used within different workflows where simulated and measured
# Kikuchi pattern are compared to rate which phase and orientation is the most
# likely candidate describing the pattern measured at that each scan point
# respectively. If this evaluation yields scan points without any solutions,
# these are represented using the null-phase model phase0, aka n/a aka notIndexed.
# Traditionally, Hough transformation-based indexing has been the most frequently
# used algorithm. Dictionary-based alternatives are emerging.
symbols:
  n_hkl: |
    Number of reflectors (Miller crystallographic plane triplets).
  n_pos: |
    Number of atom positions.
  d: |
    Dimensionality of the lattice.
type: group
NXcrystal_structure(NXobject):
  \@depends_on(NX_CHAR):
    doc: |
      Detail in which reference frame the unit cell is defined.
  dimensionality(NX_POSINT):
    doc: |
      Dimensionality of the lattice.
    enumeration: [1, 2, 3]
  reference(NXidentifier):
    doc: |
      Reference to another resource that was used for
      instantiating this structure model.
  a_b_c(NX_NUMBER):
    doc: |
      Crystallography unit cell parameters a, b, and c.
    unit: NX_LENGTH
    dim: (d,)
  # defined using which convention?
  alpha_beta_gamma(NX_NUMBER):
    doc: |
      Crystallography unit cell parameters alpha, beta, and gamma.
    unit: NX_ANGLE
    dim: (d,)
  area(NX_NUMBER):
    doc: |
      Area of the unit cell considering that d = 2.
    unit: NX_AREA
  volume(NX_NUMBER):
    doc: |
      Volume of the unit cell considering that d = 3.
    unit: NX_VOLUME
  crystal_system(NX_CHAR):
    doc: |
      Crystal system
    enumeration: [triclinic, monoclinic, orthorhombic, tetragonal, rhombohedral, hexagonal, cubic]
  # 2d
  laue_group(NX_CHAR):
    doc: |
      Laue group using International Table of Crystallography Notation.
  # add enumeration of all possible
  point_group(NX_CHAR):
    doc: |
      Point group using International Table of Crystallography Notation.
  # add enumeration all possible
  # 3d
  space_group(NX_CHAR):
    doc: |
      Space group from the International Table of Crystallography Notation.
  # add enumeration of all possible
  is_centrosymmetric(NX_BOOLEAN):
    doc: |
      True if space group is considered a centrosymmetric one.
      False if space group is considered a non-centrosymmetric one.
      Centrosymmetric has all types and combinations of symmetry elements
      (translation, rotational axis, mirror planes, center of inversion)
      Non-centrosymmetric compared to centrosymmetric is constrained (no inversion).
      Chiral compared to non-centrosymmetric is constrained (no mirror planes).
  is_chiral(NX_BOOLEAN):
    doc: |
      True if space group is considered a chiral one.
      False if space group is consider a non-chiral one.
  phase_identifier(NX_INT):
    doc: |
      Identifier for each phase.
      
      The value 0 is reserved for the unknown phase that represents the
      null-model no sufficiently significant confirmation. In other words,
      the phase_name is n/a, notIndexed.
      
      The phase identifier value has to match with the integer postfix of the
      group name which represents that instance in a NeXus/HDF5 file, i.e.
      if two phases were used e.g. 0 and 1, two instances of an
      :ref:`NXcrystal_structure` named phase0 and phase1
      should be stored in the HDF5 file.
    unit: NX_UNITLESS
    # \@depends_on(NX_CHAR):
    #   doc: |
    #     Refers to the specific identifier_offset to consider.
    #     
    #     If not provided assume identifier_offset is 0.
  phase_name(NX_CHAR):
    doc: |
      Name of the phase/alias.
      
      If the phase_identifier is 0 and one would like to use the field
      phase_name the value should be n/a.
  atom_identifier(NX_CHAR):
    doc: |
      Label for each atom position.
    dim: (n_pos,)
  atom_type(NX_UINT):
    doc: |
      The hash value :math:`H` is :math:`H = Z + N \cdot 256` with :math:`Z`
      the number of protons and :math:`N` the number of neutrons
      of each isotope respectively. :math:`Z` and :math:`N` have to be 8-bit unsigned integers.
      For the rationale behind this `M. KÃ¼hbach et al. (2021) <https://doi.org/10.1017/S1431927621012241>`_
    unit: NX_UNITLESS
    dim: (n_pos,)
  # atom_position(NXcg_point_set):
  atom_position(NX_NUMBER):
    doc: |
      Atom positions.
    dim: (n_pos, d)
    unit: NX_ANY
    \@depends_on(NX_CHAR):
      doc: |
        Reference to an instance of :ref:`NXcoordinate_system`
        whereby the positions can be resolved.
  # in addition we need to have a physical model e.g. kinematic or dynamical e-diffraction theory
  # to describe the simulated Kikuchi pattern generated from such a model
  atom_occupancy(NX_NUMBER):
    doc: |
      Relative occupancy of the atom position.
    unit: NX_DIMENSIONLESS
    dim: (n_pos,)
  number_of_planes(NX_UINT):
    doc: |
      How many reflectors are distinguished.
      
      Value has to match value for symbol n_hkl.
    unit: NX_UNITLESS
  # Miller indices :math:`(hkl)[uvw]`.
  miller(NX_NUMBER):
    unit: NX_UNITLESS
    doc: |
      Miller indices :math:`(hkl)[uvw]` of the planes.
      
      The first triplet specify :math:`(hkl)` the second triplet :math:`[uvw]`.
      Miller indices refer to the Cartesian right-handed coordinate system
      of the unit cell.
    dim: (n_hkl, 6)
  dspacing(NX_NUMBER):
    doc: |
      Spacing between crystallographic planes as defined by field miller.
    unit: NX_LENGTH
    dim: (n_hkl,)
  relative_intensity(NX_NUMBER):
    doc: |
      Relative intensity of the signal for the plane.
    unit: NX_DIMENSIONLESS
    dim: (n_hkl,)
  number_of_scan_points(NX_UINT):
    doc: |
      In case the :ref:`NXcrystal_structure` base class is used
      with analyzed orientation maps this field stores how many scan points
      of the map were identified as that phase.
    unit: NX_UNITLESS
  ipfID(NXms_ipf):
  pfID(NXms_pf):
  odfID(NXms_odf):
# here the theoreticians expert (Marc deGraeff, Aimo Winkelmann, Peter Rez)
# can give some good suggestions on how to improve and ideally make even
# more general this section
