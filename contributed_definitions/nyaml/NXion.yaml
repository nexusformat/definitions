category: base
doc: |
  Set of atoms of a molecular ion or fragment in e.g. ToF mass spectrometry.
symbols:
  doc: The symbols used in the schema to specify e.g. dimensions of arrays.
  n_ivecmax: Maximum number of atoms/isotopes allowed per (molecular) ion (fragment).
  n_ranges: Number of mass-to-charge-state-ratio range intervals for ion type.
NXion:
  ion_type(NX_UINT):
    doc: | 
      Ion type (ion species) identifier. The identifier zero
      is reserved for the special unknown ion type.
    unit: NX_UNITLESS
  isotope_vector(NX_UINT):
    doc: |
      A vector of isotope hash values.
      These values have to be stored in an array, sorted in decreasing order.
      The array is filled with zero hash values indicating unused places.
      The individual hash values are built with the following hash function:
      
      The hash value :math:`H` is :math:`H = Z + N*256` with :math:`Z`
      the number of protons and :math:`N` the number of neutrons
      of each isotope respectively.
      
      Z and N have to be 8-bit unsigned integers.
      For the rationale behind this `M. KÃ¼hbach et al. (2021) <https://doi.org/10.1017/S1431927621012241>`_
    unit: NX_UNITLESS
    dimensions:
      rank: 1
      dim: [[1, n_ivecmax]]
  nuclid_list(NX_UINT):
    doc: |
      A supplementary row vector which decodes the isotope_vector into
      a human-readable matrix of nuclids with the following formatting:
      
      The first row specifies the isotope mass, i.e. using the hashvalues from
      the isotope_vector this is :math:`Z + N`. As an example for a carbon-14
      isotope the number is 14.
      The second row specifies the number of protons :math:`Z`, e.g. 6 for the
      carbon-14 example. This row matrix is thus a mapping the notation of
      using superscribed isotope mass and subscripted number of protons to identify
      isotopes.
      Unused places filling up to n_ivecmax should be filled with zero.
    unit: NX_UNITLESS
    dimensions:
      rank: 2
      dim: [[1, 2], [2, n_ivecmax]]
  charge_state(NX_INT):
    doc: |
      Signed charge state of the ion in multiples of electron charge.
      
      Only positive values will be measured in atom probe microscopy as the
      ions are accelerated by a negatively signed bias electric field.
      In the case that the charge state is not explicitly recoverable,
      the value should be set to zero.
      
      In atom probe microscopy this is for example the case when using
      classical range file formats like RNG, RRNG for atom probe data.
      These file formats do not document the charge state explicitly.
      They report the number of atoms of each element per molecular ion
      surplus the mass-to-charge-state-ratio interval.
      With this it is possible to recover the charge state only for
      specific molecular ions as the accumulated mass of the molecular ion
      is defined by the isotopes, which without knowing the charge leads
      to an underconstrained problem.
      Details on ranging can be found in the literature: `M. K. Miller <https://doi.org/10.1002/sia.1719>`_
    unit: NX_CHARGE
  name:
    doc: |
      Human-readable ion type name (e.g. Al +++)
      The string should consists of ASCII UTF-8 characters, 
      ideally using LaTeX notation to specify the isotopes, ions, and charge
      state. Examples are 12C + or Al +++.
      Although this name may be human-readable and intuitive, parsing such
      names becomes impractical for more complicated cases. Therefore, the
      isotope_vector should be the preferred machine-readable format to use.
  mass_to_charge_range(NX_FLOAT):
    doc: |
      Associated lower (mqmin) and upper (mqmax) bounds of 
      mass-to-charge-state ratio interval(s) [mqmin, mqmax]
      (boundaries included) for which the respective ion is labelled
      as an ion of the here referred to ion_type.
    unit: NX_ANY
    # \@units: Da
    dimensions:
      rank: 2
      dim: [[1, n_ranges], [2, 2]]
