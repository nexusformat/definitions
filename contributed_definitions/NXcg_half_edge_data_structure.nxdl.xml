<?xml version="1.0" ?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd" type="group" extends="NXobject" category="base" name="NXcg_half_edge_data_structure">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="d">
            <doc>
                 The dimensionality, which has to be at least 2.
            </doc>
        </symbol>
        <symbol name="n_v">
            <doc>
                 The number of vertices.
            </doc>
        </symbol>
        <symbol name="n_f">
            <doc>
                 The number of faces.
            </doc>
        </symbol>
        <symbol name="n_he">
            <doc>
                 The number of half-edges.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Computational geeometry description of a half-edge data structure.
         
         Such a data structure can be used to efficiently circulate around faces
         and iterate over vertices of a planar graph.
    </doc>
    <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
    <field name="number_of_vertices" type="NX_POSINT" units="NX_UNITLESS"/>
    <field name="number_of_faces" type="NX_POSINT" units="NX_UNITLESS"/>
    <field name="number_of_half_edges" type="NX_POSINT" units="NX_UNITLESS"/>
    <field name="vertex_identifier_offset" type="NX_INT" units="NX_UNITLESS">
        <doc>
             In this half-edge data structure vertex identifiers start at 1.
             Vertices are identified with consecutive integers up to number_of_vertices.
             This field can be used to document which constant integer has to be
             added to another set of vertex_identifier to assure that these other
             identifiers also start at 1.
        </doc>
    </field>
    <field name="face_identifier_offset" type="NX_INT" units="NX_UNITLESS">
        <doc>
             In this half-edge data structure face identifiers start at 1.
             Faces are identified with consecutive integers up to number_of_faces.
             This field can be used to document which constant integer has to be
             added to another set of face_identifier to assure that these other
             identifiers also start at 1.
             
             The face identifier zero is reserved for the NULL face !
        </doc>
    </field>
    <field name="half_edge_identifier_offset" type="NX_INT" units="NX_UNITLESS">
        <doc>
             In this half-edge data structure half-edge identifiers start at 1.
             Half-edges are identified with consecutive integers up to number_of_half_edges.
             This field can be used to document which constant integer has to be
             added to another set of half_edge_identifier to assure that these other
             identifiers also start at 1.
        </doc>
    </field>
    <field name="position" type="NX_NUMBER" units="NX_LENGTH">
        <doc>
             The position of the vertices.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="n_v"/>
            <dim index="2" value="d"/>
        </dimensions>
    </field>
    <field name="vertex_incident_half_edge" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Identifier of the incident half-edge.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_v"/>
        </dimensions>
    </field>
    <field name="face_half_edge" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Identifier of the (starting)/associated half-edge of the face.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_f"/>
        </dimensions>
    </field>
    <field name="half_edge_vertex_origin" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             The identifier of the vertex from which this half-edge is outwards pointing.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_he"/>
        </dimensions>
    </field>
    <field name="half_edge_twin" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Identifier of the associated oppositely pointing half-edge.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_he"/>
        </dimensions>
    </field>
    <field name="half_edge_incident_face" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             If the half-edge is a boundary half-edge the
             incident face identifier is NULL, i.e. 0.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_he"/>
        </dimensions>
    </field>
    <field name="half_edge_next" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Identifier of the next half-edge.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_he"/>
        </dimensions>
    </field>
    <field name="half_edge_prev" type="NX_UINT" units="NX_UNITLESS">
        <doc>
             Identifier of the previous half-edge.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_he"/>
        </dimensions>
    </field>
    <field name="weinberg_vector" type="NX_CHAR">
        <doc>
             Users are referred to the literature for the background of L. Weinberg's
             work about topological characterization of planar graphs:
             
             * `L. Weinberg 1966a, &lt;https://dx.doi.org/10.1109/TCT.1964.1082216&gt;`_  
             * `L. Weinberg, 1966b, &lt;https://dx.doi.org/10.1137/0114062&gt;`_  
             * `E. A. Lazar et al. &lt;https://doi.org/10.1103/PhysRevLett.109.095505&gt;`_  
             
             and how this work can e.g. be applied in space-filling tessellations
             of microstructural objects like crystals/grains.
        </doc>
    </field>
</definition>
