<?xml version="1.0" ?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd" type="group" extends="NXobject" category="base" name="NXcg_parallelogram_set">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="c">
            <doc>
                 The cardinality of the set, i.e. the number of parallelograms.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Computational geometry description of a set of parallelograms in Euclidean space.
         
         The parallelograms do not have to be connected, can have different size,
         can intersect, and be rotated.
         This class can also be used to describe rectangles or squares, axis-aligned or not.
         The class represents different access and description levels to offer both
         applied scientists and computational geometry experts to use the same
         base class but rather their specific view on the data:
         
         * Most simple many experimentalists wish to communicate dimensions/the size
           of e.g. a region of interest in the 2D plane. In this case the alignment
           with axes is not relevant as eventually relevant is only the area of the ROI.
         * In other cases the extent of the parallelogram is relevant though.
         * Finally in CAD models we would like to specify the polygon
           which is parallelogram represents.
         
         Parallelograms are important geometrical primitives. Not so much because of their
         uses in nowadays, thanks to improvements in computing power, not so frequently
         any longer performed 2D simulation. Many scanning experiments probe though
         parallelogram-shaped ROIs on the surface of samples.
         
         Parallelograms have to be non-degenerated, closed, and built of polygons
         which are not self-intersecting.
         
         The term parallelogram will be used throughout this base class but includes
         the especially in engineering and more commonly used special cases,
         rectangle, square, 2D box, axis-aligned bounding box (AABB), or
         optimal bounding box (OBB) but here the analogous 2D cases.
         
         An axis-aligned bounding box is a common data object in computational science
         and codes to represent a rectangle whose edges are aligned with the axes 
         of a coordinate system. As a part of binary trees these are important data
         objects for time- as well as space-efficient queries
         of geometric primitives in techniques like kd-trees.
         
         An optimal bounding box is a common data object which provides the best
         tight fitting box about an arbitrary object. In general such boxes are
         rotated. Other than in 3D dimensions the rotation calipher method offers
         a rigorous approach to compute optimal bounding boxes in 2D.
    </doc>
    <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS">
        <enumeration>
            <item value="2"/>
        </enumeration>
    </field>
    <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
    <field name="shape" type="NX_NUMBER" units="NX_LENGTH">
        <doc>
             A qualitative description of each parallelogram/rectangle/square/box.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="2"/>
        </dimensions>
    </field>
    <field name="length" type="NX_NUMBER" units="NX_LENGTH">
        <doc>
             Qualifier how one edge is longer than all the other edge of the parallelogam.
             Often the term length is associated with one edge being parallel to
             an axis of the coordinate system.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="width" type="NX_NUMBER" units="NX_LENGTH">
        <doc>
             Qualifier often used to describe the length of an edge within
             a specific coordinate system.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="center" type="NX_NUMBER" units="NX_LENGTH">
        <doc>
             Position of the geometric center, which often is but not necessarily
             has to be the center_of_mass of the parallelogram.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="2"/>
        </dimensions>
    </field>
    <field name="surface_area" type="NX_NUMBER" units="NX_AREA">
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="is_axis_aligned" type="NX_BOOLEAN">
        <doc>
             Only to be used if is_box is present. In this case, this field describes
             whether parallelograms are rectangles/squares whose primary edges
             are parallel to the axes of the Cartesian coordinate system.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <group type="NXtransformations">
        <doc>
             Reference to or definition of a coordinate system with
             which the qualifiers and mesh data are interpretable.
        </doc>
    </group>
    <field name="identifier_offset" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer which specifies the first index to be used for distinguishing
             parallelograms. Identifiers are defined either implicitly
             or explicitly. For implicit indexing the identifiers are defined on the
             interval [identifier_offset, identifier_offset+c-1].
             For explicit indexing the identifier array has to be defined.
             
             The identifier_offset field can for example be used to communicate if the
             identifiers are expected to start from 1 (referred to as Fortran-/Matlab-)
             or from 0 (referred to as C-, Python-style index notation) respectively.
        </doc>
    </field>
    <field name="identifier" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer used to distinguish parallelograms for explicit indexing.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <group name="orientation" type="NXorientation_set"/>
    <group name="vertex_normal" type="NXcg_unit_normal_set"/>
    <group name="edge_normal" type="NXcg_unit_normal_set"/>
    <group name="face_normal" type="NXcg_unit_normal_set"/>
    <group name="parallelograms" type="NXcg_face_list_data_structure">
        <doc>
             A simple approach to describe the entire set of parallelograms when the
             main intention is to store the shape of the parallelograms for visualization.
        </doc>
    </group>
    <group name="parallelogram" type="NXcg_face_list_data_structure">
        <doc>
             Disentangled representations of the mesh of specific parallelograms.
        </doc>
    </group>
</definition>
