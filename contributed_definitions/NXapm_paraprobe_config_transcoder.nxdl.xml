<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2014-2022 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="application" name="NXapm_paraprobe_config_transcoder" extends="NXobject" type="group" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
    </symbols>
    <doc>
         Configurations of a paraprobe-transcoder tool run in atom probe microscopy.
    </doc>
    <group type="NXentry" minOccurs="1" maxOccurs="1">
        <!--by default for appdefs the value of the exists keyword is required
unless it is explicitly specified differently-->
        <attribute name="version">
            <doc>
                 Version specifier of this application definition.
            </doc>
        </attribute>
        <field name="definition">
            <doc>
                 Official NeXus NXDL schema with which this file was written.
            </doc>
            <enumeration>
                <item value="NXapm_paraprobe_config_transcoder"/>
            </enumeration>
        </field>
        <field name="program">
            <doc>
                 Given name of the program/software/tool with which this NeXus
                 (configuration) file was generated.
            </doc>
            <attribute name="version">
                <doc>
                     Ideally program version plus build number, or commit hash or description
                     of ideally an ever persistent resource where the source code of the
                     program and build instructions can be found so that the program can be
                     configured ideally in such a manner that the result of this computational
                     process is recreatable deterministically.
                </doc>
            </attribute>
        </field>
        <field name="analysis_identifier">
            <doc>
                 Ideally, a (globally persistent) unique identifier for referring
                 to this analysis.
            </doc>
        </field>
        <field name="analysis_description" optional="true">
            <doc>
                 Possibility for leaving a free-text description about this analysis.
            </doc>
        </field>
        <field name="results_path" optional="true">
            <doc>
                 Path to the directory where the tool should store NeXus/HDF5 results
                 of this analysis. If not specified results will be stored in the
                 current working directory.
            </doc>
        </field>
        <field name="time_stamp" type="NX_DATE_TIME">
            <doc>
                 ISO 8601 formatted time code with local time zone offset to UTC
                 information included when this configuration file was created.
            </doc>
        </field>
        <group type="NXprocess">
            <!--NXapm_input base classes are specialized here because
paraprobe-transcoder is the entry point for community data
which are not necessarily NeXus-->
            <group name="dataset" type="NXapm_input_reconstruction">
                <field name="filename">
                    <doc>
                         The path and name of the file (technology partner or community format)
                         from which to read the reconstructed ion positions. Currently, POS,
                         ePOS, APT files from APSuite, and NXS, i.e. NeXus/HDF5 files
                         are supported.
                    </doc>
                    <attribute name="version"/>
                </field>
            </group>
            <group name="iontypes" type="NXapm_input_ranging">
                <field name="filename">
                    <doc>
                         The path and name of the file (technology partner or community format
                         from which to read the ranging definitions, i.e. how to map mass-to-
                         charge-state ratios on iontypes. Currently, RRNG, RNG, and NXS, i.e.
                         NeXus/HDF5 files are supported.
                    </doc>
                    <attribute name="version"/>
                </field>
            </group>
        </group>
        <group name="performance" type="NXcs_profiling">
            <field name="current_working_directory"/>
        </group>
    </group>
</definition>
