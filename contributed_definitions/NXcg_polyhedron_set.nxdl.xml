<?xml version="1.0" ?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd" type="group" extends="NXobject" category="base" name="NXcg_polyhedron_set">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="c">
            <doc>
                 The cardinality of the set, i.e. the number of polyhedra.
            </doc>
        </symbol>
        <symbol name="n_e_total">
            <doc>
                 The total number of edges for all polyhedra.
            </doc>
        </symbol>
        <symbol name="n_f_total">
            <doc>
                 The total number of faces for all polyhedra.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Computational geometry description of a polyhedra in Euclidean space.
         
         Polyhedra, also so-called cells (especially in the convex of tessellations),
         here described have to be all non-degenerated, closed, built of and thus
         built out of not-self-intersecting polygon meshes. Polyhedra may make contact,
         so that this base class can be used for a future description of tessellations.
         
         For more complicated manifolds and especially for polyhedra with holes, users
         are advised to check if their particular needs are described by creating
         (eventually customized) instances of an NXcg_polygon_set, which can be
         extended for the description of piecewise-linear complexes.
    </doc>
    <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS">
        <enumeration>
            <item value="3"/>
        </enumeration>
    </field>
    <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
    <field name="volume" type="NX_NUMBER" units="NX_VOLUME">
        <doc>
             Interior volume
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="center" type="NX_NUMBER" units="NX_LENGTH">
        <doc>
             Position of the geometric center, which often is but not necessarily
             has to be the center_of_mass of the polyhedra.
        </doc>
        <dimensions rank="2">
            <dim index="1" value="c"/>
            <dim index="2" value="3"/>
        </dimensions>
    </field>
    <field name="surface_area" type="NX_NUMBER" units="NX_AREA">
        <doc>
             Total surface area as the sum of all faces.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="number_of_faces" type="NX_POSINT" units="NX_UNITLESS">
        <doc>
             The number of faces for each polyhedron. Faces of adjoining polyhedra
             are counted for each polyhedron. This field can be used to interpret
             the array/field with the individual area values for each face.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <field name="face_area" type="NX_NUMBER" units="NX_AREA">
        <doc>
             Area of each of the four triangular faces of each tetrahedron.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_f_total"/>
        </dimensions>
    </field>
    <field name="number_of_edges" type="NX_POSINT">
        <doc>
             The number of edges for each polyhedron. Edges of adjoining polyhedra
             are counterd for each polyhedron. This field can be used to interpret
             the array/field with the individual length for each edge.
        </doc>
    </field>
    <field name="edge_length" type="NX_NUMBER" units="NX_LENGTH">
        <doc>
             Length of each edge of each tetrahedron.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="n_e_total"/>
        </dimensions>
    </field>
    <group type="NXtransformations">
        <doc>
             Reference to or definition of a coordinate system with
             which the qualifiers and mesh data are interpretable.
        </doc>
    </group>
    <field name="identifier_offset" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer which specifies the first index to be used for distinguishing
             polyhedra. Identifiers are defined either implicitly
             or explicitly. For implicit indexing the identifiers are defined on the
             interval [identifier_offset, identifier_offset+c-1].
             For explicit indexing the identifier array has to be defined.
             
             The identifier_offset field can for example be used to communicate if the
             identifiers are expected to start from 1 (referred to as Fortran-/Matlab-)
             or from 0 (referred to as C-, Python-style index notation) respectively.
        </doc>
    </field>
    <field name="identifier" type="NX_INT" units="NX_UNITLESS">
        <doc>
             Integer used to distinguish polyhedra for explicit indexing.
        </doc>
        <dimensions rank="1">
            <dim index="1" value="c"/>
        </dimensions>
    </field>
    <group name="vertex_normal" type="NXcg_unit_normal_set"/>
    <group name="edge_normal" type="NXcg_unit_normal_set"/>
    <group name="face_normal" type="NXcg_unit_normal_set"/>
    <group name="polyhedra" type="NXcg_face_list_data_structure">
        <doc>
             A simple approach to describe the entire set of polyhedra when the
             main intention is to store the shape of the polyhedra for visualization.
        </doc>
    </group>
    <group name="polyhedron" type="NXcg_face_list_data_structure">
        <doc>
             Disentangled representations of the mesh of specific polyhedron.
        </doc>
    </group>
    <group name="polyhedron_half_edge" type="NXcg_half_edge_data_structure">
        <doc>
             Disentangled representation of the planar graph that each polyhedron
             represents. Such a description simplifies topological processing
             or analyses of mesh primitive operations and neighborhood queries.
        </doc>
    </group>
</definition>
