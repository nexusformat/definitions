<?xml version="1.0" ?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd" type="group" extends="NXobject" category="application" name="NXapm_paraprobe_config_surfacer">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="n_alpha_values">
            <doc>
                 Number of alpha values (and offset values) to probe.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Configuration of a paraprobe-surfacer tool run in atom probe microscopy.
    </doc>
    <group type="NXentry">
        <attribute name="version">
            <doc>
                 Version specifier of this application definition.
            </doc>
        </attribute>
        <field name="definition" type="NX_CHAR">
            <doc>
                 Official NeXus NXDL schema with which this file was written.
            </doc>
            <enumeration>
                <item value="NXapm_paraprobe_config_surfacer"/>
            </enumeration>
        </field>
        <field name="program" type="NX_CHAR">
            <doc>
                 Given name of the program/software/tool with which this NeXus
                 (configuration) file was generated.
            </doc>
            <attribute name="version" type="NX_CHAR">
                <doc>
                     Ideally program version plus build number, or commit hash or description
                     of ever persistent resources where the source code of the program and
                     build instructions can be found so that the program can be configured
                     ideally in such a manner that the result of this computational process
                     is recreatable in the same deterministic manner.
                </doc>
            </attribute>
        </field>
        <field name="time_stamp" type="NX_DATE_TIME">
            <doc>
                 ISO 8601 formatted time code with local time zone offset to UTC
                 information included when this configuration file was created.
            </doc>
        </field>
        <field name="analysis_identifier" type="NX_CHAR" optional="true">
            <doc>
                 Ideally, a (globally persistent) unique identifier for referring
                 to this analysis.
            </doc>
        </field>
        <field name="analysis_description" type="NX_CHAR" optional="true">
            <doc>
                 Possibility for leaving a free-text description about this analysis.
            </doc>
        </field>
        <field name="number_of_processes" type="NX_UINT" units="NX_UNITLESS">
            <doc>
                 For now a support field for the tool to identify how many individual
                 analyses the tool should executed as part of the analysis.
            </doc>
        </field>
        <group type="NXprocess">
            <group name="dataset" type="NXapm_input_reconstruction">
                <field name="filename" type="NX_CHAR">
                    <attribute name="version" type="NX_CHAR"/>
                </field>
                <field name="dataset_name_reconstruction" type="NX_CHAR"/>
                <field name="dataset_name_mass_to_charge" type="NX_CHAR"/>
            </group>
            <group name="iontypes" type="NXapm_input_ranging">
                <field name="filename" type="NX_CHAR">
                    <attribute name="version" type="NX_CHAR"/>
                </field>
                <field name="group_name_iontypes" type="NX_CHAR"/>
            </group>
            <group name="spatial_filter" type="NXspatial_filter" optional="true">
                <field name="windowing_method" type="NX_CHAR" minOccurs="1"/>
                <group type="NXcg_ellipsoid_set" optional="true">
                    <field name="dimensionality" type="NX_POSINT"/>
                    <field name="cardinality" type="NX_POSINT"/>
                    <field name="identifier_offset" type="NX_INT"/>
                    <field name="center" type="NX_NUMBER"/>
                    <field name="half_axes_radii" type="NX_NUMBER"/>
                    <field name="orientation" type="NX_NUMBER"/>
                </group>
                <group type="NXcg_cylinder_set" optional="true">
                    <field name="dimensionality" type="NX_POSINT"/>
                    <field name="cardinality" type="NX_POSINT"/>
                    <field name="identifier_offset" type="NX_INT"/>
                    <field name="center" type="NX_NUMBER"/>
                    <field name="height" type="NX_NUMBER"/>
                    <field name="radii" type="NX_NUMBER"/>
                </group>
                <group type="NXcg_hexahedron_set" optional="true">
                    <field name="dimensionality" type="NX_POSINT"/>
                    <field name="cardinality" type="NX_POSINT"/>
                    <field name="identifier_offset" type="NX_INT"/>
                    <group name="hexahedra" type="NXcg_face_list_data_structure"/>
                </group>
                <group type="NXcs_filter_boolean_mask" optional="true">
                    <field name="number_of_objects" type="NX_UINT"/>
                    <field name="bitdepth" type="NX_UINT"/>
                    <field name="mask" type="NX_UINT"/>
                    <field name="identifier" type="NX_UINT"/>
                </group>
            </group>
            <group name="evaporation_id_filter" type="NXsubsampling_filter" optional="true"/>
            <group name="iontype_filter" type="NXmatch_filter" optional="true"/>
            <group name="hit_multiplicity_filter" type="NXmatch_filter" optional="true"/>
            <group name="surface_meshing" type="NXprocess">
                <field name="preprocessing_method" type="NX_CHAR">
                    <doc>
                         Specifies the method that is used to preprocess the point cloud.
                         The main purpose of this setting is to specify whether the point
                         cloud should be segmented or not during the preprocessing
                         to identify which points are more likely lying close to the edge
                         of the point cloud. These points could be more relevant than the
                         interior points for certain alpha-shape constructions.
                         
                         By default no such filtering is used during pre-processing.
                         By contrast, the option kuehbach activates a preprocessing
                         during which a Hoshen-Kopelman percolation analysis is used
                         to identify which points are closer to the edge of the dataset.
                         This can reduce the number of points in the alpha-shape
                         computation and thus improve performance substantially.
                         Details about the methods are reported in 
                         `M. KÃ¼hbach et al. &lt;https://doi.org/10.1038/s41524-020-00486-1&gt;`_.
                    </doc>
                    <enumeration>
                        <item value="default"/>
                        <item value="kuehbach"/>
                    </enumeration>
                </field>
                <field name="preprocessing_kernel_width" type="NX_UINT" units="NX_UNITLESS">
                    <doc>
                         When using the kuehbach preprocessing, this is the width of the
                         kernel for identifying which ions are in voxels close to the
                         edge of the point cloud.
                    </doc>
                </field>
                <field name="alpha_value_choice" type="NX_CHAR">
                    <doc>
                         Specifies which method to use to define the alpha value.
                         By default, the tool uses a fast specialized algorithm for
                         computing only the convex hull.
                         
                         The value smallest_solid instructs the CGAL library to choose a
                         value which realizes an alpha-shape that is the smallest solid.
                         
                         The value cgal_optimal instructs the library to choose a value
                         which the library considers as an optimal value. Details are
                         define in the respective section of the CGAL library on 3D alpha
                         shapes.
                         
                         The value set_of_values instructs to compute a list of
                         alpha-shapes for the specified alpha-values.
                         
                         The value set_of_alpha_wrappings instructs the library to generate
                         a set of so-called alpha wrappings. These are a method
                         which is similar to alpha shapes but provide additional guarantees
                         though such as watertightness and proximity constraints on the
                         resulting wrapping.
                    </doc>
                    <enumeration>
                        <item value="fast_convex_hull"/>
                        <item value="smallest_solid"/>
                        <item value="cgal_optimal"/>
                        <item value="set_of_values"/>
                        <item value="set_of_alpha_wrappings"/>
                    </enumeration>
                </field>
                <field name="alpha_values" type="NX_FLOAT" units="NX_LENGTH">
                    <doc>
                         Array of alpha values to use when alpha_value_choice is set_of_values
                         or when alpha_value_choice is set_of_alpha_wrappings.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="n_alpha_values"/>
                    </dimensions>
                </field>
                <field name="offset_values" type="NX_FLOAT" units="NX_LENGTH">
                    <doc>
                         Array of offset values to use when alpha_value_choice is
                         set_of_alpha_wrappings. The array of alpha_values and offset_values
                         define a sequence of (alpha and offset value).
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="n_alpha_values"/>
                    </dimensions>
                </field>
                <field name="has_exterior_facets" type="NX_BOOLEAN">
                    <doc>
                         Specifies if the tool should compute the set of exterior triangle
                         facets for each alpha complex (for convex hull, alpha shapes, and wrappings)
                    </doc>
                </field>
                <field name="has_closure" type="NX_BOOLEAN">
                    <doc>
                         Specifies if the tool should check if the alpha complex of exterior
                         triangular facets is a closed polyhedron.
                    </doc>
                </field>
                <field name="has_interior_tetrahedra" type="NX_BOOLEAN">
                    <doc>
                         Specifies if the tool should compute all interior tetrahedra 
                         of the alpha complex (currently only for alpha shapes).
                    </doc>
                </field>
            </group>
        </group>
    </group>
</definition>
