<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2022-2025 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="base" type="group" name="NXdelocalization" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
            The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="n_p">
            <doc>
                Number of points/objects.
            </doc>
        </symbol>
        <symbol name="n_m">
            <doc>
                Number of mark data per point/object.
            </doc>
        </symbol>
        <symbol name="n_atoms">
            <doc>
                Number of atoms in the whitelist.
            </doc>
        </symbol>
        <symbol name="n_nuclides">
            <doc>
                Number of isotopes in the whitelist.
            </doc>
        </symbol>
    </symbols>
    <doc>
        Base class of the configuration and results of a delocalization algorithm.
        
        Delocalization is used to distribute point-like objects on a grid to obtain
        e.g. smoother count, composition, or concentration values of scalar fields
        and compute gradients of these fields.
    </doc>
    <group name="grid" type="NXcg_grid">
        <doc>
            Details about the grid on which the delocalization is applied.
        </doc>
    </group>
    <!--grid(NX_CHAR):
  doc: |
    Reference or link to the grid on which the delocalization is applied.
objects(NX_CHAR):
  doc: |
   Reference or link to the points which are delocalized on the grid.-->
    <!--for APM the speciality is nothing but:
each point marks the location of an ion (object) in the tomographic reconstruction
there is a boolean mask which filters which ions, i.e. points are considered
plus there is a weight interpretation model, specifically in atom probe
if a (molecular) ion is decomposed into its atoms or isotopes
plus, given there is such a weight interpretation model, there is a weight
associated, specifically an integer >= 1 with each considered ion and 0 for
all ions which are not considered,
this weight is the multiplicity with respect to the interpretation model
i.e. a C:2 molecular ion has a multiplicity of 2 if the ion is considered
and the interpretation model that to consider carbon atoms or carbon ions-->
    <group name="weighting_model" type="NXmatch_filter">
        <doc>
            The weighting model specifies how mark data are mapped to a weight per
            point/object.
        </doc>
        <field name="weighting_method" type="NX_CHAR">
            <doc>
                As an example from the research field of atom probe points/objects are (molecular) ions.
                Different methods are used for weighting ions:
                
                * default, points get all the same weight 1., which for atom probe is equivalent
                  to (molecular) iontype-based delocalization.
                * element, points get as much weight as they have atoms representing a nuclide
                  with a proton number that is matching to a respective entry in whitelist.
                  In atom probe jargon, this means atomic_decomposition.
                * isotope, points get as much weight as they have atoms representing a nuclides
                  from a respective entry in whitelist.
                  In atom probe jargon, this means isotope_decomposition.
            </doc>
            <enumeration>
                <item value="default"/>
                <item value="element"/>
                <item value="isotope"/>
            </enumeration>
        </field>
        <!--method is specialized from NXmatch_filter-->
        <field name="method" type="NX_CHAR">
            <enumeration>
                <item value="whitelist"/>
            </enumeration>
        </field>
        <field name="match" type="NX_UINT" units="NX_UNITLESS">
            <doc>
                A list of nuclides based on which to evaluate the weight. Nuclides need to exist in the nuclide table.
                Values are nuclide (isotope) hash values using the following hashing rule :math:`H = Z + N \cdot 256`
                with :math:`Z` the number of protons and :math:`N` the number of neutrons of the nuclide.
                For elements set :math:`N` to zero.
            </doc>
            <dimensions rank="1">
                <dim index="1" value="n_nuclides"/>
            </dimensions>
        </field>
        <field name="mark" type="NX_NUMBER" units="NX_UNITLESS">
            <doc>
                Attribute data for each member of the point cloud. For APM these are the
                iontypes generated via ranging. The number of mark data per point is 1
                in the case for atom probe.
            </doc>
            <dimensions rank="2">
                <dim index="1" value="n_p"/>
                <dim index="2" value="n_m"/>
            </dimensions>
        </field>
        <field name="weight" type="NX_NUMBER" units="NX_UNITLESS">
            <doc>
                Weighting factor with which the integrated intensity per grid cell is
                multiplied specifically for each point/object. For APM the weight are
                positive integer values, specifically the multiplicity of the ion,
                according to the details of the weighting_method.
            </doc>
            <dimensions rank="1">
                <dim index="1" value="n_p"/>
            </dimensions>
        </field>
    </group>
</definition>
