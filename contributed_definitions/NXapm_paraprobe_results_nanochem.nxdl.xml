<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
# 
# Copyright (C) 2014-2022 NeXus International Advisory Committee (NIAC)
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="application" name="NXapm_paraprobe_results_nanochem" extends="NXobject" type="group" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="n_ions">
            <doc>
                 The total number of ions in the reconstruction.
            </doc>
        </symbol>
        <symbol name="n_atomic">
            <doc>
                 The total number of atoms in the atomic_decomposition match filter.
            </doc>
        </symbol>
        <symbol name="n_isotopic">
            <doc>
                 The total number of isotopes in the isotopic_decomposition match filter.
            </doc>
        </symbol>
        <symbol name="d">
            <doc>
                 The dimensionality of the delocalization grid.
            </doc>
        </symbol>
        <symbol name="c">
            <doc>
                 The cardinality/total number of cells/grid points in the delocalization grid.
            </doc>
        </symbol>
        <!--c_tri_soup: |
  The cardinality/total number of triangles in the triangle soup.-->
        <symbol name="n_f_tri_xdmf">
            <doc>
                 The total number of XDMF values to represent all faces of triangles via XDMF.
            </doc>
        </symbol>
        <symbol name="n_feature_dict">
            <doc>
                 The total number of entries in a feature dictionary.
            </doc>
        </symbol>
        <symbol name="n_speci">
            <doc>
                 The total number of member distinguished when reporting composition.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Results of a paraprobe-nanochem tool run.
    </doc>
    <!--by default for appdefs the value of the exists keyword is required
unless it is explicitly specified differently-->
    <group type="NXentry" minOccurs="1" maxOccurs="1">
        <attribute name="version">
            <doc>
                 Version specifier of this application definition.
            </doc>
        </attribute>
        <!--##MK::begin of the tool-specific section-->
        <field name="definition">
            <doc>
                 Official NeXus NXDL schema with which this file was written.
            </doc>
            <enumeration>
                <item value="NXapm_paraprobe_results_nanochem"/>
            </enumeration>
        </field>
        <!--##MK::end of the tool-specific section-->
        <field name="program">
            <doc>
                 Given name of the program/software/tool with which this NeXus
                 (configuration) file was generated.
            </doc>
            <attribute name="version">
                <doc>
                     Ideally program version plus build number, or commit hash or description
                     of ever persistent resources where the source code of the program and
                     build instructions can be found so that the program can be configured
                     ideally in such a manner that the result of this computational process
                     is recreatable in the same deterministic manner.
                </doc>
            </attribute>
        </field>
        <field name="analysis_identifier">
            <doc>
                 Ideally, a (globally persistent) unique identifier for referring
                 to this analysis.
            </doc>
        </field>
        <field name="analysis_description" optional="true">
            <doc>
                 Possibility for leaving a free-text description about this analysis.
            </doc>
        </field>
        <field name="start_time" type="NX_DATE_TIME">
            <doc>
                 ISO 8601 formatted time code with local time zone offset to UTC
                 information included when the analysis behind this results file
                 was started, i.e. the paraprobe-tool executable started as a process.
            </doc>
        </field>
        <field name="end_time" type="NX_DATE_TIME">
            <doc>
                 ISO 8601 formatted time code with local time zone offset to UTC
                 information included when the analysis behind this results file
                 were completed and the paraprobe-tool executable exited as a process.
            </doc>
        </field>
        <field name="config_filename">
            <doc>
                 The absolute path and name of the config file for this analysis.
            </doc>
            <attribute name="version">
                <doc>
                     At least SHA256 strong hash of the specific config_file for
                     tracking provenance.
                </doc>
            </attribute>
        </field>
        <field name="results_path" optional="true">
            <doc>
                 Path to the directory where the tool should store NeXus/HDF5 results
                 of this analysis. If not specified results will be stored in the
                 current working directory.
            </doc>
        </field>
        <field name="status">
            <doc>
                 A statement whether the paraprobe-tool executable managed to
                 process the analysis or failed prematurely.
                 
                 This status is written to the results file after the end_time
                 at which point the executable must no longer compute analyses.
                 Only when this status message is present and shows `success`, the
                 user should consider the results. In all other cases, it might be
                 that the executable has terminated prematurely or another error
                 occurred.
            </doc>
            <enumeration>
                <item value="success"/>
                <item value="failure"/>
            </enumeration>
        </field>
        <group type="NXuser" optional="true">
            <doc>
                 If used, contact information and eventually details
                 of at least the person who performed this analysis.
            </doc>
            <field name="name"/>
            <field name="affiliation" recommended="true"/>
            <field name="address" optional="true"/>
            <field name="email" recommended="true"/>
            <field name="orcid" recommended="true"/>
            <field name="orcid_platform" recommended="true"/>
            <field name="telephone_number" optional="true"/>
            <field name="role" recommended="true"/>
            <field name="social_media_name" optional="true"/>
            <field name="social_media_platform" optional="true"/>
        </group>
        <group type="NXcoordinate_system_set">
            <doc>
                 Details about the coordinate system conventions used.
                 If nothing else is specified we assume that there
                 has to be at least one set of NXtransformations named
                 paraprobe defined, which specifies the coordinate system.
                 In which all positions are defined.
            </doc>
            <!--##MK::define also reconstruction coordinate system and
##MK::map between the two-->
            <group type="NXtransformations" minOccurs="1" maxOccurs="unbounded">
                <doc>
                     The individual coordinate systems which should be used.
                     Field names should be prefixed with the following controlled terms
                     indicating which individual coordinate system is described:
                     
                     * paraprobe
                     * lab
                     * specimen
                     * laser
                     * leap
                     * detector
                     * recon
                </doc>
            </group>
        </group>
        <!--##MK::begin of the tool-specific section-->
        <group type="NXprocess" minOccurs="0" maxOccurs="1">
            <group name="window" type="NXcs_filter_boolean_mask">
                <doc>
                     A bitmask which identifies which of the ions in the dataset were
                     analyzed during this process.
                </doc>
                <field name="number_of_ions" type="NX_UINT" units="NX_UNITLESS">
                    <doc>
                         Number of ions covered by the mask.
                         The mask value for most may be 0.
                    </doc>
                </field>
                <field name="bitdepth" type="NX_UINT" units="NX_UNITLESS">
                    <doc>
                         Number of bits assumed matching on a default datatype.
                         (e.g. 8 bits for a C-style uint8).
                    </doc>
                </field>
                <field name="mask" type="NX_UINT" units="NX_UNITLESS">
                    <doc>
                         The unsigned integer array representing the content of the mask.
                         If padding is used, padded bits are set to 0. The mask is for
                         convenience always as large as the entire dataset as it will
                         be stored compressed anyway. The convenience feature with this
                         is that then the mask can be decoded with numpy and mirrored
                         against the evaporation_id array and one immediately can filter
                         out all points that were used by the paraprobe-toolbox executable.
                         The length of the array adds to the next unsigned integer
                         if the number of ions in the dataset is not an integer
                         multiple of the bitdepth (padding).
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="n_ions"/>
                    </dimensions>
                </field>
            </group>
            <group name="iso_surface_analysis" type="NXprocess" minOccurs="0" maxOccurs="unbounded">
                <group name="DELOCALIZATION" type="NXdelocalization">
                    <field name="weighting_model">
                        <doc>
                             The weighting model specifies how mark data are mapped to a weight
                             per point/ion. For atom probe microscopy (APM) mark data are e.g.
                             which iontype an ion has. As an example, different models are used
                             which account differently for the multiplicity of a point/ion
                             during delocalization:
                             
                             * unity, all points/ions get the same weight 1.
                             * atomic_decomposition, points get as much weight as they
                               have atoms of a type in atomic_decomposition_rule,
                             * isotope_decomposition, points get as much weight as they have
                               isotopes of a type in isotopic_decomposition_rule.
                        </doc>
                        <enumeration>
                            <item value="unity"/>
                            <item value="atomic_decomposition"/>
                            <item value="isotopic_decomposition"/>
                        </enumeration>
                    </field>
                    <!--if weighting_model == atomic_decomposition needs atomic_decomposition_rule
if weighting_model == isotopic_decomposition needs isotopic_decomposition_rule-->
                    <group name="atomic_decomposition_rule" type="NXmatch_filter" optional="true">
                        <doc>
                             A list of elements (via proton number) to consider for the
                             atomic_decomposition weighting model.
                             Elements must exist in the periodic table of elements and be
                             specified by their number of protons.
                             Values in match are isotope hash values using the following
                             hashing rule $H = Z + 256*N$ with $Z$ the number of protons
                             and $N$ the number of neutrons of the isotope.
                             In the case of elements this hashing rule has the advantage
                             that for elements the proton number is their hash value because
                             N is zero.
                        </doc>
                        <field name="method">
                            <doc>
                                 Meaning of the filter:
                                 Whitelist specifies which entries with said value to include.
                                 Entries with all other values will be filtered out.
                                 
                                 Blacklist specifies which entries with said value to exclude.
                                 Entries with all other values will be included.
                            </doc>
                            <enumeration>
                                <item value="whitelist"/>
                                <item value="blacklist"/>
                            </enumeration>
                        </field>
                        <field name="match" type="NX_NUMBER" units="NX_UNITLESS">
                            <doc>
                                 Array of values to filter according to method. For example,
                                 if the filter specifies [1, 5, 6] and method is whitelist,
                                 only entries with values matching 1, 5 or 6 will be processed.
                                 All other entries will be filtered out/not considered.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="n_atomic"/>
                            </dimensions>
                        </field>
                    </group>
                    <group name="isotopic_decomposition_rule" type="NXmatch_filter" optional="true">
                        <doc>
                             A list of isotopes (via proton and neutron number) to consider
                             for the isotopic_decomposition weighting model.
                             Isotopes must exist in the nuclid table.
                             Values in match are isotope hash values using the following
                             hashing rule $H = Z + 256*N$ with $Z$ the number of protons
                             and $N$ the number of neutrons of the isotope.
                        </doc>
                        <field name="method">
                            <doc>
                                 Meaning of the filter:
                                 Whitelist specifies which entries with said value to include.
                                 Entries with all other values will be filtered out.
                                 
                                 Blacklist specifies which entries with said value to exclude.
                                 Entries with all other values will be included.
                            </doc>
                            <enumeration>
                                <item value="whitelist"/>
                                <item value="blacklist"/>
                            </enumeration>
                        </field>
                        <field name="match" type="NX_NUMBER" units="NX_UNITLESS">
                            <doc>
                                 Array of values to filter according to method. For example,
                                 if the filter specifies [1, 5, 6] and method is whitelist,
                                 only entries with values matching 1, 5 or 6 will be processed.
                                 All other entries will be filtered out/not considered.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="n_isotopic"/>
                            </dimensions>
                        </field>
                    </group>
                    <field name="normalization">
                        <doc>
                             How results of the kernel-density estimation were computed
                             into quantities. By default the tool computes the total number
                             (intensity) of ions or elements. Alternatively the tool can compute
                             the total intensity, the composition, or the concentration of the
                             ions/elements specified by the white list of elements in each voxel.
                        </doc>
                        <enumeration>
                            <item value="total"/>
                            <item value="candidates"/>
                            <item value="composition"/>
                            <item value="concentration"/>
                        </enumeration>
                    </field>
                    <field name="weight" type="NX_NUMBER" optional="true" units="NX_DIMENSIONLESS">
                        <doc>
                             Weighting factor, in atom probe, often termed multiplicity.
                             The weighting factor is the multiplier with which the integrated
                             intensity contribution from the point/ion gets multiplied.
                             The delocalization computes the integrated intensity for each
                             grid cell. Effectively, this is an explicitly evaluated kernel
                             method where each specific position of an ion is replaced by a
                             smoothing kernel. For atom probe weights are positive and integer
                             specifically the multiplicity of the ion, in accordance with the
                             respective rulesets as defined by weighting_model.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_ions"/>
                        </dimensions>
                    </field>
                    <group name="grid" type="NXcg_grid">
                        <doc>
                             The discretized domain/grid on which the delocalization is applied.
                        </doc>
                        <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS">
                            <enumeration>
                                <item value="1"/>
                                <item value="2"/>
                                <item value="3"/>
                            </enumeration>
                        </field>
                        <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS">
                            <doc>
                                 The total number of cells/voxels of the grid.
                            </doc>
                        </field>
                        <field name="origin" type="NX_NUMBER">
                            <dimensions rank="1">
                                <dim index="1" value="d"/>
                            </dimensions>
                        </field>
                        <field name="symmetry">
                            <doc>
                                 The symmetry of the lattice defining the shape of the unit cell.
                            </doc>
                            <enumeration>
                                <item value="cubic"/>
                            </enumeration>
                        </field>
                        <field name="cell_dimensions" type="NX_NUMBER" units="NX_LENGTH">
                            <doc>
                                 The unit cell dimensions according to the coordinate system
                                 defined under coordinate_system.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="d"/>
                            </dimensions>
                        </field>
                        <field name="extent" type="NX_POSINT" units="NX_UNITLESS">
                            <doc>
                                 Number of unit cells along each of the d unit vectors.
                                 The total number of cells, or grid points has to be the cardinality.
                                 If the grid has an irregular number of grid positions in each direction,
                                 as it could be for instance the case of a grid where all grid points
                                 outside some masking primitive are removed, this extent field should
                                 not be used. Instead use the coordinate field.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="d"/>
                            </dimensions>
                        </field>
                        <!--(NXtransformations):-->
                        <field name="coordinate_system" optional="true">
                            <doc>
                                 Reference to or definition of a coordinate system with
                                 which the positions and directions are interpretable.
                                 If the coordinate system is not specified the paraprobe
                                 coordinate system is used.
                            </doc>
                        </field>
                        <!--should constraints on the grid be place here or not-->
                        <field name="identifier_offset" type="NX_INT" units="NX_UNITLESS">
                            <doc>
                                 Integer which specifies the first index to be used for
                                 distinguishing identifiers for cells. Identifiers are defined
                                 either implicitly or explicitly. For implicit indexing the
                                 identifiers are defined on the interval
                                 [identifier_offset, identifier_offset+c-1].
                                 For explicit indexing the identifier array has to be defined.
                            </doc>
                        </field>
                        <group name="bounding_box" type="NXcg_hexahedron_set">
                            <doc>
                                 A tight axis-aligned bounding box about the grid.
                            </doc>
                            <field name="is_axis_aligned" type="NX_BOOLEAN" units="NX_UNITLESS">
                                <doc>
                                     For atom probe should be set to true.
                                </doc>
                            </field>
                            <field name="identifier_offset" type="NX_INT" units="NX_UNITLESS">
                                <doc>
                                     Integer which specifies the first index to be used for distinguishing
                                     hexahedra. Identifiers are defined either implicitly
                                     or explicitly. For implicit indexing the identifiers are defined on the
                                     interval [identifier_offset, identifier_offset+c-1].
                                     For explicit indexing the identifier array has to be defined.
                                </doc>
                            </field>
                            <group name="hexahedron" type="NXcg_face_list_data_structure">
                                <field name="vertex_identifier_offset" type="NX_INT" units="NX_UNITLESS">
                                    <doc>
                                         Integer which specifies the first index to be used for distinguishing
                                         identifiers for vertices. Identifiers are defined either implicitly
                                         or explicitly. For implicit indexing the identifiers are defined on the
                                         interval [identifier_offset, identifier_offset+c-1].
                                         For explicit indexing the identifier array has to be defined.
                                    </doc>
                                </field>
                                <field name="face_identifier_offset" type="NX_INT" units="NX_UNITLESS">
                                    <doc>
                                         Integer which specifies the first index to be used for distinguishing
                                         identifiers for faces. Identifiers are defined either implicitly
                                         or explicitly. For implicit indexing the identifiers are defined on the
                                         interval [identifier_offset, identifier_offset+c-1].
                                         For explicit indexing the identifier array has to be defined.
                                    </doc>
                                </field>
                                <field name="vertices" type="NX_NUMBER" units="NX_LENGTH">
                                    <doc>
                                         Positions of the vertices.
                                         
                                         Users are encouraged to reduce the vertices to unique set of positions
                                         and vertices as this supports a more efficient storage of the geometry data.
                                         It is also possible though to store the vertex positions naively in which
                                         case vertices_are_unique is likely False.
                                         Naively here means that one for example stores each vertex of a triangle
                                         mesh even though many vertices are shared between triangles and thus
                                         the positions of these vertices do not have to be duplicated.
                                    </doc>
                                    <dimensions rank="2">
                                        <dim index="1" value="8"/>
                                        <dim index="2" value="3"/>
                                    </dimensions>
                                </field>
                                <field name="faces" type="NX_NUMBER" units="NX_UNITLESS">
                                    <doc>
                                         Array of identifiers from vertices which describe each face.
                                         
                                         The first entry is the identifier of the start vertex of the first face,
                                         followed by the second vertex of the first face, until the last vertex
                                         of the first face. Thereafter, the start vertex of the second face, the
                                         second vertex of the second face, and so on and so forth.
                                         
                                         Therefore, summating over the number_of_vertices, allows to extract
                                         the vertex identifiers for the i-th face on the following index interval
                                         of the faces array: [$\sum_i = 0}^{i = n-1}$, $\sum_{i=0}^{i = n}$].
                                    </doc>
                                    <dimensions rank="2">
                                        <dim index="1" value="6"/>
                                        <dim index="2" value="4"/>
                                    </dimensions>
                                </field>
                                <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                                    <doc>
                                         Six equally formatted sextets chained together. For each
                                         sextett the first entry is an XDMF primitive topology
                                         key (here 5 for polygon), the second entry the XDMF primitive
                                         count value (here 4 because each face is a quad).
                                         The remaining four values are the vertex indices.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="36"/>
                                    </dimensions>
                                </field>
                                <field name="number_of_boundaries" type="NX_POSINT" optional="true" units="NX_UNITLESS">
                                    <doc>
                                         How many distinct boundaries are distinguished?
                                         Most grids discretize a cubic or cuboidal region. In this case
                                         six sides can be distinguished, each making an own boundary.
                                    </doc>
                                </field>
                            </group>
                            <field name="boundaries" optional="true">
                                <doc>
                                     Name of the boundaries. E.g. left, right, front, back, bottom, top,
                                     The field must have as many entries as there are number_of_boundaries.
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="6"/>
                                </dimensions>
                            </field>
                            <field name="boundary_conditions" type="NX_INT" optional="true" units="NX_UNITLESS">
                                <doc>
                                     The boundary conditions for each boundary:
                                     
                                     0 - undefined
                                     1 - open
                                     2 - periodic
                                     3 - mirror
                                     4 - von Neumann
                                     5 - Dirichlet
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="6"/>
                                </dimensions>
                            </field>
                        </group>
                        <!--##MK::how to avoid storing it for once in NeXus for H5Web and
for XDMF in ParaView ?-->
                        <group name="scalar_field_magnitude" type="NXdata">
                            <doc>
                                 The result of the delocalization based on which subsequent
                                 iso-surfaces will be computed. In commercial software so far
                                 there is not a possibility to export such grid.
                            </doc>
                            <!--##MK::math notation-->
                            <attribute name="long_name" optional="true"/>
                            <attribute name="signal"/>
                            <attribute name="axes"/>
                            <attribute name="xpos_indices"/>
                            <attribute name="ypos_indices"/>
                            <attribute name="zpos_indices"/>
                            <field name="intensity" type="NX_FLOAT">
                                <dimensions rank="3">
                                    <dim index="1" value="n_z"/>
                                    <dim index="2" value="n_y"/>
                                    <dim index="3" value="n_x"/>
                                </dimensions>
                            </field>
                            <field name="xpos" type="NX_FLOAT">
                                <doc>
                                     Cell center of mass positions along x.
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="n_x"/>
                                </dimensions>
                            </field>
                            <!--##MK::how to relate back that this x is paraprobe x?-->
                            <field name="ypos" type="NX_FLOAT">
                                <doc>
                                     Cell center of mass positions along y.
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="n_y"/>
                                </dimensions>
                            </field>
                            <field name="zpos" type="NX_FLOAT">
                                <doc>
                                     Cell center of mass positions along z.
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="n_z"/>
                                </dimensions>
                            </field>
                            <field name="xdmf_intensity" type="NX_FLOAT" optional="true" units="NX_ANY">
                                <doc>
                                     Intensity of the field at given point
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="n_xyz"/>
                                </dimensions>
                            </field>
                            <field name="xdmf_xyz" type="NX_FLOAT" optional="true" units="NX_UNITLESS">
                                <doc>
                                     Center of mass positions of each voxel for
                                     rendering the scalar field via XDMF in e.g.
                                     Paraview.
                                </doc>
                                <dimensions rank="2">
                                    <dim index="1" value="n_xyz"/>
                                    <dim index="2" value="3"/>
                                </dimensions>
                            </field>
                            <field name="xdmf_topology" type="NX_NUMBER" optional="true" units="NX_UNITLESS">
                                <doc>
                                     XDMF topology for rendering in combination with
                                     xdmf_xyz the scalar field via XDFM in e.g. Paraview.
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="3*n_xyz"/>
                                </dimensions>
                            </field>
                        </group>
                        <group name="scalar_field_gradient" type="NXdata">
                            <doc>
                                 The three-dimensional gradient nabla operator applied to
                                 scalar_field_magnitude.
                            </doc>
                            <!--##MK::boundary conditions which type of accuracy
##MK::math notation-->
                            <attribute name="signal"/>
                            <attribute name="axes"/>
                            <!--##MK::vector_indices, # ##MK: 3-->
                            <attribute name="xpos_indices"/>
                            <attribute name="ypos_indices"/>
                            <attribute name="zpos_indices"/>
                            <attribute name="long_name" optional="true"/>
                            <field name="intensity" type="NX_FLOAT">
                                <dimensions rank="4">
                                    <dim index="1" value="n_z"/>
                                    <dim index="2" value="n_y"/>
                                    <dim index="3" value="n_x"/>
                                    <dim index="4" value="3"/>
                                </dimensions>
                            </field>
                            <field name="xpos" type="NX_FLOAT">
                                <doc>
                                     Cell center of mass positions along x.
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="n_x"/>
                                </dimensions>
                            </field>
                            <!--##MK::how to relate back that this x is paraprobe x?-->
                            <field name="ypos" type="NX_FLOAT">
                                <doc>
                                     Cell center of mass positions along y.
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="n_y"/>
                                </dimensions>
                            </field>
                            <field name="zpos" type="NX_FLOAT">
                                <doc>
                                     Cell center of mass positions along z.
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="n_z"/>
                                </dimensions>
                            </field>
                            <field name="xdmf_gradient" type="NX_FLOAT" optional="true" units="NX_ANY">
                                <doc>
                                     The gradient vector.
                                </doc>
                                <dimensions rank="2">
                                    <dim index="1" value="n_xyz"/>
                                    <dim index="2" value="3"/>
                                </dimensions>
                            </field>
                            <field name="xdmf_xyz" type="NX_FLOAT" optional="true" units="NX_UNITLESS">
                                <doc>
                                     Center of mass positions of each voxel for
                                     rendering the scalar field via XDMF in e.g.
                                     Paraview.
                                </doc>
                                <dimensions rank="2">
                                    <dim index="1" value="n_xyz"/>
                                    <dim index="2" value="3"/>
                                </dimensions>
                            </field>
                            <field name="xdmf_topology" type="NX_NUMBER" optional="true" units="NX_UNITLESS">
                                <doc>
                                     XDMF topology for rendering in combination with
                                     xdmf_xyz the scalar field via XDFM in e.g. Paraview.
                                </doc>
                                <dimensions rank="1">
                                    <dim index="1" value="3*n_xyz"/>
                                </dimensions>
                            </field>
                        </group>
                        <field name="kernel_size" type="NX_POSINT" units="NX_DIMENSIONLESS">
                            <doc>
                                 Halfwidth of the kernel about the central voxel.
                                 The shape of the kernel is that of a cuboid
                                 of extent 2*kernel_extent[i] + 1 in each dimension i.
                            </doc>
                            <!--\@units: pixel-->
                            <dimensions rank="1">
                                <dim index="1" value="3"/>
                            </dimensions>
                        </field>
                        <!--kernel_type:
  doc: |
    Functional form of the kernel (Ansatz function).-->
                        <field name="kernel_sigma" type="NX_FLOAT" units="NX_LENGTH">
                            <doc>
                                 Sigma of the kernel in each dimension in the paraprobe
                                 coordinate_system with i = 0 is x, i = 1 is y, i = 2 is z.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="3"/>
                            </dimensions>
                        </field>
                        <field name="kernel_mu" type="NX_FLOAT" units="NX_LENGTH">
                            <doc>
                                 Expectation value of the kernel in each dimension in the paraprobe
                                 coordinate_system with i = 0 is x, i = 1 is y, i = 2 is z.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="3"/>
                            </dimensions>
                        </field>
                    </group>
                    <!--##MK::-->
                    <group name="iso_surface" type="NXisocontour" optional="true">
                        <doc>
                             An iso-surface is the boundary between two regions across which
                             the magnitude of a scalar field falls below/exceeds a threshold
                             magnitude phi.
                             For applications in atom probe microscopy the location and shape
                             of such a boundary (set) is typically approximated by
                             discretization.
                             This yields a complex of not necessarily connected geometric
                             primitives. Paraprobe-nanochem approximates this complex with
                             a soup of triangles.
                        </doc>
                        <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="isovalue" type="NX_NUMBER" units="NX_ANY">
                            <doc>
                                 The threshold or iso-contour value.
                            </doc>
                        </field>
                        <group name="marching_cubes" type="NXcg_marching_cubes">
                            <doc>
                                 Details about the specific marching cubes algorithm
                                 which was taken to compute the iso-surface.
                                 The grid is the delocalization grid.
                            </doc>
                            <field name="implementation">
                                <doc>
                                     Reference to the specific implementation of marching cubes used.
                                     The value placed here should be a DOI. If there are no specific
                                     DOI or details write not_further_specified, or give at least a
                                     free-text description. The program and version used is the
                                     specific paraprobe-nanochem.
                                </doc>
                            </field>
                        </group>
                        <group name="triangle_soup" type="NXcg_triangle_set" optional="true">
                            <doc>
                                 The resulting triangle soup computed via marching cubes.
                            </doc>
                            <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                            <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
                            <field name="identifier_offset" type="NX_INT" units="NX_UNITLESS">
                                <doc>
                                     Integer which specifies the first index to be used for
                                     distinguishing triangles. Identifiers are defined either
                                     implicitly or explicitly. For implicit indexing the
                                     identifiers are defined on the interval
                                     [identifier_offset, identifier_offset+c-1].
                                </doc>
                            </field>
                            <group name="triangles" type="NXcg_face_list_data_structure">
                                <field name="number_of_vertices" type="NX_POSINT" units="NX_UNITLESS">
                                    <doc>
                                         Number of vertices.
                                    </doc>
                                </field>
                                <field name="number_of_faces" type="NX_POSINT" units="NX_UNITLESS">
                                    <doc>
                                         Number of faces.
                                    </doc>
                                </field>
                                <field name="vertex_identifier_offset" type="NX_INT" units="NX_UNITLESS">
                                    <doc>
                                         Integer which specifies the first index to be used for distinguishing
                                         identifiers for vertices. Identifiers are defined either implicitly
                                         or explicitly. For implicit indexing the identifiers are defined on the
                                         interval [identifier_offset, identifier_offset+c-1].
                                    </doc>
                                </field>
                                <field name="face_identifier_offset" type="NX_INT" units="NX_UNITLESS">
                                    <doc>
                                         Integer which specifies the first index to be used for distinguishing
                                         identifiers for faces. Identifiers are defined either implicitly
                                         or explicitly. For implicit indexing the identifiers are defined on the
                                         interval [identifier_offset, identifier_offset+c-1].
                                    </doc>
                                </field>
                                <field name="vertices" type="NX_NUMBER" units="NX_LENGTH">
                                    <doc>
                                         Positions of the vertices.
                                         
                                         Users are encouraged to reduce the vertices to unique set of positions
                                         and vertices as this supports a more efficient storage of the geometry data.
                                         It is also possible though to store the vertex positions naively in which
                                         case vertices_are_unique is likely False.
                                         Naively here means that one for example stores each vertex of a triangle
                                         mesh even though many vertices are shared between triangles and thus
                                         the positions of these vertices do not have to be duplicated.
                                    </doc>
                                    <dimensions rank="2">
                                        <dim index="1" value="i"/>
                                        <dim index="2" value="3"/>
                                    </dimensions>
                                </field>
                                <field name="faces" type="NX_INT" units="NX_UNITLESS">
                                    <doc>
                                         Array of identifiers from vertices which describe each face.
                                         
                                         The first entry is the identifier of the start vertex of the first face,
                                         followed by the second vertex of the first face, until the last vertex
                                         of the first face. Thereafter, the start vertex of the second face, the
                                         second vertex of the second face, and so on and so forth.
                                         
                                         Therefore, summating over the number_of_vertices, allows to extract
                                         the vertex identifiers for the i-th face on the following index interval
                                         of the faces array: [$\sum_i = 0}^{i = n-1}$, $\sum_{i=0}^{i = n}$].
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="j"/>
                                    </dimensions>
                                </field>
                                <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                                    <doc>
                                         A list of as many tuples of XDMF topology key, XDMF number
                                         of vertices and a triple of vertex indices specifying each
                                         triangle. The total number of entries is n_f_tri * (1+1+3).
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="n_f_tri_xdmf"/>
                                    </dimensions>
                                </field>
                                <group name="vertex_normal" type="NXcg_unit_normal_set" optional="true">
                                    <field name="normals" type="NX_FLOAT" units="NX_DIMENSIONLESS">
                                        <doc>
                                             Direction of each normal.
                                        </doc>
                                        <dimensions rank="2">
                                            <dim index="1" value="j"/>
                                            <dim index="2" value="3"/>
                                        </dimensions>
                                    </field>
                                    <field name="orientation" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                        <doc>
                                             Qualifier how which specifically oriented normal to its
                                             primitive each normal represents.
                                             
                                             * 0 - undefined
                                             * 1 - outer
                                             * 2 - inner
                                        </doc>
                                        <dimensions rank="1">
                                            <dim index="1" value="j"/>
                                        </dimensions>
                                    </field>
                                </group>
                                <!--edge_normal(NXcg_unit_normal_set):
  exists: optional-->
                                <group name="face_normal" type="NXcg_unit_normal_set" optional="true">
                                    <field name="normals" type="NX_FLOAT" units="NX_DIMENSIONLESS">
                                        <doc>
                                             Direction of each normal.
                                        </doc>
                                        <dimensions rank="2">
                                            <dim index="1" value="k"/>
                                            <dim index="2" value="3"/>
                                        </dimensions>
                                    </field>
                                    <field name="orientation" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                        <doc>
                                             Qualifier how which specifically oriented normal to its
                                             primitive each normal represents.
                                             
                                             * 0 - undefined
                                             * 1 - outer
                                             * 2 - inner
                                        </doc>
                                        <dimensions rank="1">
                                            <dim index="1" value="k"/>
                                        </dimensions>
                                    </field>
                                    <field name="gradient_guide_magnitude" type="NX_FLOAT" units="NX_ANY">
                                        <doc>
                                             Triangle normals are oriented in the direction of the
                                             gradient vector of the local delocalized scalar field.
                                             :math:`\sum_{x, y, z} {\nabla{c}_i}^2`.
                                        </doc>
                                        <dimensions rank="1">
                                            <dim index="1" value="k"/>
                                        </dimensions>
                                    </field>
                                    <!--gradient_guide_quality(NX_FLOAT):
  doc: |
    Triangle normals are oriented in the direction of the
    gradient vector of the local delocalized scalar field.
    Sum of squared values of cross product of triangle normal
    construction.
  unit: NX_ANY
  dimensions:
    rank: 1
    dim: [[1, k]]-->
                                    <field name="gradient_guide_projection" type="NX_FLOAT" units="NX_ANY">
                                        <doc>
                                             Triangle normals are oriented in the direction of the
                                             gradient vector of the local delocalized scalar field.
                                             The projection variable here describes the cosine of the
                                             angle between the gradient direction and the normal
                                             direction vector.
                                             This is a descriptor of how parallel the projection is
                                             that is especially useful to document those triangles
                                             for whose projection is almost perpendicular.
                                        </doc>
                                        <dimensions rank="1">
                                            <dim index="1" value="k"/>
                                        </dimensions>
                                    </field>
                                </group>
                                <field name="area" type="NX_NUMBER" optional="true" units="NX_AREA">
                                    <dimensions rank="1">
                                        <dim index="1" value="j"/>
                                    </dimensions>
                                </field>
                                <field name="edge_length" type="NX_NUMBER" optional="true" units="NX_LENGTH">
                                    <doc>
                                         Array of edge length values. For each triangle the edge length
                                         is reported for the edges traversed according to the sequence
                                         in which vertices are indexed in triangles.
                                    </doc>
                                    <dimensions rank="2">
                                        <dim index="1" value="k"/>
                                        <dim index="2" value="3"/>
                                    </dimensions>
                                </field>
                                <field name="interior_angle" type="NX_NUMBER" optional="true" units="NX_ANGLE">
                                    <doc>
                                         Array of interior angle values. For each triangle the angle
                                         is reported for the angle opposite to the edges which are
                                         traversed according to the sequence in which vertices
                                         are indexed in triangles.
                                    </doc>
                                    <dimensions rank="2">
                                        <dim index="1" value="j"/>
                                        <dim index="2" value="4"/>
                                    </dimensions>
                                </field>
                                <field name="center" type="NX_NUMBER" optional="true" units="NX_LENGTH">
                                    <doc>
                                         The center of mass of each triangle.
                                    </doc>
                                    <dimensions rank="2">
                                        <dim index="1" value="j"/>
                                        <dim index="2" value="3"/>
                                    </dimensions>
                                </field>
                            </group>
                            <group name="volumetric_feature" type="NXprocess" optional="true">
                                <doc>
                                     Iso-surfaces of arbitrary scalar three-dimensional fields
                                     can show a complicated topology. Paraprobe-nanochem can run
                                     a DBScan-like clustering algorithm which performs a
                                     connectivity analysis on the triangle soup. This yields a
                                     set of connected features with their surfaces discretized
                                     by triangles. Currently, the tool distinguishes at most
                                     three types of features:
                                     
                                     1. So-called objects, i.e. necessarily watertight features
                                        represented polyhedra.
                                     2. So-called proxies, i.e. features that were replaced by a
                                        proxy mesh and made watertight.
                                     3. Remaining triangle surface meshes of arbitrary shape and
                                        cardinality.
                                     
                                     These features can be interpreted as microstructural features.
                                     Some of them may be precipitates, some of them may be poles,
                                     some of them may be segments of dislocation lines or other
                                     crystal defects which are decorated (or not) with solutes.
                                </doc>
                                <!-- Each type of feature needs to be registered in the feature_type
 dictionary. Type identifiers (keywords are integer), values
 are human-readable names like object, proxy, undefined
NEW ISSUE: refactor using instances of NXms_feature_set-->
                                <field name="triangle_cluster_identifier" type="NX_UINT" units="NX_UNITLESS">
                                    <doc>
                                         The identifier which the triangle_soup connectivity analysis
                                         returned, which constitutes the first step of the
                                         volumetric_feature identification process.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="k"/>
                                    </dimensions>
                                </field>
                                <field name="feature_type_dict_keyword" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                    <doc>
                                         The array of keywords of feature_type dictionary.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="n_feature_dict"/>
                                    </dimensions>
                                </field>
                                <field name="feature_type_dict_value" optional="true">
                                    <doc>
                                         The array of values for each keyword of the
                                         feature_type dictionary.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="n_feature_dict"/>
                                    </dimensions>
                                </field>
                                <field name="feature_type" type="NX_UINT" units="NX_ANY">
                                    <doc>
                                         The array of controlled keywords, need to be from
                                         feature_type_dict_keyword, which specify which type
                                         each feature triangle cluster belongs to.
                                         Keep in mind that not each feature is an object or proxy.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="j"/>
                                    </dimensions>
                                </field>
                                <field name="feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                    <doc>
                                         The explicit identifier of features.
                                    </doc>
                                    <dimensions rank="1">
                                        <dim index="1" value="j"/>
                                    </dimensions>
                                </field>
                                <!--##MK::a nice example why we need group-overarching symbols
a symbol for triangles would not work as the analysis can
hold multiple instances of iso_surface each with a different
number of triangles and/or features!
details about specific features-->
                                <group name="objects" type="NXprocess" optional="true">
                                    <doc>
                                         Details for features which are (closed) objects.
                                         Identifier have to exist in feature_identifier.
                                    </doc>
                                    <!--##MK::constraints!-->
                                    <field name="feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                        <dimensions rank="1">
                                            <dim index="1" value="i"/>
                                        </dimensions>
                                    </field>
                                    <field name="volume" type="NX_FLOAT" units="NX_VOLUME">
                                        <dimensions rank="1">
                                            <dim index="1" value="i"/>
                                        </dimensions>
                                    </field>
                                    <group name="obb" type="NXcg_hexahedron_set" optional="true">
                                        <doc>
                                             An oriented bounding box (OBB) to each object.
                                        </doc>
                                        <field name="size" type="NX_FLOAT" optional="true" units="NX_LENGTH">
                                            <doc>
                                                 Edge length of the oriented bounding box from largest
                                                 to smallest value.
                                            </doc>
                                            <dimensions rank="2">
                                                <dim index="1" value="i"/>
                                                <dim index="2" value="3"/>
                                            </dimensions>
                                        </field>
                                        <!-- ##MK::which is which-->
                                        <field name="aspect" type="NX_FLOAT" optional="true" units="NX_DIMENSIONLESS">
                                            <doc>
                                                 Oriented bounding box aspect ratio. YX versus ZY.
                                            </doc>
                                            <dimensions rank="2">
                                                <dim index="1" value="i"/>
                                                <dim index="2" value="2"/>
                                            </dimensions>
                                        </field>
                                        <field name="center" type="NX_NUMBER" optional="true" units="NX_LENGTH">
                                            <doc>
                                                 Position of the geometric center, which often is but
                                                 not necessarily has to be the center_of_mass of the
                                                 hexahedrally-shaped sample/sample part.
                                            </doc>
                                            <dimensions rank="2">
                                                <dim index="1" value="i"/>
                                                <dim index="2" value="3"/>
                                            </dimensions>
                                        </field>
                                        <group name="hexahedra" type="NXcg_face_list_data_structure">
                                            <!--exists: [min, 0, max, 1]-->
                                            <doc>
                                                 A simple approach to describe the entire set of hexahedra
                                                 when the main intention is to store the shape of the 
                                                 hexahedra for visualization.
                                            </doc>
                                            <!--##MK::more details needed here-->
                                            <field name="vertices" type="NX_NUMBER" units="NX_LENGTH">
                                                <dimensions rank="2">
                                                    <dim index="1" value="k"/>
                                                    <dim index="2" value="3"/>
                                                </dimensions>
                                            </field>
                                            <!--##MK::again we have no effective way to pinpoint the n_rows
##MK::namely k != i each OBB has eight vertices-->
                                            <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                                                <dimensions rank="1">
                                                    <dim index="1" value="k"/>
                                                </dimensions>
                                            </field>
                                            <field name="xdmf_feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                                <dimensions rank="1">
                                                    <dim index="1" value="k"/>
                                                </dimensions>
                                            </field>
                                        </group>
                                    </group>
                                    <group name="objects_close_to_edge" type="NXprocess" optional="true">
                                        <doc>
                                             Details for all those objects close to edge, i.e. those which
                                             have at least one ion which lays closer to a modelled edge
                                             of the dataset than threshold.
                                        </doc>
                                        <field name="feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                            <dimensions rank="1">
                                                <dim index="1" value="i"/>
                                            </dimensions>
                                        </field>
                                        <field name="volume" type="NX_FLOAT" units="NX_VOLUME">
                                            <dimensions rank="1">
                                                <dim index="1" value="i"/>
                                            </dimensions>
                                        </field>
                                        <group name="composition" type="NXchemical_composition" optional="true">
                                            <field name="total" type="NX_NUMBER" units="NX_UNITLESS">
                                                <doc>
                                                     Total (count) relevant for normalization.
                                                </doc>
                                                <dimensions rank="1">
                                                    <dim index="1" value="i"/>
                                                </dimensions>
                                            </field>
                                            <group name="ION" type="NXion" minOccurs="0" maxOccurs="unbounded">
                                                <field name="charge" type="NX_INT"/>
                                                <field name="isotope_vector" type="NX_UINT"/>
                                                <field name="nuclid_list" type="NX_UINT"/>
                                                <field name="count" type="NX_NUMBER" units="NX_UNITLESS">
                                                    <doc>
                                                         Count or weight which, when divided by total,
                                                         yields the composition of this element, isotope,
                                                         molecule or ion.
                                                    </doc>
                                                    <dimensions rank="1">
                                                        <dim index="1" value="i"/>
                                                    </dimensions>
                                                </field>
                                            </group>
                                        </group>
                                        <group name="objectID" type="NXcg_polyhedron_set" minOccurs="0" maxOccurs="unbounded">
                                            <group name="polyhedron" type="NXcg_face_list_data_structure">
                                                <!--number_of_vertices(NX_POSINT):
number_of_faces(NX_POSINT):
vertex_identifier_offset(NX_UINT):
face_identifier_offset(NX_UINT):-->
                                                <field name="vertices" type="NX_FLOAT" units="NX_LENGTH">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_v"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <field name="faces" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_f"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <!--face_normals(NXcg_unit_normal_set):-->
                                                <field name="face_normals" type="NX_FLOAT" units="NX_LENGTH">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_f"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="1">
                                                        <dim index="1" value="k"/>
                                                    </dimensions>
                                                </field>
                                                <field name="xdmf_feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="1">
                                                        <dim index="1" value="k"/>
                                                    </dimensions>
                                                </field>
                                                <field name="ion_identifier" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                                    <doc>
                                                         Array of evaporation_identifier / ion_identifier which
                                                         specify ions laying inside or on the surface of the feature.
                                                    </doc>
                                                    <dimensions rank="1">
                                                        <dim index="1" value="i"/>
                                                    </dimensions>
                                                </field>
                                            </group>
                                        </group>
                                    </group>
                                    <group name="objects_far_from_edge" type="NXprocess" optional="true">
                                        <doc>
                                             Details for all those objects far from edge, i.e. those
                                             whose ions lay all at least threshold distant from a
                                             modelled edge of the dataset.
                                        </doc>
                                        <field name="feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                            <dimensions rank="1">
                                                <dim index="1" value="i"/>
                                            </dimensions>
                                        </field>
                                        <field name="volume" type="NX_FLOAT" units="NX_VOLUME">
                                            <dimensions rank="1">
                                                <dim index="1" value="i"/>
                                            </dimensions>
                                        </field>
                                        <group name="composition" type="NXchemical_composition" optional="true">
                                            <field name="total" type="NX_NUMBER" units="NX_UNITLESS">
                                                <doc>
                                                     Total (count) relevant for normalization.
                                                </doc>
                                                <dimensions rank="1">
                                                    <dim index="1" value="i"/>
                                                </dimensions>
                                            </field>
                                            <group name="ION" type="NXion" minOccurs="0" maxOccurs="unbounded">
                                                <field name="charge" type="NX_INT"/>
                                                <field name="isotope_vector" type="NX_UINT"/>
                                                <field name="nuclid_list" type="NX_UINT"/>
                                                <field name="count" type="NX_NUMBER" units="NX_UNITLESS">
                                                    <doc>
                                                         Count or weight which, when divided by total
                                                         yields the composition of this element, isotope,
                                                         molecule or ion.
                                                    </doc>
                                                    <dimensions rank="1">
                                                        <dim index="1" value="i"/>
                                                    </dimensions>
                                                </field>
                                            </group>
                                        </group>
                                        <group name="objectID" type="NXcg_polyhedron_set" minOccurs="0" maxOccurs="unbounded">
                                            <group name="polyhedron" type="NXcg_face_list_data_structure">
                                                <!--number_of_vertices(NX_POSINT):
number_of_faces(NX_POSINT):
vertex_identifier_offset(NX_UINT):
face_identifier_offset(NX_UINT):-->
                                                <field name="vertices" type="NX_FLOAT" units="NX_LENGTH">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_v"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <field name="faces" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_f"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <!--face_normals(NXcg_unit_normal_set):-->
                                                <field name="face_normals" type="NX_FLOAT" units="NX_LENGTH">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_f"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="1">
                                                        <dim index="1" value="k"/>
                                                    </dimensions>
                                                </field>
                                                <field name="xdmf_feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="1">
                                                        <dim index="1" value="k"/>
                                                    </dimensions>
                                                </field>
                                                <field name="ion_identifier" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                                    <doc>
                                                         Array of evaporation_identifier / ion_identifier which
                                                         specify ions laying inside or on the surface of the feature.
                                                    </doc>
                                                    <dimensions rank="1">
                                                        <dim index="1" value="i"/>
                                                    </dimensions>
                                                </field>
                                            </group>
                                        </group>
                                    </group>
                                </group>
                                <!--linear_feature_identification(NXprocess):
these would be polylines etc-->
                                <group name="proxies" type="NXprocess" optional="true">
                                    <doc>
                                         Details for features which are so-called proxies, i.e. objects
                                         which have been reconstructed and combinatorially closed with
                                         processing their partial triangulated_surface_mesh
                                         (hole filling, refinement).
                                         Identifier have to exist in feature_identifier.
                                    </doc>
                                    <!--##MK::constraints feature_identifier are a subset of the parent!-->
                                    <field name="feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                        <dimensions rank="1">
                                            <dim index="1" value="i"/>
                                        </dimensions>
                                    </field>
                                    <field name="volume" type="NX_FLOAT" units="NX_VOLUME">
                                        <dimensions rank="1">
                                            <dim index="1" value="i"/>
                                        </dimensions>
                                    </field>
                                    <!--obb ?-->
                                    <group name="proxies_close_to_edge" type="NXprocess" optional="true">
                                        <doc>
                                             Details for those proxies close to edge, i.e. those which
                                             have at least one ion which lays closer to a modelled edge
                                             of the dataset than threshold.
                                             Identifier have to exist in feature_identifier.
                                        </doc>
                                        <!--##MK::constraints!-->
                                        <field name="feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                            <dimensions rank="1">
                                                <dim index="1" value="i"/>
                                            </dimensions>
                                        </field>
                                        <field name="volume" type="NX_FLOAT" units="NX_VOLUME">
                                            <dimensions rank="1">
                                                <dim index="1" value="i"/>
                                            </dimensions>
                                        </field>
                                        <group name="composition" type="NXchemical_composition" optional="true">
                                            <field name="total" type="NX_NUMBER" units="NX_UNITLESS">
                                                <doc>
                                                     Total (count) relevant for normalization.
                                                </doc>
                                                <dimensions rank="1">
                                                    <dim index="1" value="i"/>
                                                </dimensions>
                                            </field>
                                            <group name="ION" type="NXion" minOccurs="0" maxOccurs="unbounded">
                                                <!--charge(NX_INT):
isotope_vector(NX_UINT):-->
                                                <field name="count" type="NX_NUMBER" units="NX_UNITLESS">
                                                    <doc>
                                                         Count or weight which, when divided by total
                                                         yields the composition of this element, isotope,
                                                         molecule or ion.
                                                    </doc>
                                                    <dimensions rank="1">
                                                        <dim index="1" value="i"/>
                                                    </dimensions>
                                                </field>
                                            </group>
                                        </group>
                                        <group name="objectID" type="NXcg_polyhedron_set" minOccurs="0" maxOccurs="unbounded">
                                            <group name="polyhedron" type="NXcg_face_list_data_structure">
                                                <!--number_of_vertices(NX_POSINT):
number_of_faces(NX_POSINT):
vertex_identifier_offset(NX_UINT):
face_identifier_offset(NX_UINT):-->
                                                <field name="vertices" type="NX_FLOAT" units="NX_LENGTH">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_v"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <field name="faces" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_f"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <!--face_normals(NXcg_unit_normal_set):-->
                                                <field name="face_normals" type="NX_FLOAT" units="NX_LENGTH">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_f"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="1">
                                                        <dim index="1" value="k"/>
                                                    </dimensions>
                                                </field>
                                                <field name="xdmf_feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="1">
                                                        <dim index="1" value="k"/>
                                                    </dimensions>
                                                </field>
                                                <field name="ion_identifier" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                                    <doc>
                                                         Array of evaporation_identifier / ion_identifier which
                                                         specify ions laying inside or on the surface of the feature.
                                                    </doc>
                                                    <dimensions rank="1">
                                                        <dim index="1" value="i"/>
                                                    </dimensions>
                                                </field>
                                            </group>
                                        </group>
                                    </group>
                                    <group name="proxies_far_from_edge" type="NXprocess" optional="true">
                                        <doc>
                                             Details for those proxies far from edge, i.e. those whose
                                             ions lay all at least threshold distant from a
                                             modelled edge of the dataset.
                                        </doc>
                                        <field name="feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                            <dimensions rank="1">
                                                <dim index="1" value="i"/>
                                            </dimensions>
                                        </field>
                                        <field name="volume" type="NX_FLOAT" units="NX_VOLUME">
                                            <dimensions rank="1">
                                                <dim index="1" value="i"/>
                                            </dimensions>
                                        </field>
                                        <group name="composition" type="NXchemical_composition" optional="true">
                                            <field name="total" type="NX_NUMBER" units="NX_UNITLESS">
                                                <doc>
                                                     Total (count) relevant for normalization.
                                                </doc>
                                                <dimensions rank="1">
                                                    <dim index="1" value="i"/>
                                                </dimensions>
                                            </field>
                                            <group name="ION" type="NXion" minOccurs="0" maxOccurs="unbounded">
                                                <!--charge(NX_INT):
isotope_vector(NX_UINT):-->
                                                <field name="count" type="NX_NUMBER" units="NX_UNITLESS">
                                                    <doc>
                                                         Count or weight which, when divided by total
                                                         yields the composition of this element, isotope,
                                                         molecule or ion.
                                                    </doc>
                                                    <dimensions rank="1">
                                                        <dim index="1" value="i"/>
                                                    </dimensions>
                                                </field>
                                            </group>
                                        </group>
                                        <group name="objectID" type="NXcg_polyhedron_set" minOccurs="0" maxOccurs="unbounded">
                                            <group name="polyhedron" type="NXcg_face_list_data_structure">
                                                <!--number_of_vertices(NX_POSINT):
number_of_faces(NX_POSINT):
vertex_identifier_offset(NX_UINT):
face_identifier_offset(NX_UINT):-->
                                                <field name="vertices" type="NX_FLOAT" units="NX_LENGTH">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_v"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <field name="faces" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_f"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <!--face_normals(NXcg_unit_normal_set):-->
                                                <field name="face_normals" type="NX_FLOAT" units="NX_LENGTH">
                                                    <dimensions rank="2">
                                                        <dim index="1" value="n_f"/>
                                                        <dim index="2" value="3"/>
                                                    </dimensions>
                                                </field>
                                                <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="1">
                                                        <dim index="1" value="k"/>
                                                    </dimensions>
                                                </field>
                                                <field name="xdmf_feature_identifier" type="NX_UINT" units="NX_UNITLESS">
                                                    <dimensions rank="1">
                                                        <dim index="1" value="k"/>
                                                    </dimensions>
                                                </field>
                                                <field name="ion_identifier" type="NX_UINT" optional="true" units="NX_UNITLESS">
                                                    <doc>
                                                         Array of evaporation_identifier / ion_identifier which
                                                         specify ions laying inside or on the surface of the feature.
                                                    </doc>
                                                    <dimensions rank="1">
                                                        <dim index="1" value="i"/>
                                                    </dimensions>
                                                </field>
                                            </group>
                                        </group>
                                    </group>
                                </group>
                            </group>
                        </group>
                    </group>
                </group>
            </group>
            <group name="interface_modelling" type="NXprocess" optional="true">
                <field name="ion_multiplicity" type="NX_UINT" optional="true" units="NX_UNITLESS">
                    <doc>
                         The multiplicity whereby the ion position is accounted for
                         irrespective whether the ion is considered as a decorator
                         of the interface or not.
                         As an example, with atom probe it is typically not possible
                         to resolve the positions of the atoms which arrive at the detector
                         as molecular ions. Therefore, an exemplar molecular ion of two carbon
                         atoms can be considered to have a multiplicity of two to account that
                         this molecular ion contributes two carbon atoms at the reconstructed
                         location considering that the spatial resolution of atom probe
                         experiments is limited.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="n_ions"/>
                    </dimensions>
                </field>
                <field name="decorator_multiplicity" type="NX_UINT" optional="true" units="NX_UNITLESS">
                    <doc>
                         The multiplicity whereby the ion position is accounted for when
                         the ion is considered one which is a decorator of the interface.
                    </doc>
                    <dimensions rank="1">
                        <dim index="1" value="n_ions"/>
                    </dimensions>
                </field>
                <group name="initial_interface" type="NXprocess" optional="true">
                    <doc>
                         The equation of the plane that is fitted initially.
                    </doc>
                    <field name="point_normal_form" type="NX_FLOAT" units="NX_LENGTH">
                        <doc>
                             The four parameter :math:`ax + by + cz + d = 0` which define the plane.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="4"/>
                        </dimensions>
                    </field>
                </group>
                <group name="MESH_CURR_PRE_DCOM_STEP" type="NXcg_triangle_set" minOccurs="0" maxOccurs="unbounded">
                    <doc>
                         The triangle surface mesh representing the interface model.
                         Exported at some iteration before the next DCOM step.
                    </doc>
                    <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                    <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
                    <field name="identifier_offset" type="NX_INT" units="NX_UNITLESS"/>
                    <group name="triangles" type="NXcg_face_list_data_structure">
                        <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="number_of_vertices" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="number_of_faces" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="vertex_identifier_offset" type="NX_INT" units="NX_UNITLESS"/>
                        <field name="edge_identifier_offset" type="NX_INT" units="NX_UNITLESS"/>
                        <field name="face_identifier_offset" type="NX_INT" units="NX_UNITLESS"/>
                        <field name="face_identifier" type="NX_UINT" units="NX_UNITLESS">
                            <dimensions rank="1">
                                <dim index="1" value="j"/>
                            </dimensions>
                        </field>
                        <field name="vertices" type="NX_NUMBER" units="NX_LENGTH">
                            <dimensions rank="2">
                                <dim index="1" value="i"/>
                                <dim index="2" value="3"/>
                            </dimensions>
                        </field>
                        <field name="faces" type="NX_UINT" units="NX_UNITLESS">
                            <dimensions rank="2">
                                <dim index="1" value="j"/>
                                <dim index="2" value="3"/>
                            </dimensions>
                        </field>
                        <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                            <dimensions rank="1">
                                <dim index="1" value="k"/>
                            </dimensions>
                        </field>
                    </group>
                    <!--##MK::vertex_normal(NXcg_unit_normal_set):-->
                    <group name="face_normal" type="NXcg_unit_normal_set">
                        <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="normals" type="NX_FLOAT" units="NX_LENGTH">
                            <doc>
                                 Direction of each normal
                            </doc>
                            <dimensions rank="2">
                                <dim index="1" value="j"/>
                                <dim index="2" value="3"/>
                            </dimensions>
                        </field>
                        <field name="orientation" type="NX_UINT" units="NX_UNITLESS">
                            <doc>
                                 Qualifier how which specifically oriented normal to its primitive each
                                 normal represents.
                                 
                                 * 0 - undefined
                                 * 1 - outer
                                 * 2 - inner
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="j"/>
                            </dimensions>
                        </field>
                    </group>
                    <group name="vertex_normal" type="NXcg_unit_normal_set">
                        <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="normals" type="NX_FLOAT" units="NX_LENGTH">
                            <doc>
                                 Direction of each normal
                            </doc>
                            <dimensions rank="2">
                                <dim index="1" value="j"/>
                                <dim index="2" value="3"/>
                            </dimensions>
                        </field>
                        <field name="orientation" type="NX_UINT" units="NX_UNITLESS">
                            <doc>
                                 Qualifier how which specifically oriented normal to its primitive each
                                 normal represents.
                                 
                                 * 0 - undefined
                                 * 1 - outer
                                 * 2 - inner
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="j"/>
                            </dimensions>
                        </field>
                    </group>
                    <field name="area" type="NX_NUMBER" units="NX_AREA">
                        <dimensions rank="1">
                            <dim index="1" value="c"/>
                        </dimensions>
                    </field>
                    <field name="edge_length" type="NX_NUMBER" units="NX_LENGTH">
                        <doc>
                             Array of edge length values. For each triangle the edge length is
                             reported for the edges traversed according to the sequence
                             in which vertices are indexed in triangles.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="c"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <field name="interior_angle" type="NX_NUMBER" units="NX_ANGLE">
                        <doc>
                             Array of interior angle values. For each triangle the angle is
                             reported for the angle opposite to the edges which are traversed
                             according to the sequence in which vertices are indexed in triangles.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="c"/>
                            <dim index="2" value="4"/>
                        </dimensions>
                    </field>
                </group>
                <group name="MESH_CURR_POST_DCOM_STEP" type="NXcg_triangle_set" minOccurs="0" maxOccurs="unbounded">
                    <doc>
                         The triangle surface mesh representing the interface model.
                         Exported at some iteration after the next DCOM step.
                    </doc>
                    <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                    <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
                    <field name="identifier_offset" type="NX_INT" units="NX_UNITLESS"/>
                    <group name="triangles" type="NXcg_face_list_data_structure">
                        <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="number_of_vertices" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="number_of_faces" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="vertex_identifier_offset" type="NX_INT" units="NX_UNITLESS"/>
                        <field name="face_identifier_offset" type="NX_INT" units="NX_UNITLESS"/>
                        <field name="face_identifier" type="NX_UINT" units="NX_UNITLESS">
                            <dimensions rank="1">
                                <dim index="1" value="j"/>
                            </dimensions>
                        </field>
                        <field name="vertices" type="NX_NUMBER" units="NX_LENGTH">
                            <dimensions rank="2">
                                <dim index="1" value="i"/>
                                <dim index="2" value="3"/>
                            </dimensions>
                        </field>
                        <field name="faces" type="NX_UINT" units="NX_UNITLESS">
                            <dimensions rank="2">
                                <dim index="1" value="j"/>
                                <dim index="2" value="3"/>
                            </dimensions>
                        </field>
                        <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                            <dimensions rank="1">
                                <dim index="1" value="k"/>
                            </dimensions>
                        </field>
                    </group>
                    <!--##MK::vertex_normal(NXcg_unit_normal_set):-->
                    <group name="face_normal" type="NXcg_unit_normal_set">
                        <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="normals" type="NX_FLOAT" units="NX_LENGTH">
                            <doc>
                                 Direction of each normal
                            </doc>
                            <dimensions rank="2">
                                <dim index="1" value="j"/>
                                <dim index="2" value="3"/>
                            </dimensions>
                        </field>
                        <field name="orientation" type="NX_UINT" units="NX_UNITLESS">
                            <doc>
                                 Qualifier how which specifically oriented normal to its primitive each
                                 normal represents.
                                 
                                 * 0 - undefined
                                 * 1 - outer
                                 * 2 - inner
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="j"/>
                            </dimensions>
                        </field>
                    </group>
                    <group name="vertex_normal" type="NXcg_unit_normal_set">
                        <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="normals" type="NX_FLOAT" units="NX_LENGTH">
                            <doc>
                                 Direction of each normal
                            </doc>
                            <dimensions rank="2">
                                <dim index="1" value="j"/>
                                <dim index="2" value="3"/>
                            </dimensions>
                        </field>
                        <field name="orientation" type="NX_UINT" units="NX_UNITLESS">
                            <doc>
                                 Qualifier how which specifically oriented normal to its primitive each
                                 normal represents.
                                 
                                 * 0 - undefined
                                 * 1 - outer
                                 * 2 - inner
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="j"/>
                            </dimensions>
                        </field>
                    </group>
                    <field name="area" type="NX_NUMBER" units="NX_AREA">
                        <dimensions rank="1">
                            <dim index="1" value="c"/>
                        </dimensions>
                    </field>
                    <field name="edge_length" type="NX_NUMBER" units="NX_LENGTH">
                        <doc>
                             Array of edge length values. For each triangle the edge length is
                             reported for the edges traversed according to the sequence
                             in which vertices are indexed in triangles.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="c"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <field name="interior_angle" type="NX_NUMBER" units="NX_ANGLE">
                        <doc>
                             Array of interior angle values. For each triangle the angle is
                             reported for the angle opposite to the edges which are traversed
                             according to the sequence in which vertices are indexed in triangles.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="c"/>
                            <dim index="2" value="4"/>
                        </dimensions>
                    </field>
                </group>
            </group>
            <group name="composition_analysis" type="NXprocess" optional="true">
                <group name="xdmf_cylinder" type="NXcg_polyhedron_set">
                    <doc>
                         The ROIs are defined as cylinders for the computations.
                         To visualize these though we discretize them into regular n-gons.
                         Using for instance a 360-gon, i.e. a regular n-gon with 360
                         edges resolves the lateral surface of each cylinder very finely
                         so that they are rendered smoothly in visualization software.
                    </doc>
                    <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                    <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
                    <field name="center" type="NX_NUMBER" units="NX_LENGTH">
                        <doc>
                             Position of the geometric center, which often is but not 
                             necessarily has to be the center_of_mass of the polyhedra.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="i"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <field name="roi_identifier" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Integer which specifies the first index to be used for distinguishing
                             ROI cylinder. Identifiers are defined explicitly.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                    <group name="polyhedra" type="NXcg_face_list_data_structure" minOccurs="0" maxOccurs="1"/>
                    <field name="edge_contact" type="NX_UINT" optional="true" units="NX_UNITLESS">
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                    <!--##MK::decomposed?-->
                    <field name="number_of_atoms" type="NX_UINT" optional="true" units="NX_UNITLESS">
                        <doc>
                             The number of atoms in each ROI.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                    <field name="number_of_ions" type="NX_UINT" optional="true" units="NX_UNITLESS">
                        <doc>
                             The number of ions in each ROI.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                    <field name="orientation" type="NX_FLOAT" optional="true" units="NX_LENGTH">
                        <doc>
                             The orientation of the ROI defined via a vector which points along
                             the cylinder axis and whose length is the height of the cylinder.
                        </doc>
                        <dimensions rank="2">
                            <dim index="1" value="i"/>
                            <dim index="2" value="3"/>
                        </dimensions>
                    </field>
                    <group name="ROI" type="NXcollection" minOccurs="0" maxOccurs="unbounded">
                        <field name="signed_distance" type="NX_FLOAT">
                            <doc>
                                 In the direction of the ROI.
                            </doc>
                        </field>
                        <field name="isotope" type="NX_UINT">
                            <doc>
                                 Hashvalue
                            </doc>
                        </field>
                    </group>
                </group>
            </group>
        </group>
        <!--##MK::#define MYCHM_DATA_ISRF_TSKS_TSCL_OBJ_ROICYL_ROIID	"RoiCylinderID"
##MK::#define MYCHM_DATA_ISRF_TSKS_TSCL_OBJ_ROICYL_OBJID	"RoiCylinderObjectID"
##MK::end of the tool-specific section-->
        <group name="performance" type="NXcs_profiling" recommended="true">
            <field name="current_working_directory"/>
            <field name="command_line_call" optional="true"/>
            <field name="start_time" type="NX_DATE_TIME" recommended="true"/>
            <field name="end_time" type="NX_DATE_TIME" recommended="true"/>
            <field name="total_elapsed_time" type="NX_NUMBER"/>
            <field name="number_of_processes" type="NX_POSINT"/>
            <field name="number_of_threads" type="NX_POSINT"/>
            <field name="number_of_gpus" type="NX_POSINT"/>
            <group type="NXcs_computer" recommended="true">
                <field name="name" recommended="true"/>
                <field name="operating_system">
                    <attribute name="version"/>
                </field>
                <field name="uuid" optional="true"/>
                <group type="NXcs_cpu" minOccurs="0" maxOccurs="unbounded">
                    <field name="name" optional="true"/>
                    <group type="NXfabrication" recommended="true">
                        <field name="identifier" optional="true"/>
                        <field name="capabilities" optional="true"/>
                    </group>
                </group>
                <group type="NXcs_gpu" minOccurs="0" maxOccurs="unbounded">
                    <field name="name" optional="true"/>
                    <group type="NXfabrication" recommended="true">
                        <field name="identifier" optional="true"/>
                        <field name="capabilities" optional="true"/>
                    </group>
                </group>
                <group type="NXcs_mm_sys" minOccurs="0" maxOccurs="1">
                    <field name="total_physical_memory" type="NX_NUMBER"/>
                </group>
                <group type="NXcs_io_sys" minOccurs="0" maxOccurs="1">
                    <group type="NXcs_io_obj" minOccurs="1" maxOccurs="unbounded">
                        <field name="technology"/>
                        <field name="max_physical_capacity" type="NX_NUMBER"/>
                        <field name="name" optional="true"/>
                        <group type="NXfabrication" recommended="true">
                            <field name="identifier" optional="true"/>
                            <field name="capabilities" optional="true"/>
                        </group>
                    </group>
                </group>
                <group type="NXcs_profiling_event">
                    <field name="start_time" type="NX_DATE_TIME" optional="true"/>
                    <field name="end_time" type="NX_DATE_TIME" optional="true"/>
                    <field name="description"/>
                    <field name="elapsed_time" type="NX_NUMBER"/>
                    <field name="number_of_processes" type="NX_POSINT">
                        <!--exists: recommended-->
                        <doc>
                             Specify if it was different from the number_of_processes
                             in the NXcs_profiling super class.
                        </doc>
                    </field>
                    <field name="number_of_threads" type="NX_POSINT">
                        <!--exists: recommended-->
                        <doc>
                             Specify if it was different from the number_of_threads
                             in the NXcs_profiling super class.
                        </doc>
                    </field>
                    <field name="number_of_gpus" type="NX_POSINT">
                        <!--exists: recommended-->
                        <doc>
                             Specify if it was different from the number_of_threads
                             in the NXcs_profiling super class.
                        </doc>
                    </field>
                    <field name="max_virtual_memory_snapshot" type="NX_NUMBER" recommended="true"/>
                    <field name="max_resident_memory_snapshot" type="NX_NUMBER" recommended="true"/>
                </group>
            </group>
        </group>
    </group>
</definition>
