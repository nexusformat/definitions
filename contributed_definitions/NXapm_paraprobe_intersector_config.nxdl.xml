<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<!--
# NeXus - Neutron and X-ray Common Data Format
#
# Copyright (C) 2024-2025 NeXus International Advisory Committee (NIAC)
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# For further information, see http://www.nexusformat.org
-->
<definition xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" category="application" type="group" name="NXapm_paraprobe_intersector_config" extends="NXobject" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
            The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="n_variable">
            <doc>
                Number of entries
            </doc>
        </symbol>
    </symbols>
    <doc>
        Application definition for a configuration file of the paraprobe-intersector tool.
        
        This tool is part of the paraprobe-toolbox. Inspect :ref:`NXapm_paraprobe_tool_config` for details.
    </doc>
    <group type="NXentry" minOccurs="1" maxOccurs="1">
        <field name="definition" type="NX_CHAR">
            <attribute name="version" type="NX_CHAR"/>
            <enumeration>
                <item value="NXapm_paraprobe_intersector_config"/>
            </enumeration>
        </field>
        <field name="number_of_tasks" type="NX_UINT" units="NX_UNITLESS">
            <doc>
                How many v_v_spatial_correlation tasks should the tool execute.
            </doc>
        </field>
        <group name="v_v_spatial_correlationID" type="NXapm_paraprobe_tool_config" nameType="partial" minOccurs="1" maxOccurs="unbounded">
            <doc>
                Tracking volume_volume_spatial_correlations (v_v) is the process of building logical
                relations between objects, their proximity and eventual volumetric intersections.
                Here, objects are assumed to be represented as a set of triangulated surface meshes.
                
                Volumetric overlap and proximity of volumetric features is identified for members of
                sets of features to members of other sets of volumetric features. Specifically, for each time
                step :math:`k` pairs of sets are compared:
                Members of a so-called current_set to members of a so-called next_set.
                Members can be different types of volumetric features.
            </doc>
            <!--config-->
            <field name="intersection_detection_method" type="NX_CHAR">
                <doc>
                    Specifies the method whereby to decide if two objects intersect volumetrically.
                    For reasons which are detailed in the supplementary material of `M. Kühbach et al. &lt;https://arxiv.org/abs/2205.13510&gt;`_,
                    it is assumed by default that two objects intersect if they share at least one ion with the same evaporation ID (shared_ion).
                    
                    Alternatively, with specifying tetrahedra_intersections, the tool can perform an intersection analysis which attempts to
                    tetrahedralize first each polyhedron. If successful, the tool then checks for at least one pair of intersecting tetrahedra
                    to identify if two objects intersect or not. However, we found that these geometrical analyses can result in corner
                    cases which the tetrahedralization library used in the tests (TetGen) was not unable to tetrahedralize successfully.
                    These cases were virtually always associated with complicated non-convex polyhedra which had portions
                    of the mesh that were connected by almost point like tubes of triangles.
                    
                    Finding more robust methods for computing intersections between not necessarily convex polyhedra might improve
                    the situation in the future. For practical reasons we have thus deactivated the functionality of tetrahedra-tetrahedron
                    intersections in paraprobe-intersector.
                </doc>
                <enumeration>
                    <item value="shared_ion"/>
                </enumeration>
            </field>
            <field name="analyze_intersection" type="NX_BOOLEAN">
                <doc>
                    Specifies if the tool evaluates if objects intersect volumetrically.
                </doc>
            </field>
            <field name="analyze_proximity" type="NX_BOOLEAN">
                <doc>
                    Specifies if the tool evaluates if objects lay closer to one another than
                    threshold_proximity.
                </doc>
            </field>
            <field name="analyze_coprecipitation" type="NX_BOOLEAN">
                <doc>
                    Specifies if the tool evaluates, provided that all (preprocessing tasks were successful), how intersecting
                    or proximity related objects build sub-graphs. This is the feature that was used in `M. Kühbach et al. &lt;https://arxiv.org/abs/2205.13510&gt;`_
                    for the high-throughput analyses of how many objects are coprecipitates in the sense that they are single,
                    duplet, triplet, or high-order local groups.
                </doc>
            </field>
            <!--For these analyses to work has_object_volume needs to be true.-->
            <field name="threshold_proximity" type="NX_FLOAT" units="NX_LENGTH">
                <doc>
                    The maximum Euclidean distance between two objects below which they are
                    considered within proximity.
                </doc>
            </field>
            <field name="has_current_to_next_links" type="NX_BOOLEAN">
                <doc>
                    Specifies if the tool stores the so-called forward relations between nodes representing members of the
                    current_set to nodes representing members of the next_set.
                </doc>
            </field>
            <field name="has_next_to_current_links" type="NX_BOOLEAN">
                <doc>
                    Specifies if the tool stores the so-called backward relations between nodes representing members of the
                    next_set to nodes representing members of the current_set.
                </doc>
            </field>
            <group name="current_set" type="NXparameters">
                <doc>
                    Current set stores a set of members, meshes of volumetric features,
                    which will be checked for proximity and/or volumetric intersection,
                    to members of the current_set.
                    The meshes were generated as a result of some other meshing process.
                </doc>
                <field name="set_identifier" type="NX_UINT" units="NX_ANY">
                    <doc>
                        This identifier can be used to label the current set. The label effectively can be interpreted as the time/iteration (i.e. :math:`k`)
                        step when the current set was taken (see `M. Kühbach et al. 2022 &lt;https://arxiv.org/abs/2205.13510&gt;`_).
                    </doc>
                </field>
                <!--number_of_objects(NX_UINT) for now a support field to tell the tool how many objects to load.-->
                <field name="number_of_feature_types" type="NX_UINT" units="NX_UNITLESS">
                    <doc>
                        The total number of distinguished feature sets featureID.
                        It is assumed that the members within all these featureID sets
                        are representing a set together. As an example this set might represent
                        all volumetric_features. However, users might have formed
                        a subset of this set where individuals were regrouped.
                        For paraprobe-nanochem this is the case for objects and proxies.
                        Specifically, objects are distinguished further into those far
                        from and those close to the edge of the dataset.
                        Similarly, proxies are distinguished further into those far
                        from and those close to the edge of the dataset.
                        So while these four sub-sets contain different so-called types of
                        features, key is that they were all generated for one set, here the
                        current_set.
                    </doc>
                </field>
                <group name="objectID" type="NXparameters" nameType="partial" minOccurs="1" maxOccurs="4">
                    <doc>
                        Name of the (NeXus)/HDF5 file which contains triangulated surface meshes of the
                        members of the set as instances of NXcg_polyhedron.
                    </doc>
                    <field name="feature_type" type="NX_CHAR">
                        <doc>
                            Descriptive category explaining what these features are.
                        </doc>
                        <enumeration>
                            <item value="objects_far_from_edge"/>
                            <item value="objects_close_to_edge"/>
                            <item value="proxies_far_from_edge"/>
                            <item value="proxies_close_to_edge"/>
                            <item value="other"/>
                        </enumeration>
                    </field>
                    <field name="type" type="NX_CHAR"/>
                    <field name="file_name" type="NX_CHAR"/>
                    <field name="checksum" type="NX_CHAR"/>
                    <field name="algorithm" type="NX_CHAR"/>
                    <field name="geometry" type="NX_CHAR">
                        <doc>
                            Absolute path to the group with geometry data in the HDF5 file referred to by
                            path.
                        </doc>
                    </field>
                    <!--currently groupname_geometry_prefix/object<ID>/polyhedron.-->
                    <field name="indices_feature" type="NX_INT" units="NX_UNITLESS">
                        <doc>
                            Array of identifier whereby the path to the geometry data can be inferred
                            automatically.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_variable"/>
                        </dimensions>
                    </field>
                </group>
            </group>
            <group name="next_set" type="NXparameters">
                <doc>
                    Next set stores a set of members, meshes of volumetric features,
                    which will be checked for proximity and/or volumetric intersection,
                    to members of the next_set.
                    The meshes were generated as a result of some other meshing process.
                </doc>
                <field name="set_identifier" type="NX_UINT" units="NX_ANY">
                    <doc>
                        This identifier can be used to label the current set. The label effectively can be interpreted as the time/iteration (i.e. :math:`k + 1`)
                        step when the current set was taken (see `M. Kühbach et al. 2022 &lt;https://arxiv.org/abs/2205.13510&gt;`_).
                    </doc>
                </field>
                <!--number_of_objects(NX_UINT) for now a support field to tell the tool how many objects to load.-->
                <field name="number_of_feature_types" type="NX_UINT" units="NX_UNITLESS">
                    <doc>
                        The total number of distinguished feature sets featureID.
                        It is assumed that the members within all these featureID sets
                        are representing a set together. As an example this set might represent
                        all volumetric_features. However, users might have formed
                        a subset of this set where individuals were regrouped.
                        For paraprobe-nanochem this is the case for objects and proxies.
                        Specifically, objects are distinguished further into those far
                        from and those close to the edge of the dataset.
                        Similarly, proxies are distinguished further into those far
                        from and those close to the edge of the dataset.
                        So while these four sub-sets contain different so-called types of
                        features key is that they were all generated for one set, here the
                        next_set.
                    </doc>
                </field>
                <group name="objectID" type="NXparameters" nameType="partial" minOccurs="1" maxOccurs="4">
                    <field name="feature_type" type="NX_CHAR">
                        <doc>
                            Descriptive category explaining what these features are.
                        </doc>
                        <enumeration>
                            <item value="objects_far_from_edge"/>
                            <item value="objects_close_to_edge"/>
                            <item value="proxies_far_from_edge"/>
                            <item value="proxies_close_to_edge"/>
                        </enumeration>
                    </field>
                    <field name="type" type="NX_CHAR"/>
                    <field name="file_name" type="NX_CHAR"/>
                    <field name="checksum" type="NX_CHAR"/>
                    <field name="algorithm" type="NX_CHAR"/>
                    <field name="geometry" type="NX_CHAR">
                        <doc>
                            Absolute path to the group with geometry data in the HDF5 file referred to by
                            path.
                        </doc>
                    </field>
                    <!--currently groupname_geometry_prefix/object<ID>/polyhedron.-->
                    <field name="indices_feature" type="NX_INT" units="NX_UNITLESS">
                        <doc>
                            Array of identifier whereby the path to the geometry data can be inferred
                            automatically.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_variable"/>
                        </dimensions>
                    </field>
                </group>
            </group>
        </group>
        <!--MK::tetrahedra volume intersection and tessellation and Nef polyhedra intersection are considered guru features
what one is doing here before using these functionalities-->
        <group name="common" type="NXapm_paraprobe_tool_common">
            <field name="status" type="NX_CHAR"/>
            <group type="NXprogram" minOccurs="1" maxOccurs="unbounded">
                <field name="program" type="NX_CHAR">
                    <attribute name="version" type="NX_CHAR"/>
                </field>
            </group>
            <group name="profiling" type="NXcs_profiling" recommended="true">
                <field name="start_time" type="NX_DATE_TIME"/>
                <field name="end_time" type="NX_DATE_TIME"/>
                <field name="total_elapsed_time" type="NX_FLOAT"/>
                <field name="current_working_directory" type="NX_CHAR"/>
            </group>
        </group>
    </group>
</definition>
